"use strict";(self.webpackChunkdocs_sikt_no=self.webpackChunkdocs_sikt_no||[]).push([[4486],{815:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"iam/integrasjoner/bergHansen_integrasjon","title":"BergHansen","description":"PortalLdapToBergHansenCSV","source":"@site/docs/iam/integrasjoner/bergHansen_integrasjon.md","sourceDirName":"iam/integrasjoner","slug":"/iam/integrasjoner/bergHansen_integrasjon","permalink":"/docs/iam/integrasjoner/bergHansen_integrasjon","draft":false,"unlisted":false,"editUrl":"https://github.com/sikt-no/docs/tree/master/docs/iam/integrasjoner/bergHansen_integrasjon.md","tags":[],"version":"current","lastUpdatedAt":1757592112000,"frontMatter":{"title":"BergHansen"}}');var s=t(4848),l=t(8453);const i={title:"BergHansen"},o=void 0,d={},a=[{value:"PortalLdapToBergHansenCSV",id:"portalldaptoberghansencsv",level:2},{value:"Description",id:"description",level:3},{value:"Input Parameters",id:"input-parameters",level:3},{value:"Local Variables",id:"local-variables",level:3},{value:"Workflow",id:"workflow",level:3},{value:"External Systems and Communications",id:"external-systems-and-communications",level:3},{value:"Response Codes/Outputs",id:"response-codesoutputs",level:3},{value:"Summary",id:"summary",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"portalldaptoberghansencsv",children:"PortalLdapToBergHansenCSV"}),"\n",(0,s.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"This script generates a CSV file containing employee data formatted for Berg-Hansen. It retrieves data from a Portal LDAP, processes it, and optionally uploads the file to a remote SFTP server."}),"\n",(0,s.jsx)(n.h3,{id:"input-parameters",children:"Input Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"log_only"}),": Boolean indicating whether to only log the output without uploading it to the remote server."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"local-variables",children:"Local Variables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"genderTitleMap"}),": A mapping of gender codes to titles (Mr/Ms)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"gender"}),": A variable to store the gender of the employee."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"date"}),": The current date formatted as ",(0,s.jsx)(n.code,{children:"yyyyMMdd"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"hours"}),": The current time formatted as ",(0,s.jsx)(n.code,{children:"HHmmss"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"outputFileName"}),": The name of the output CSV file."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"localFilePath"}),": The local directory path where the output file will be saved."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sessionPortalLDAP"}),": Connection object for Portal LDAP."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fileOut"}),": The file output object for writing the CSV file."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"remoteFileSys"}),": The remote filesystem object for SFTP connection."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ldapRecords"}),": The set of records fetched from Portal LDAP."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"outputData"}),": An array to store the formatted output data."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"recordBergHansen"}),": A record object to store the formatted data for each employee."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"formattedBirthdate"}),": The formatted birthdate of the employee."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"selectedUsername"}),": The selected username for the employee."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"selectedEmail"}),": The selected email address for the employee."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"splitDeptCode"}),": An array containing the split department code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"numRecords"}),": The number of records in the output data array."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"formattedTime"}),": The current date and time formatted as ",(0,s.jsx)(n.code,{children:"yyyy-MM-dd HH:mm:ss:ms"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"outputStr"}),": The final output string to be written to the CSV file."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"result"}),": The result of the file save operation."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"workflow",children:"Workflow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Initialize Variables"})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Set initial values for variables and format the current date and time."}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Create Connections"})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Establish a connection to Portal LDAP."}),"\n",(0,s.jsx)(n.li,{children:"Handle connection errors by logging and returning."}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Open Output File"})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Open the local output file for writing in ISO-8859-1 character set."}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"log_only"})," is false, establish a remote SFTP connection."]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Query Records"})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Fetch employee records from Portal LDAP based on specific filters and attributes."}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Process Records"})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Iterate over each LDAP record and format the data for Berg-Hansen."}),"\n",(0,s.jsxs)(n.li,{children:["Populate the ",(0,s.jsx)(n.code,{children:"recordBergHansen"})," object with formatted values."]}),"\n",(0,s.jsxs)(n.li,{children:["Append the formatted record to the ",(0,s.jsx)(n.code,{children:"outputData"})," array."]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"6",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Write Data"})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Insert the header row into the ",(0,s.jsx)(n.code,{children:"outputData"})," array."]}),"\n",(0,s.jsx)(n.li,{children:"Join the array into a single string and write it to the local output file."}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"log_only"})," is false, upload the file to the remote SFTP server."]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"7",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Close Connections"})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Close the local output file and the Portal LDAP connection."}),"\n",(0,s.jsx)(n.li,{children:"If a remote SFTP connection was established, close it as well."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"external-systems-and-communications",children:"External Systems and Communications"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Portal LDAP"}),": Used to fetch employee records and attributes."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Remote SFTP Server"}),": Optionally used to upload the generated CSV file."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"response-codesoutputs",children:"Response Codes/Outputs"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The script logs the output data and the result of the file save operation."}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"log_only"})," is false, the script uploads the file to the remote SFTP server and logs the result."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(n.p,{children:"This script generates a CSV file containing employee data formatted for Berg-Hansen. It retrieves data from Portal LDAP, processes it, and optionally uploads the file to a remote SFTP server. The script handles various data formatting requirements and ensures that the output is correctly structured for Berg-Hansen's needs."}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(6540);const s={},l=r.createContext(s);function i(e){const n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);