"use strict";(self.webpackChunkdocs_sikt_no=self.webpackChunkdocs_sikt_no||[]).push([[9103],{6245:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=s(4848),t=s(8453);const r={},a="How to create Variable metadata",l={id:"kudaf/variables-create",title:"How to create Variable metadata",description:"The root level fields",source:"@site/docs/kudaf/variables-create.md",sourceDirName:"kudaf",slug:"/kudaf/variables-create",permalink:"/docs/kudaf/variables-create",draft:!1,unlisted:!1,editUrl:"https://github.com/sikt-no/docs/tree/master/docs/kudaf/variables-create.md",tags:[],version:"current",lastUpdatedAt:1725370563e3,frontMatter:{},sidebar:"kudaf",previous:{title:"Variables and Metadata",permalink:"/docs/kudaf/variables"},next:{title:"Enable data sharing with KUDAF",permalink:"/docs/kudaf/data-sharing"}},o={},d=[{value:"The root level fields",id:"the-root-level-fields",level:2},{value:"Measure Variable data structure",id:"measure-variable-data-structure",level:2},{value:"Valid Period",id:"valid-period",level:3},{value:"Value Domain",id:"value-domain",level:3},{value:"Examples of the two possible value domains",id:"examples-of-the-two-possible-value-domains",level:3},{value:"Described value domain (with <code>description</code>)",id:"described-value-domain-with-description",level:4},{value:"Enumerated value domain (with <code>codeList</code>)",id:"enumerated-value-domain-with-codelist",level:4},{value:"Measure Variables with <code>keyType</code>",id:"measure-variables-with-keytype",level:2},{value:"Identifier Variable data structure",id:"identifier-variable-data-structure",level:2},{value:"Possible Unit Types",id:"possible-unit-types",level:3},{value:"Attribute Variable data structure",id:"attribute-variable-data-structure",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"how-to-create-variable-metadata",children:"How to create Variable metadata"})}),"\n",(0,i.jsx)(n.h2,{id:"the-root-level-fields",children:"The root level fields"}),"\n",(0,i.jsxs)(n.p,{children:["The fields on the above schema ",(0,i.jsx)(n.strong,{children:"describe the Variable as a whole"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": Must adhere to the Variable naming guidelines above."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"datastore_id"}),": The Datatset/",(0,i.jsx)(n.strong,{children:"source of the data"})," represented by this Variable."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"temporalityType"}),": The temporality type of the Variable. Must be one of FIXED, ACCUMULATED, STATUS or EVENT."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"populationDescription"}),": Description of the ",(0,i.jsx)(n.strong,{children:"population described"})," by the Variable."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"spatialCoverageDescription"}),": Description of the ",(0,i.jsx)(n.strong,{children:"spatial distribution"})," of the data described by the Variable."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"sensitivityLevel"}),": The sensitivity type of the data described by the Variable. Must be one of PERSON_GENERAL, PERSON_SPECIAL, PUBLIC, NONPUBLIC."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"identifierVariables"}),": A list containing data structure(s) that ",(0,i.jsx)(n.strong,{children:"describe(s) the unique identifier(s)"})," (like a ",(0,i.jsx)(n.em,{children:"primary key"})," in a database) ",(0,i.jsxs)(n.strong,{children:["which singles out this particular ",(0,i.jsx)(n.em,{children:"datum"})]}),". This is what ",(0,i.jsx)(n.strong,{children:"allows us to associate the measured value with a unit of measure"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"measureVariable"}),": A list containing data structure(s) that ",(0,i.jsxs)(n.strong,{children:["describe(s) what is ",(0,i.jsx)(n.em,{children:"measured"})," by this particular ",(0,i.jsx)(n.em,{children:"datum"})]}),". Most of the time there would be a single item, as with a ",(0,i.jsx)(n.em,{children:"datum"})," we want to single out the simplest possible measure, but perhaps in the future there might be use cases where we need more than one."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"attributeVariables"}),": An optional list containing data structures that ",(0,i.jsx)(n.strong,{children:"describe the datum's relationship to time, i.e. the EVENT PERIOD"}),". It's optional because it depends on the Temporality Type of the Variable, and the ",(0,i.jsx)(n.code,{children:"FIXED"})," type is time-invariant."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The Measure, Attribute and Identifier Variables data structures are explained in more detail below."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"measure-variable-data-structure",children:"Measure Variable data structure"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Description of the measured column"})," of the Variable. It is represented as a list in the metadata model, but currently only one measure is allowed per Variable."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class MeasureVariable:\n    name: str\n    variableRole: str\n    label: str\n    dataType: str\n    keyType: KeyType\n    representedVariables: list[RepresentedVariable]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Fields:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": A ",(0,i.jsx)(n.strong,{children:"single string in capital letters"}),", consisting of ",(0,i.jsx)(n.strong,{children:"keywords separated by underscores"})," (",(0,i.jsx)(n.code,{children:"_"}),"), which ",(0,i.jsxs)(n.strong,{children:["describes what each ",(0,i.jsx)(n.em,{children:"datum"})," is measuring"]}),". As such, it ",(0,i.jsx)(n.strong,{children:"must be the same as root-level name of the Variable"})," data structure (see above Variable naming guidelines)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"label"}),': Human readable name (Label) of the measure column. This should be similar to the Variable\'s name. Example for PERSON_INNTEKT: "Person inntekt".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"dataType"}),': DataType for the values in the column. One of: ["STRING", "LONG", "DOUBLE", "DATE"]']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://statswiki.unece.org/display/clickablegsim/Represented+Variable",children:"representedVariables"})}),": List (though normally just one element) that ",(0,i.jsx)(n.strong,{children:"describes more in detail what kind of data (the WHAT and the HOW)"})," we can find. It's a ",(0,i.jsx)(n.strong,{children:"combination of"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"What"}),": A ",(0,i.jsx)(n.strong,{children:"characteristic"})," of a population to be measured, and"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"How"})," the measure will be ",(0,i.jsx)(n.strong,{children:"represented"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class RepresentedVariable:\n    description: Description\n    validPeriod: ValidPeriod\n    valueDomain: ValueDomainDescribed | ValueDomainEnumerated\n"})}),"\n",(0,i.jsx)(n.p,{children:"Fields within a Represented Variable:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"description"}),': Description of the column contents. Example: "Skattepliktig og skattefritt utbytte i... "']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"validPeriod"}),": See definition below."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"valueDomain"}),": See definition below."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"valid-period",children:"Valid Period"}),"\n",(0,i.jsxs)(n.p,{children:["A simple data structure that shows the ",(0,i.jsx)(n.strong,{children:"beginning and end dates when the data is considered valid"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class ValidPeriod:\n    start: datetime\n    stop: datetime\n"})}),"\n",(0,i.jsx)(n.h3,{id:"value-domain",children:"Value Domain"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Value Domain"})," describes the ",(0,i.jsx)(n.strong,{children:"set of permissible values of the data represented"})," by the Variable. Depending on the measure, this description can become quite complex. Hence we simplifly it by having ",(0,i.jsx)(n.strong,{children:"two possible types"})," of Value Domain:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Enumerated Value Domain"}),": When there is a ",(0,i.jsx)(n.strong,{children:"manageable (finite list) of possible data values"}),", we provide an ",(0,i.jsx)(n.strong,{children:"enumeration of the possiblities, i.e. a list of Categories"}),". An example could be a person's sex."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Described Value Domain"}),": When the possibilites are either infinite or just too many to manage (think of the list of all the National IDs or phone numbers, for example), we settle for a ",(0,i.jsx)(n.strong,{children:"verbal description of the values"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Below are the ",(0,i.jsx)(n.strong,{children:"schemas"})," for these two types of Value Domain."]}),"\n",(0,i.jsxs)(n.p,{children:["For the ",(0,i.jsx)(n.strong,{children:"Described Value Domain"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class ValueDomainDescribed:\n    uriDefinition: list[str]\n    description: Description | str\n    measurementType: str\n    measurementUnitDescription: str\n"})}),"\n",(0,i.jsx)(n.p,{children:"Where:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"description"}),': A description of the domain. Example for the Variable "BRUTTO_INNTEKT": "Alle positive tall".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"measurementUnitDescription"}),': The metric for a measurement in terms of an official unit of measurement. Example: "Norske Kroner".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"measurementType"}),': The type of measure which groups a set of measurement units. One of: [CURRENCY, WEIGHT, LENGTH, HEIGHT, GEOGRAPHICAL]. Where the CURRENCY type would group "Norske Kroner", "US Dollar", "Euro", etc.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"uriDefinition"}),": Link(s) to external resource(s) describing the domain."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["And for the ",(0,i.jsx)(n.strong,{children:"Enumerated Value Domain"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class ValueDomainEnumerated:\n    uriDefinition: list[str]\n    codeList: list[Code]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Where:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"codeList"}),": A ",(0,i.jsx)(n.strong,{children:"list of Categories for the domain, where each Category has a predefined Code assigned to it"}),". Each of these Codes includes a description and validity period."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Code:\n    categoryTitle: list[Description]\n    code: str\n    validPeriod: ValidPeriod\n"})}),"\n",(0,i.jsx)(n.h3,{id:"examples-of-the-two-possible-value-domains",children:"Examples of the two possible value domains"}),"\n",(0,i.jsxs)(n.h4,{id:"described-value-domain-with-description",children:["Described value domain (with ",(0,i.jsx)(n.code,{children:"description"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["This example belongs to a Variable where the ",(0,i.jsx)(n.strong,{children:"measure is a person's accumulated gross income"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'"valueDomain": {\n    "uriDefinition": [],\n    "description": [{"languageCode": "no", "value": "Norske Kroner"}],\n    "measurementType": "CURRENCY",\n    "measurementUnitDescription": [{"languageCode": "no", "value": "Norske Kroner"}]\n}\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"enumerated-value-domain-with-codelist",children:["Enumerated value domain (with ",(0,i.jsx)(n.code,{children:"codeList"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["The second example belongs to a Variable where the ",(0,i.jsx)(n.strong,{children:"measure describes the sex of a person"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'"valueDomain": {\n    "uriDefinition": [],\n    "codeList": [\n        {\n            "code": "1",\n            "categoryTitle": [\n                {"languageCode": "no", "value": "Mann"}\n                ],\n            "validFrom": "1900-01-01"\n        },\n        {\n            "code": "2",\n            "categoryTitle": [\n                {"languageCode": "no", "value": "Kvinne"}\n                ],\n            "validFrom": "1900-01-01"\n        }\n    ],\n    "sentinelAndMissingValues": [\n        {\n            "code": "0",\n            "categoryTitle": [\n                {"languageCode": "no", "value": "Ukjent"}\n                ],\n            "validFrom": "1900-01-01"\n        }\n    ]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:'We expect all values in this dataset to be of either code "1" or "2", as this Variable only considers "Male" or "Female". But we also expect a code "0" to be present in the Variable, where it represents "Unknown". A row with "0" as measure is therefore not considered invalid.'}),"\n",(0,i.jsxs)(n.h2,{id:"measure-variables-with-keytype",children:["Measure Variables with ",(0,i.jsx)(n.code,{children:"keyType"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Some of th Variables contain a ",(0,i.jsx)(n.code,{children:"keyType"})," in the Measure Variable data structure"]})," as well. This is characteristic of Identifier Variables, as we'll see below, but sometimes we need a ",(0,i.jsx)(n.strong,{children:"Variable which links together (relates) two Identifier Variables"}),". (The equivalent concept in a relational database would be a ",(0,i.jsx)(n.strong,{children:"Foreign Key"}),")."]}),"\n",(0,i.jsx)(n.p,{children:'As an example, let\'s say we have a Variable PERSON_MOR where the Identifier Variable field is a population of Unit Type "PERSON", and the Measure Variable is a population of Unit Type "PERSON". The measure here is representing the population\'s mothers.'}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"keyType"})," data structure describes in detail the Unit Type"]})," for this Variable's identifier column. As explained, these are centrally defined to ensure consistency. Examples are: ORGANISASJON, TJENESTELEVERAND\xd8R, FAMILIE, FORETAK, HUSHOLDNING, JOBB, KJORETOY, KOMMUNE, KURS, PERSON or VIRKSOMHET."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class KeyType:\n    description: Description | str\n    label: str\n    name: str\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then it may be defined like this:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"keyType"}),": In this case we would choose PERSON."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),': Human readable name (Label) of the measure column. This should be similar to the Variable\'s name. Example for PERSON_MOR: "Person mor".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"description"}),': Description of the column contents. Example: "Personens registrerte biologiske mor... "']}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"identifier-variable-data-structure",children:"Identifier Variable data structure"}),"\n",(0,i.jsxs)(n.p,{children:["This data structure ",(0,i.jsx)(n.strong,{children:"describes the indentifier columns"})," of the Variable."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsxs)(n.strong,{children:["identifiers are always based on a ",(0,i.jsx)(n.a,{href:"https://statswiki.unece.org/display/clickablegsim/Unit+Type",children:"Unit Type"})]}),", which is used to describe a class or group of Units based on a single characteristic, but with no specification of time and geography."]}),"\n",(0,i.jsxs)(n.p,{children:["They are needed so we can ",(0,i.jsx)(n.strong,{children:"associate a Measure Variable with a Unit of Measure"})," (or more than one in some cases). A Unit is ",(0,i.jsx)(n.strong,{children:"centrally defined to make joining datasets across organizations possible"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Schema of an Identifier Variable:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class IdentifierVariable:\n    name: str\n    variableRole: str\n    label: str\n    dataType: str\n    format: str\n    keyType: KeyType\n    representedVariables: list[RepresentedVariable]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Fields:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": A ",(0,i.jsx)(n.strong,{children:"single string in capital letters"}),", consisting of ",(0,i.jsxs)(n.strong,{children:["the name of the identifier field for the ",(0,i.jsx)(n.em,{children:"datum"})]})," (e.g ",(0,i.jsx)(n.code,{children:"PERSON_ID"}),"). Note that this would typically be equivalent to the original database table's primary key field."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"label"}),": Human readable name (Label) of the identifier column. This should be similar to the field ",(0,i.jsx)(n.code,{children:"name"}),' above (e.g. for PERSON_ID: "Person ID").']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"dataType"}),': DataType for the values in the column. One of: ["STRING", "LONG", "DOUBLE", "DATE"]']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"representedVariables"}),": Same as for the Measure Variable described before. A list (normally just one) that ",(0,i.jsx)(n.strong,{children:"describes more in detail what kind of data"})," we can find. It's a ",(0,i.jsx)(n.strong,{children:"combination of"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A ",(0,i.jsx)(n.strong,{children:"characteristic"})," of a population to be measured, and"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"How"})," the measure will be ",(0,i.jsx)(n.strong,{children:"represented"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"keyType"})," data structure describes in detail the ",(0,i.jsx)(n.a,{href:"https://statswiki.unece.org/display/clickablegsim/Unit+Type",children:"Unit Type"})]})," for this Variable's identifier column. As explained, these are centrally defined to ensure consistency. Examples are: ORGANISASJON, TJENESTELEVERAND\xd8R, FAMILIE, FORETAK, HUSHOLDNING, JOBB, KJORETOY, KOMMUNE, KURS, PERSON or VIRKSOMHET."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class KeyType:\n    description: Description | str\n    label: str\n    name: str\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"possible-unit-types",children:["Possible ",(0,i.jsx)(n.a,{href:"https://statswiki.unece.org/display/clickablegsim/Unit+Type",children:"Unit Types"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ORGANISASJON"}),": Representation of an organization. Columns with this unit type should contain ORGNR. Columns with this unit type should contain ORGNR."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TJENESTELEVERAND\xd8R"}),": Representation of a service provider. Columns with this unit type should contain SPID."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PERSON"}),": Representation of a person. Columns with this unit type should contain FNR."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"FAMILIE"}),": Representation of a family. Columns with this unit type should contain FNR."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"FORETAK"}),": Representation of a foretak. Columns with this unit type should contain ORGNR."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"VIRKSOMHET"}),": Representation of a virksomhet. Columns with this unit type should contain ORGNR."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"HUSHOLDNING"}),": Representation of a husholdning. Columns with this unit type should contain FNR."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"JOBB"}),": Representation of a job. Columns with this unit type should contain FNR_ORGNR. FNR belongs to the employee and ORGNR belongs to the employer."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"KOMMUNE"}),": Representation of a kommune. Columns with this unit type should contain a valid kommune number."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"KURS"}),": Representation of a course. Columns with this unit type should contain FNR_KURSID. Where FNR belongs to the participant and KURSID is the NUDB course id."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"KJORETOY"}),": Representation of a vehicle. Columns with this unit type should contain FNR_REGNR. Where FNR is the owner of the vehicle, and REGNR is the registration number for the vehicle."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["(",(0,i.jsx)(n.strong,{children:"TO DO"}),"): Identifier Variable examples"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"attribute-variable-data-structure",children:"Attribute Variable data structure"}),"\n",(0,i.jsxs)(n.p,{children:["This data structure ",(0,i.jsx)(n.strong,{children:"describes TEMPORAL attributes"})," of this particular ",(0,i.jsx)(n.em,{children:"datum"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["It is ",(0,i.jsx)(n.strong,{children:"optional"})," because not every ",(0,i.jsx)(n.em,{children:"datum"})," has a relationship to time \u2013 the Event Period."]}),"\n",(0,i.jsxs)(n.p,{children:["Hence, ",(0,i.jsx)(n.strong,{children:"depending on the Temporality Type"})," of the Variable:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["For a ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"FIXED"})})," temporality type Variable (i.e. time-invariant) we ",(0,i.jsx)(n.strong,{children:"DO NOT include"})," an Attribute Variable."]}),"\n",(0,i.jsxs)(n.li,{children:["For an ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ACCUMULATED"})})," temporality type Variable we would ",(0,i.jsx)(n.strong,{children:"typically DO include TWO"})," Attribute Variables: ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"START"})," and ",(0,i.jsx)(n.code,{children:"STOP"})]}),". If only one is included, that would mean:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"All data until"})," the given stop time ",(0,i.jsxs)(n.strong,{children:["if only ",(0,i.jsx)(n.code,{children:"STOP"})]})," is included, and since the earliest available data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"All data since"})," the given start time ",(0,i.jsxs)(n.strong,{children:["if only ",(0,i.jsx)(n.code,{children:"START"})]})," is included, and up until the latest available data."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["For a ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"STATUS"})})," temporality type Variable we ",(0,i.jsx)(n.strong,{children:"always DO include TWO"})," Attribute Variables: ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"START"})," and ",(0,i.jsx)(n.code,{children:"STOP"}),", with THE SAME dates"]}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["For an ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"EVENT"})})," temporality type Variable we ",(0,i.jsx)(n.strong,{children:"DO include ONE or TWO"})," Attribute Variables, depending on how we want to characterize the Event in question. It could be: ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"START"})," and ",(0,i.jsx)(n.code,{children:"STOP"})," dates/times"]}),", or ",(0,i.jsx)(n.code,{children:"INSTANT"}),"..."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Schema of an Attribute Variable:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class AttributeVariable:\n    name: str\n    variableRole: str\n    label: str\n    dataType: str\n    representedVariables: list[RepresentedVariable]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Fields:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": A ",(0,i.jsx)(n.strong,{children:"single string in capital letters"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"label"}),": Human readable name (Label). This should be similar to the field ",(0,i.jsx)(n.code,{children:"name"}),' above (e.g. for START: "Start").']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"dataType"}),': DataType for the values in the column. One of: ["STRING", "LONG", "DOUBLE", "DATE", "INSTANT"]']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"representedVariables"}),": Same as for the Measure Variable described before."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Below is an ",(0,i.jsx)(n.strong,{children:"example of the Attribute Variables for an ACCUMULATED temporality type Variable"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'"attributeVariables": [\n    {\n        "dataType": "Instant",\n        "label": "Stoppdato",\n        "name": "STOP",\n        "representedVariables": [\n            {\n                "description": {\n                    "languageCode": "nb",\n                    "value": "Stoppdato/sluttdato for hendelsen"\n                },\n                "validPeriod": {\n                    "start": -25567,\n                    "stop": 18993\n                },\n                "valueDomain": {\n                    "description": "N/A",\n                    "unitOfMeasure": "N/A"\n                }\n            }\n        ],\n        "variableRole": "Stop"\n    },\n    {\n        "dataType": "Instant",\n        "label": "Startdato",\n        "name": "START",\n        "representedVariables": [\n            {\n                "description": {\n                    "languageCode": "nb",\n                    "value": "Startdato/m\xe5letidspunktet for hendelsen"\n                },\n                "validPeriod": {\n                    "start": -25567,\n                    "stop": 18993\n                },\n                "valueDomain": {\n                    "description": "N/A",\n                    "unitOfMeasure": "N/A"\n                }\n            }\n        ],\n        "variableRole": "Start"\n    }\n]\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(6540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);