"use strict";(self.webpackChunkdocs_sikt_no=self.webpackChunkdocs_sikt_no||[]).push([[5397],{5558:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var i=n(4848),r=n(8453);const t={title:"REST API"},o=void 0,d={id:"iam/rest-api-en",title:"REST API",description:"This defines the proposed SCIM interface to be provided by IGA",source:"@site/docs/iam/rest-api-en.md",sourceDirName:"iam",slug:"/iam/rest-api-en",permalink:"/docs/iam/rest-api-en",draft:!1,unlisted:!1,editUrl:"https://github.com/sikt-no/docs/tree/master/docs/iam/rest-api-en.md",tags:[],version:"current",lastUpdatedAt:1724854619e3,frontMatter:{title:"REST API"}},a={},c=[{value:"Persons vs Accounts",id:"persons-vs-accounts",level:2},{value:"Minimal implementation requirements",id:"minimal-implementation-requirements",level:2},{value:"Events",id:"events",level:2},{value:"Recommended features",id:"recommended-features",level:2},{value:"Field name specification",id:"field-name-specification",level:2},{value:"User <code>.id</code>",id:"user-id",level:3},{value:"User <code>.meta</code>",id:"user-meta",level:3},{value:"User <code>.userName</code>",id:"user-username",level:3},{value:"User <code>.displayName</code>",id:"user-displayname",level:3},{value:"User <code>.name</code>",id:"user-name",level:3},{value:"User <code>.active</code>",id:"user-active",level:3},{value:"User <code>.externalId</code>",id:"user-externalid",level:3},{value:"User <code>.emails</code>",id:"user-emails",level:3},{value:"User <code>.phoneNumbers</code>",id:"user-phonenumbers",level:3},{value:"User <code>.profileUrl</code>",id:"user-profileurl",level:3},{value:"User <code>.entitlements</code>",id:"user-entitlements",level:3},{value:"User <code>.roles</code>",id:"user-roles",level:3},{value:"User <code>.no:edu:scim:user</code>",id:"user-noeduscimuser",level:3},{value:"User <code>.no:edu:scim:user.accountType</code>",id:"user-noeduscimuseraccounttype",level:3},{value:"User <code>.no:edu:scim:user.employeeNumber</code>",id:"user-noeduscimuseremployeenumber",level:3},{value:"User <code>.no:edu:scim:user.studentNumber</code>",id:"user-noeduscimuserstudentnumber",level:3},{value:"User <code>.no:edu:scim:user.fsPersonNumber</code>",id:"user-noeduscimuserfspersonnumber",level:3},{value:"User <code>.no:edu:scim:user.norEduPersonNIN</code>",id:"user-noeduscimusernoredupersonnin",level:3},{value:"User <code>.no:edu:scim:user.eduPersonPrincipalName</code>",id:"user-noeduscimuseredupersonprincipalname",level:3},{value:"User <code>.no:edu:scim:user.userPrincipalName</code>",id:"user-noeduscimuseruserprincipalname",level:3},{value:"User <code>.enterprise</code>",id:"user-enterprise",level:3},{value:"User <code>.enterprise.employeeNumber</code>",id:"user-enterpriseemployeenumber",level:3},{value:"User <code>.enterprise.costCenter</code>",id:"user-enterprisecostcenter",level:3},{value:"User <code>.enterprise.organization</code>",id:"user-enterpriseorganization",level:3},{value:"User <code>.enterprise.division</code>",id:"user-enterprisedivision",level:3},{value:"User <code>.enterprise.departement</code>",id:"user-enterprisedepartement",level:3},{value:"User <code>.enterprise.manager</code>",id:"user-enterprisemanager",level:3}];function l(e){const s={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:["This defines the proposed ",(0,i.jsx)(s.a,{href:"https://tools.ietf.org/html/rfc7643",children:"SCIM"})," interface to be provided by IGA\nimplementations in the Norwegian higher education sector. The main use case for this API is to provide\nfor IntArk-style provisioning of user accounts."]}),"\n",(0,i.jsxs)(s.p,{children:["A functional mock-up of this API is available from\n",(0,i.jsx)(s.a,{href:"https://api-uib.intark.uh-it.no/#!/apis/91a73d99-d9b2-452a-a73d-99d9b2e52a9a/detail",children:"UiBs API Gateway"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["The standard paths of SCIM are ",(0,i.jsx)(s.code,{children:"/Users"}),", ",(0,i.jsx)(s.code,{children:"/Users/{id}"}),", ",(0,i.jsx)(s.code,{children:"/Groups"})," and ",(0,i.jsx)(s.code,{children:"/Groups/{id}"}),". We only care for\nthe user endpoints for now."]}),"\n",(0,i.jsx)(s.h2,{id:"persons-vs-accounts",children:"Persons vs Accounts"}),"\n",(0,i.jsx)(s.p,{children:"SCIM is basically designed as a REST-style replacement for LDAP.  As such it\nhas the same ambiguity on what the User objects represents \u2014 are they people or\nare they accounts that belong to people (and other entities)."}),"\n",(0,i.jsxs)(s.p,{children:["In this context we declare them to be ",(0,i.jsx)(s.em,{children:"accounts"})," and we suggest that we might extend our\nSCIM implementation with ",(0,i.jsx)(s.em,{children:"Person"})," objects later. In this model a person might be\nthe owner of multiple accounts.  We also consider one of these accounts as this\nperson's primary account.  The User objects of the primary account will have a\nmix of attributes describing the account and attributes describing the person."]}),"\n",(0,i.jsx)(s.p,{children:"We might also have accounts that don't belong to any person. This might\nbe accounts representing devices, applications or other systems."}),"\n",(0,i.jsx)(s.h2,{id:"minimal-implementation-requirements",children:"Minimal implementation requirements"}),"\n",(0,i.jsx)(s.p,{children:"This section defines what the lazy implementer might get away with."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Implement ",(0,i.jsx)(s.code,{children:"/Users"})," with ability to page through the available accounts. An implementation might choose to just expose the Feide-enabled accounts."]}),"\n",(0,i.jsxs)(s.li,{children:["Implement ",(0,i.jsx)(s.code,{children:"/Users/{id}"})," fetch data for the specified account."]}),"\n",(0,i.jsxs)(s.li,{children:["Implement ",(0,i.jsx)(s.code,{children:'/Users?filter=userName eq "..."'})," to make it possible to look up a specific account."]}),"\n",(0,i.jsxs)(s.li,{children:["Implement ",(0,i.jsx)(s.code,{children:"/Users?userName=..."})," as a more convenient non-standard version of the same."]}),"\n",(0,i.jsxs)(s.li,{children:["Make ",(0,i.jsx)(s.code,{children:"/Groups"})," functional, but it's fine for it to just return the empty ",(0,i.jsx)(s.code,{children:"ListResponse"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Post MQ message when a user object is created, modified or deleted."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"The following fields should minimally be provided on user objects."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:".id"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:".meta"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:".userName"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:".active"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:".displayName"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:".name.formatted"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:".name.givenName"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:".name.familyName"})}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:'.emails[].type == "work"'})," with a corresponding ",(0,i.jsx)(s.code,{children:".value"})]}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:".no:edu:scim:user.accountType"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:".no:edu:scim:user.employeeNumber"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:".no:edu:scim:user.eduPersonPrincipalName"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:".no:edu:scim:user.userPrincipalName"})}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"events",children:"Events"}),"\n",(0,i.jsxs)(s.p,{children:["Updates to the objects exposed in this API is signaled by events to the IntArk MQ\nand follows the proposed\n",(0,i.jsx)(s.a,{href:"https://tools.ietf.org/html/draft-hunt-scim-notify-00",children:"SCIM Event Extension"})," structure.\nSince IntArk prefers shallow messages, we don't include the ",(0,i.jsx)(s.code,{children:".values"})," attribute."]}),"\n",(0,i.jsx)(s.p,{children:"These events are encoded in JSON and looks like this:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "schemas": ["urn:ietf:params:scim:schemas:notify:2.0:Event"],\n  "resourceUris": [\n     "https://gw-uib.intark.uh-it.no/iga/scim/v2/Users/362ff2749bfb11eabbd5600308a4105a"\n  ],\n  "type":"MODIFY",\n  "attributes": ["emails", "name.givenName", "no:edu:scim:user:userPrincipalName"]\n}\n'})}),"\n",(0,i.jsx)(s.p,{children:'Example topic for the message is "no.uib.iga.scim.user.modify".'}),"\n",(0,i.jsx)(s.h2,{id:"recommended-features",children:"Recommended features"}),"\n",(0,i.jsx)(s.p,{children:"This section expands on the minimal requirements and define some features that\nmight be useful and that we prefer all implementations to consider."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Implement ",(0,i.jsx)(s.code,{children:"/Users?employeeNumber=..."})]}),"\n",(0,i.jsxs)(s.li,{children:["Implement ",(0,i.jsx)(s.code,{children:"/Users?studentNumber=..."})]}),"\n",(0,i.jsxs)(s.li,{children:["Implement ",(0,i.jsx)(s.code,{children:"/Users?fsPersonNumber=..."})]}),"\n",(0,i.jsxs)(s.li,{children:["Implement ",(0,i.jsx)(s.code,{children:"/Users?norEduPersonNIN=..."})]}),"\n",(0,i.jsxs)(s.li,{children:["Implement functional ",(0,i.jsx)(s.code,{children:"/Groups"})," and ",(0,i.jsx)(s.code,{children:"/Groups/{id}"})," that expose the same groups available from LDAP/AD."]}),"\n",(0,i.jsxs)(s.li,{children:["More attributes on user objects, especially ",(0,i.jsx)(s.code,{children:".phoneNumbers"})," and ",(0,i.jsx)(s.code,{children:".enterprise.manager"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Search for users by name and other attributes."}),"\n",(0,i.jsxs)(s.li,{children:["Implement ",(0,i.jsx)(s.code,{children:"/Persons"})," and ",(0,i.jsx)(s.code,{children:"/Persons/{id}"})," endpoints. A schema for person objects is yet to be defined."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"field-name-specification",children:"Field name specification"}),"\n",(0,i.jsxs)(s.h3,{id:"user-id",children:["User ",(0,i.jsx)(s.code,{children:".id"})]}),"\n",(0,i.jsxs)(s.p,{children:["This should preferably be UUID-style string, but the service is free to\nuse other formats, like letting the ",(0,i.jsx)(s.code,{children:".userName"})," be the ",(0,i.jsx)(s.code,{children:".id"}),".  It should be possible\nto request the JSON object representing this user with an URL-path of ",(0,i.jsx)(s.code,{children:"/Users/{id}"}),"\nwhere the ",(0,i.jsx)(s.code,{children:"{id}"})," is replaced by the value of this field."]}),"\n",(0,i.jsxs)(s.h3,{id:"user-meta",children:["User ",(0,i.jsx)(s.code,{children:".meta"})]}),"\n",(0,i.jsx)(s.p,{children:"Standard SCIM meta information on this object."}),"\n",(0,i.jsxs)(s.h3,{id:"user-username",children:["User ",(0,i.jsx)(s.code,{children:".userName"})]}),"\n",(0,i.jsxs)(s.p,{children:["The format of the username value should be ",(0,i.jsx)(s.code,{children:"{local-username}@{fqdn}"}),".  SCIM allows\nbare usernames, as well as usernames qualified with a domain. For consistency we always\nreturn fully qualified names."]}),"\n",(0,i.jsxs)(s.p,{children:["This attribute is unique; no other User object will have the same ",(0,i.jsx)(s.code,{children:".userName"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"{local-username}"})," part must fully match the regexp pattern ",(0,i.jsx)(s.code,{children:"/[a-z][a-z0-9]{0,11}/"}),"\nand the full name will only contain lower case letters."]}),"\n",(0,i.jsxs)(s.p,{children:["Example value: ",(0,i.jsx)(s.code,{children:"gaa041@uib.no"})]}),"\n",(0,i.jsxs)(s.h3,{id:"user-displayname",children:["User ",(0,i.jsx)(s.code,{children:".displayName"})]}),"\n",(0,i.jsxs)(s.p,{children:["For the primary account this is the same as ",(0,i.jsx)(s.code,{children:".name.formatted"}),".\nFor other accounts this can be any string that is suitable for\nexplaining the purpose of this account."]}),"\n",(0,i.jsxs)(s.h3,{id:"user-name",children:["User ",(0,i.jsx)(s.code,{children:".name"})]}),"\n",(0,i.jsx)(s.p,{children:"This is the name of the owner of this account.  This attribute is\nmandatory for primary accounts.  Example value:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n    "formatted": "Gisle Aas",\n    "familyName": "Aas",\n    "givenName": "Gisle"\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["These attributes should be latinified versions of the name of the person.\nIf different, the original native name of the person can be represented by the\nnon-standard attributes ",(0,i.jsx)(s.code,{children:"nativeFormatted"}),", ",(0,i.jsx)(s.code,{children:"nativeFamilyName"}),", ",(0,i.jsx)(s.code,{children:"nativeGivenName"}),"."]}),"\n",(0,i.jsxs)(s.h3,{id:"user-active",children:["User ",(0,i.jsx)(s.code,{children:".active"})]}),"\n",(0,i.jsxs)(s.p,{children:["Boolean value which is set to ",(0,i.jsx)(s.code,{children:"false"})," for accounts that should be disabled.\nUsers should not be able to login using this account. Any active session\nusing this account should also be terminated."]}),"\n",(0,i.jsxs)(s.h3,{id:"user-externalid",children:["User ",(0,i.jsx)(s.code,{children:".externalId"})]}),"\n",(0,i.jsxs)(s.p,{children:["The identifier of the person that owns this account. It is preferable that\n",(0,i.jsx)(s.code,{children:"/Persons/{externalId}"})," fetches information on the person.  For UH-IAM this\nfield will be the UH-ID (a person oriented UUID value)."]}),"\n",(0,i.jsxs)(s.h3,{id:"user-emails",children:["User ",(0,i.jsx)(s.code,{children:".emails"})]}),"\n",(0,i.jsx)(s.p,{children:'The email addresses associated with this account. The email addresses are\ntagged with a type field.  The tag "work" is used for the main email address,\neven for students.'}),"\n",(0,i.jsx)(s.p,{children:"Example value:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'[\n    { "type": "work",     "value": "Gisle.Aas@uib.no" },\n    { "type": "internal", "value": "gaa041@uib.no" },\n    { "type": "vanity",   "value": "gisle@uib.no" }\n]\n'})}),"\n",(0,i.jsxs)(s.h3,{id:"user-phonenumbers",children:["User ",(0,i.jsx)(s.code,{children:".phoneNumbers"})]}),"\n",(0,i.jsx)(s.p,{children:'The public phone numbers associated with this account.  The phone numbers are\ntagged with a type field. The tag "work" used for preferred contact option.  The\ntag "mobile" can be used when the mobile phone is not the preferred option.\nThe tag "secure" is a phone suitable for use as 2nd-factor verification (via SMS).'}),"\n",(0,i.jsx)(s.p,{children:'The phone numbers themselves are represented in the full international format\nprefixed with "+" and without internal spaces or dashes.'}),"\n",(0,i.jsx)(s.p,{children:"Example value:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'[\n    { "type": "work",    "value": "+4793241450" },\n    { "type": "secure",  "value": "+4793241450" },\n    { "type": "mobile",  "value": "+4793241450" }\n]\n'})}),"\n",(0,i.jsxs)(s.h3,{id:"user-profileurl",children:["User ",(0,i.jsx)(s.code,{children:".profileUrl"})]}),"\n",(0,i.jsx)(s.p,{children:"URL of the university home page for the owner of this account."}),"\n",(0,i.jsxs)(s.h3,{id:"user-entitlements",children:["User ",(0,i.jsx)(s.code,{children:".entitlements"})]}),"\n",(0,i.jsx)(s.p,{children:"List of strings representing entitlements for this account. Not sure if we\nshould use this for anything."}),"\n",(0,i.jsxs)(s.h3,{id:"user-roles",children:["User ",(0,i.jsx)(s.code,{children:".roles"})]}),"\n",(0,i.jsx)(s.p,{children:'List of business roles associated with this user.\nApply the tags "staff", "guest" or "student" when appropriate. This\nlist of roles might be extended later.\nUniversities can introduce private roles by prefixing them with\ntheir reverse domain name, e.g. "no.uib.breiflabb".'}),"\n",(0,i.jsxs)(s.h3,{id:"user-noeduscimuser",children:["User ",(0,i.jsx)(s.code,{children:".no:edu:scim:user"})]}),"\n",(0,i.jsxs)(s.p,{children:["This attribute contains the object where we extend the user object with\nfields specific to Norwegian UH domain. The string is also the name\nof a schema and should be found in the ",(0,i.jsx)(s.code,{children:".schemas"})," attribute as well."]}),"\n",(0,i.jsxs)(s.h3,{id:"user-noeduscimuseraccounttype",children:["User ",(0,i.jsx)(s.code,{children:".no:edu:scim:user.accountType"})]}),"\n",(0,i.jsx)(s.p,{children:'Describe what kind of account this is.\nThe value is "primary" for the primary account of a person.\nEach person can only have a single primary account.'}),"\n",(0,i.jsx)(s.p,{children:'The value is "admin" for accounts to be used for privileged access and other\nadministrative puposes.'}),"\n",(0,i.jsx)(s.p,{children:'The value is "test" for accounts that is used for testing only.'}),"\n",(0,i.jsx)(s.p,{children:'The value is "rpa" for accounts used by automation scripts.'}),"\n",(0,i.jsxs)(s.h3,{id:"user-noeduscimuseremployeenumber",children:["User ",(0,i.jsx)(s.code,{children:".no:edu:scim:user.employeeNumber"})]}),"\n",(0,i.jsx)(s.p,{children:"This is the DF\xd8 ID for the employee that owns this account.\nOnly present for primary accounts."}),"\n",(0,i.jsxs)(s.h3,{id:"user-noeduscimuserstudentnumber",children:["User ",(0,i.jsx)(s.code,{children:".no:edu:scim:user.studentNumber"})]}),"\n",(0,i.jsx)(s.p,{children:"This is the student number for the person that owns this account.\nOnly present for primary accounts."}),"\n",(0,i.jsxs)(s.h3,{id:"user-noeduscimuserfspersonnumber",children:["User ",(0,i.jsx)(s.code,{children:".no:edu:scim:user.fsPersonNumber"})]}),"\n",(0,i.jsx)(s.p,{children:"This is the FS ID (personl\xf8penummer) for the person that owns this account.\nThis field can only be present for primary accounts."}),"\n",(0,i.jsxs)(s.h3,{id:"user-noeduscimusernoredupersonnin",children:["User ",(0,i.jsx)(s.code,{children:".no:edu:scim:user.norEduPersonNIN"})]}),"\n",(0,i.jsx)(s.p,{children:'This is the Norwegian "f\xf8dselsnummer" for the person that owns this account.\nThe identifier can be a real NIN, a D-number og S-number.\nThis field can only be present for primary accounts.'}),"\n",(0,i.jsx)(s.p,{children:"This attribute value is somewhat confidential and should only be passed to clients with\nspecial reasons to require this."}),"\n",(0,i.jsxs)(s.h3,{id:"user-noeduscimuseredupersonprincipalname",children:["User ",(0,i.jsx)(s.code,{children:".no:edu:scim:user.eduPersonPrincipalName"})]}),"\n",(0,i.jsx)(s.p,{children:"The Feide-ID of this user account is specified in this field.\nThis field is absent for accounts not available through Feide."}),"\n",(0,i.jsxs)(s.p,{children:["It will have the same value as the ",(0,i.jsx)(s.code,{children:"eduPersonPrincipalName"})," attribute\nin LDAP and specified ",(0,i.jsx)(s.a,{href:"https://docs.feide.no/reference/schema/attributes/edupersonprincipalname.html#saml-attribute-edupersonprincipalname",children:"norEdu*"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Example value: ",(0,i.jsx)(s.code,{children:"gaa041@uib.no"})]}),"\n",(0,i.jsxs)(s.h3,{id:"user-noeduscimuseruserprincipalname",children:["User ",(0,i.jsx)(s.code,{children:".no:edu:scim:user.userPrincipalName"})]}),"\n",(0,i.jsxs)(s.p,{children:["This is the login name for Microsoft login.\nThis is the same attribute as ",(0,i.jsx)(s.code,{children:"userPrincipalName"})," in AD and Azure AD."]}),"\n",(0,i.jsxs)(s.p,{children:["It would be a good idea for this value to be the same as ",(0,i.jsx)(s.code,{children:".eduPersonPrincipalName"}),"\nbut UiB has unfortunately diverged."]}),"\n",(0,i.jsxs)(s.p,{children:["Example value: ",(0,i.jsx)(s.code,{children:"Gisle.Aas@uib.no"})]}),"\n",(0,i.jsxs)(s.h3,{id:"user-enterprise",children:["User ",(0,i.jsx)(s.code,{children:".enterprise"})]}),"\n",(0,i.jsxs)(s.p,{children:["This is the standard SCIM enterprise extension object.\nThe real full name of this attribute is ",(0,i.jsx)(s.code,{children:"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User"}),"\nbut we shortened references to it in this description to ",(0,i.jsx)(s.code,{children:".enterprise"}),". The wire protocol\nwill use the full name."]}),"\n",(0,i.jsx)(s.p,{children:"Implementations are not required to provide this extension."}),"\n",(0,i.jsxs)(s.h3,{id:"user-enterpriseemployeenumber",children:["User ",(0,i.jsx)(s.code,{children:".enterprise.employeeNumber"})]}),"\n",(0,i.jsxs)(s.p,{children:["This is the DF\xd8 ID for the employee that owns this account.\nIf both are present, this should have the same value as ",(0,i.jsx)(s.code,{children:".no:edu:scim:user.employeeNumber"}),"."]}),"\n",(0,i.jsxs)(s.h3,{id:"user-enterprisecostcenter",children:["User ",(0,i.jsx)(s.code,{children:".enterprise.costCenter"})]}),"\n",(0,i.jsx)(s.p,{children:"This is the account number used for expenses related to the owner of this account.\nNot sure if this is useful."}),"\n",(0,i.jsxs)(s.h3,{id:"user-enterpriseorganization",children:["User ",(0,i.jsx)(s.code,{children:".enterprise.organization"})]}),"\n",(0,i.jsx)(s.p,{children:"The Norwegian name of the organisation that the owner of this account belongs to.\nFor staff and students this will be the name of the school.  For guest this\nmight be the name of the organisation they come from."}),"\n",(0,i.jsxs)(s.h3,{id:"user-enterprisedivision",children:["User ",(0,i.jsx)(s.code,{children:".enterprise.division"})]}),"\n",(0,i.jsx)(s.p,{children:"The Norwegian name of primary faculty that the owner of this account belongs to."}),"\n",(0,i.jsxs)(s.h3,{id:"user-enterprisedepartement",children:["User ",(0,i.jsx)(s.code,{children:".enterprise.departement"})]}),"\n",(0,i.jsx)(s.p,{children:"The Norwegian name of primary institute that the owner of this account belongs to."}),"\n",(0,i.jsxs)(s.h3,{id:"user-enterprisemanager",children:["User ",(0,i.jsx)(s.code,{children:".enterprise.manager"})]}),"\n",(0,i.jsx)(s.p,{children:"For primary accounts, this is set to reference the primary user account of the manager of the person that owns this account.\nAll non-primary accounts should set this to reference the primary account of their owner."}),"\n",(0,i.jsxs)(s.p,{children:["Additional information on the manager can be obtained from ",(0,i.jsx)(s.code,{children:"/Users/{enterprise.manager.id}"}),".\nThe ",(0,i.jsx)(s.code,{children:".enterprise.manager.displayName"})," is just a copy of the ",(0,i.jsx)(s.code,{children:".displayName"})," of the manager account itself."]}),"\n",(0,i.jsx)(s.p,{children:"Example value:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n    "id": "452ff2749bfb11eabbd5600308a4105a",\n    "displayName": "Nina Kaurel"\n}\n'})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>d});var i=n(6540);const r={},t=i.createContext(r);function o(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);