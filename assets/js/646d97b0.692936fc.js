"use strict";(self.webpackChunkdocs_sikt_no=self.webpackChunkdocs_sikt_no||[]).push([[9737],{3681:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/ws-mq-sirkel-4bd045e962bb27a031ce3cb8a351aca0.png"},6638:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"datadeling/god-praksis/integrasjonsmonster/hendelsesbasert","title":"Hendelsesbasert provisjonering","description":"Detaljer om integrasjonsm\xf8nsteret kalt \\"hendelsesbasert provisjonering\\".","source":"@site/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert.md","sourceDirName":"datadeling/god-praksis/integrasjonsmonster","slug":"/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/","permalink":"/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/","draft":false,"unlisted":false,"editUrl":"https://github.com/sikt-no/docs/tree/master/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert.md","tags":[],"version":"current","lastUpdatedAt":1757585746000,"frontMatter":{"slug":"/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/","title":"Hendelsesbasert provisjonering"},"sidebar":"datadeling","previous":{"title":"Gammeldags fullstendig provisjonering","permalink":"/docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/"},"next":{"title":"Hvordan designe dine notifikasjoner","permalink":"/docs/datadeling/god-praksis/notifikasjonsdesign/"}}');var s=t(4848),i=t(8453);const a={slug:"/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/",title:"Hendelsesbasert provisjonering"},l=void 0,d={},o=[{value:"Hvorfor dette m\xf8nsteret?",id:"hvorfor-dette-m\xf8nsteret",level:2},{value:"Teknisk flyt",id:"teknisk-flyt",level:2},{value:"N\xe5r b\xf8r dette brukes?",id:"n\xe5r-b\xf8r-dette-brukes",level:2},{value:"Fordeler",id:"fordeler",level:2},{value:"Ulemper",id:"ulemper",level:2},{value:"Eksempler",id:"eksempler",level:2},{value:"Fallgruver",id:"fallgruver",level:2},{value:"Se ogs\xe5",id:"se-ogs\xe5",level:2}];function k(e){const n={a:"a",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:'Detaljer om integrasjonsm\xf8nsteret kalt "hendelsesbasert provisjonering".'}),"\n",(0,s.jsx)(n.p,{children:"Dette integrasjonsm\xf8nsteret anbefales for tjenester som trenger \xe5\nprovisjoneres, og som har nytte av \xe5 bli raskt oppdatert med nye data. For\neksempel n\xe5r brukerne forventer at data er oppdaterte tiln\xe6rmet umiddelbart, og\nikke dagen etterp\xe5."}),"\n",(0,s.jsx)(n.p,{children:"M\xf8nsteret fungerer ved at datatilbyder tilbyr sine data via et API, og sender\nut notifikasjoner (tynne meldinger) n\xe5r det skjer endringer i dataene som\ntilbys. Konsumentene lytter etter notifikasjoner fra datatilbyder, og henter\nrelevante data fra API-et."}),"\n",(0,s.jsx)(n.p,{children:"Fellestjenesten tar seg av \xe5 distribuere notifikasjonene fra datatilbyder til\nalle konsumenter som er interesserte. Datatilbyder trenger da bare \xe5 forholde\nseg til meldingsk\xf8en og ikke hver enkelt konsument."}),"\n",(0,s.jsx)(n.h2,{id:"hvorfor-dette-m\xf8nsteret",children:"Hvorfor dette m\xf8nsteret?"}),"\n",(0,s.jsx)(n.p,{children:"Dette m\xf8nsteret gj\xf8r at mindre data trenger \xe5 overf\xf8res, og at konsumentene kan\nbli oppdatert umiddelbart. Dette uten behov for \xe5 hente absolutt alle data fra\ntilbyderen, eller at datatilbyder m\xe5 selv dytte data ut til hver enkelt\nkonsument."}),"\n",(0,s.jsxs)(n.p,{children:["Tradisjonelt har man brukt tunge, filbaserte\n",(0,s.jsx)(n.a,{href:"/docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch",children:"batch-oppdateringer"}),"\nfor \xe5 provisjonere tjenester. Dette er ikke en effektiv m\xe5te \xe5 integrere\np\xe5, fordi produsenten m\xe5 samle og overf\xf8re komplette datasett, og konsumenten\nm\xe5 sammenligne det komplette datasettet i hver runde. Det hendelsesbaserte\nm\xf8nsteret effektiviserer integrasjonen, og gj\xf8r at bare n\xf8dvendige data kan\noverf\xf8res, raskere."]}),"\n",(0,s.jsx)(n.p,{children:'M\xf8nsteret er ikke designet for tjenester som trenger historiske data eller\ntrenger \xe5 "spille av" tidligere endringer. Slike tjenester vil fort kunne ha\nbehov for mer komplisert funksjonalitet, enten at datatilbyder eller konsument\nlagrer slik historikk selv, eller mer avansert mellomvare enn enkle\nmeldingsk\xf8er.'}),"\n",(0,s.jsx)(n.p,{children:"Bruken av meldingsk\xf8er for \xe5 h\xe5ndtere notifikasjoner om endringer er valgt av\ntekniske grunner. Meldingsk\xf8er er effektive og lite kompliserte, og gj\xf8r at\ndatatilbyder slipper \xe5 m\xe5tte forholde seg til hver enkelt konsument i\nutsendingen. Alternative metoder, som HTTP-kall eller websockets, har ikke v\xe6rt\nmodne nok og har f\xf8rt til mer kompleksitet hos datatilbyder, og har derfor\nblitt valgt bort. Tekniske endringer i fremtiden kan endre p\xe5 denne\nanbefalingen."}),"\n",(0,s.jsx)(n.h2,{id:"teknisk-flyt",children:"Teknisk flyt"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Illustrasjon av flyt mellom kilde og konsument i m\xf8nsteret",src:t(3681).A+"",width:"814",height:"434"})}),"\n",(0,s.jsx)(n.p,{children:"En typisk flyt med dette integrasjonsm\xf8nsteret:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Datatilbyder f\xe5r endret data om en entitet, for eksempel fordi en\nsaksbehandler gj\xf8r endringer."}),"\n",(0,s.jsx)(n.li,{children:"Datatilbyder sender ut en notifikasjon til meldingsk\xf8-tjenesten, RabbitMQ,\nom at noe har skjedd. Notifikasjonen inneholder lite data, annet enn hvilken\nentitet det gjelder."}),"\n",(0,s.jsx)(n.li,{children:"Meldingsk\xf8-tjenesten tar i mot notifikasjonen og distribuerer den videre til\nalle konsumenter som abonnerer p\xe5 dataene de gjelder."}),"\n",(0,s.jsx)(n.li,{children:"Konsumenten mottar notifikasjonen, og ser om den er relevant."}),"\n",(0,s.jsx)(n.li,{children:"Konsumenten henter ut data fra kildesystemet sitt API."}),"\n",(0,s.jsx)(n.li,{children:"Konsumenten oppdaterer sine interne data."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Hvis konsumenten selv er tilbyder av andre kildedata som blir oppdatert basert\np\xe5 dette, vil konsumenten bytte rolle til datatilbyder og g\xe5 gjennom samme\nprosessen. Et eksempel p\xe5 dette er at en ansatt f\xe5r endret sitt navn i\npersonalsystemet, som gj\xf8r at e-posttjenesten endrer prim\xe6r e-postadresse, som\ngj\xf8r at andre konsumenter endrer sine data. I dette tilfellet kan ogs\xe5\npersonalsystemet v\xe6re en konsument og oppdatere den ansatte sin e-postadresse\nindirekte grunnet navneendringen. Merk at e-posttjenesten skal ikke sende ut\nnotifikasjoner om at navn er endret, siden det er personalsystemets ansvar,\nmen bare for endret e-postadresse."}),"\n",(0,s.jsx)(n.p,{children:"Et eksempel fra flyten over:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"En saksbehandler endrer mobilnummeret til en ansatt i personalsystemet\n(datatilbyderen)."}),"\n",(0,s.jsx)(n.li,{children:'Personalsystemet sender notifikasjonen "person-objekt med id 123 er endret"\ntil RabbitMQ.'}),"\n",(0,s.jsx)(n.li,{children:"RabbitMQ sender notifikasjonen videre til konsumentene som abonnerer p\xe5 de.\nEn av disse kan v\xe6re et CMS med personpresentasjoner."}),"\n",(0,s.jsx)(n.li,{children:"CMS mottar notifikasjon om at person 123 er endret. CMS ser at denne\npersonen er registrert hos seg, og trenger derfor \xe5 reagere."}),"\n",(0,s.jsx)(n.li,{children:"CMS kaller p\xe5 API-et til tjenesten, via API manager, og henter ut data om\npersonen. Avhengig av granulariteten til datatilbyder, vil CMS enten f\xe5\nreturnert mobilnummeret eller flere personopplysninger."}),"\n",(0,s.jsx)(n.li,{children:"CMS sammenlikner personopplysningene, og oppdatere data som er endret."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"n\xe5r-b\xf8r-dette-brukes",children:"N\xe5r b\xf8r dette brukes?"}),"\n",(0,s.jsx)(n.p,{children:"Dette m\xf8nsteret passer n\xe5r du trenger \xe5 provisjonere et endesystem med\nkildedata fra en tilbyder, uten at sluttbrukeren er involvert."}),"\n",(0,s.jsx)(n.p,{children:"Dette m\xf8nsteret b\xf8r brukes n\xe5r noen forventer at data er tilgjengelig tiln\xe6rmet\numiddelbart, eller n\xe5r fortl\xf8pende oppdateringer gir en bedre brukeropplevelse."}),"\n",(0,s.jsx)(n.p,{children:"Det er ofte en kost-nytte-vurdering om raskt oppdaterte data gir nok gevinster\ntil \xe5 veie opp for kostnadene. Ofte blir gevinstene undervurderte, da indirekte\nkostnader ikke blir inkludert - n\xe5r data blir raskt oppdaterte \xf8ker tilliten\ntil de og de blir brukt mer og av flere konsumenter."}),"\n",(0,s.jsx)(n.h2,{id:"fordeler",children:"Fordeler"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:'Data blir oppdatert raskere i mange systemer - "tiln\xe6rmet umiddelbart". Dette\ngir ofte en bedre brukeropplevelse, og mer tillit til dataene og tjenesten.'}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Mye mindre ressurskrevende enn det eldre m\xf8nsteret der du henter ",(0,s.jsx)(n.strong,{children:"alle"}),"\ndata fra kilden, og oppdaterer konsumenten."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"ulemper",children:"Ulemper"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Passer best for system-til-system-integrasjoner."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Har du veldig mange konsumenter vil det sette h\xf8yere krav til ytelsen hos\ndatatilbyder. Dette kan kompenseres ved for eksempel caching i API manager."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"\xc5 implementere notifikasjonsutsending hos datatilbyder kan v\xe6re krevende \xe5\nimplementere. Det kan ogs\xe5 v\xe6re ukjent teknologi for mange utviklere."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"M\xf8nsteret koster mer \xe5 implementere enn en gammeldags fullsynk."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"eksempler",children:"Eksempler"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://api-portal.dfo.no/",children:"DF\xd8 sine API"})," st\xf8tter utsending av hendelser n\xe5r\ndet skjer endringer i deres API. Overf\xf8ring av notifikasjoner fra DF\xd8 til din\ninstitusjon m\xe5 settes opp - ta kontakt."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Flere IGA-l\xf8sninger, som Rapid Identity og Cerebrum, st\xf8tter utsending av\nhendelser n\xe5r det skjer endringer p\xe5 brukerkontoer og grupper."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Flere og flere tjenester i sektoren st\xf8tter utsending av notifikasjoner ved\nendringer i sine data, spesielt de som utvikles av sektoren selv."}),"\n",(0,s.jsx)(n.h2,{id:"fallgruver",children:"Fallgruver"}),"\n",(0,s.jsxs)(n.p,{children:["Datatilbyder skal bare sende ut notifikasjoner n\xe5r data faktisk er ",(0,s.jsx)(n.strong,{children:"endret"}),"\nhos seg selv, og ",(0,s.jsx)(n.strong,{children:"ikke"})," sende ut notifikasjoner bare fordi tjenesten har\nmottatt notifikasjoner fra andre. Falske positive notifikasjoner vil f\xf8re til\nmer ressursbruk, siden det kan f\xf8re til un\xf8dvendige API-oppslag fra\nkonsumenter. I verste fall vil du kunne f\xe5 evige meldingsl\xf8kker hvis to\nsystemer som snakker sammen gj\xf8r samme feilen - de vil sende samme\nnotifikasjonen fram og tilbake, uten stopp."]}),"\n",(0,s.jsx)(n.p,{children:"Notifikasjonene er tynne - inneholder f\xe5 data - men de vil likevel kunne\ninneholde personopplysninger: en identifikator til en person eller til data som\ntilh\xf8rer en enkelt person. Notifikasjonene m\xe5 derfor behandles som\npersonopplysninger. Fordelen med at notifikasjonene er tynne, er at du\nreduserer risikoen for at de inneholder personopplysninger som krever\nekstraordin\xe6re tiltak, for eksempel helseopplysninger, da dette skal beskyttes\nbak datatilbyders API."}),"\n",(0,s.jsx)(n.h2,{id:"se-ogs\xe5",children:"Se ogs\xe5"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/datadeling/god-praksis/notifikasjonsdesign",children:"Utforming av notifikasjoner"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(k,{...e})}):k(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(6540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);