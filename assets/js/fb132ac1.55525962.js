"use strict";(self.webpackChunkdocs_sikt_no=self.webpackChunkdocs_sikt_no||[]).push([[4134],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),k=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=k(e.components);return r.createElement(o.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),g=k(t),u=a,p=g["".concat(o,".").concat(u)]||g[u]||m[u]||s;return t?r.createElement(p,i(i({ref:n},d),{},{components:t})):r.createElement(p,i({ref:n},d))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=g;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var k=2;k<s;k++)i[k]=t[k];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},6678:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>k});var r=t(7462),a=(t(7294),t(3905));const s={title:"Anbefalinger rundt Webservice"},i=void 0,l={unversionedId:"datadeling/god-praksis/bruk-av-webservice",id:"datadeling/god-praksis/bruk-av-webservice",title:"Anbefalinger rundt Webservice",description:"Fellestjenesten fokuserer p\xe5 teknologi kalt Webservice (WS), og anbefaler",source:"@site/docs/datadeling/god-praksis/bruk-av-webservice.md",sourceDirName:"datadeling/god-praksis",slug:"/datadeling/god-praksis/bruk-av-webservice",permalink:"/docs/datadeling/god-praksis/bruk-av-webservice",draft:!1,editUrl:"https://github.com/sikt-no/docs/tree/master/docs/datadeling/god-praksis/bruk-av-webservice.md",tags:[],version:"current",lastUpdatedAt:1699254904,formattedLastUpdatedAt:"Nov 6, 2023",frontMatter:{title:"Anbefalinger rundt Webservice"},sidebar:"datadeling",previous:{title:"API-design",permalink:"/docs/datadeling/god-praksis/api-design/"},next:{title:"Tilgang til data",permalink:"/docs/datadeling/god-praksis/informasjonsforvaltning/api-tilganger"}},o={},k=[{value:"Hva er en Webservice?",id:"hva-er-en-webservice",level:2},{value:"En WS-basert modell",id:"en-ws-basert-modell",level:2},{value:"Meldingsk\xf8 (MQ)",id:"meldingsk\xf8-mq",level:3},{value:"Autoritativ kilde",id:"autoritativ-kilde",level:3},{value:"Hvem m\xe5 ha\xa0en WS?",id:"hvem-m\xe5-haen-ws",level:2},{value:"Datalager",id:"datalager",level:3},{value:"Hvordan skal\xa0et API i en WS se ut?",id:"hvordan-skalet-api-i-en-ws-se-ut",level:2},{value:"RESTful",id:"restful",level:3},{value:"Niv\xe5 0: RPC over HTTP",id:"niv\xe5-0-rpc-over-http",level:4},{value:"Niv\xe5 1: Ressurser",id:"niv\xe5-1-ressurser",level:4},{value:"Niv\xe5 2: HTTP verb",id:"niv\xe5-2-http-verb",level:4},{value:"Niv\xe5 3:\xa0Hypermedia Controls/HATEOAS",id:"niv\xe5-3hypermedia-controlshateoas",level:4},{value:"Entitetsbasert API",id:"entitetsbasert-api",level:3},{value:"Funksjonelt API",id:"funksjonelt-api",level:3},{value:"Hvorfor anbefale Webservice?",id:"hvorfor-anbefale-webservice",level:2},{value:"Hub &amp; spoke-modellen",id:"hub--spoke-modellen",level:3}],d={toc:k};function m(e){let{components:n,...s}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,s,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Fellestjenesten fokuserer p\xe5 teknologi kalt ",(0,a.kt)("em",{parentName:"p"},"Webservice")," (WS), og anbefaler\ndenne teknologien for \xe5 dele data."),(0,a.kt)("h2",{id:"hva-er-en-webservice"},"Hva er en Webservice?"),(0,a.kt)("p",null,"En Webservice (WS) er en del av en tjeneste som tilbyr et standardisert\ngrensesnitt\n(",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Application_programming_interface"},"API"),") for \xe5\nlese- og/eller skrive tjenestens data. WS bruker web-basert teknologi, som\nHTTP. En WS kan v\xe6re en del av tjenesten eller en l\xf8srevet komponent med eget\nlivsl\xf8p."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Eksempel p\xe5 en webservice som konsumenter snakker med",src:t(7442).Z,width:"866",height:"428"})),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Konsumenter sp\xf8r kildens WS om data. Flere konsumenter kan benytte samme WS.")),(0,a.kt)("h2",{id:"en-ws-basert-modell"},"En WS-basert modell"),(0,a.kt)("p",null,"Datatilbydere er ansvarlig for \xe5 tilby sine data gjennom et API, som\nkonsumenten kan bruke. Konsumentene f\xe5r kun tilgang til de funksjonene som\navtales p\xe5 forh\xe5nd."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Illustrasjon av en WS sitt API, og konsumenter som leser data",src:t(1690).Z,width:"844",height:"598"})),(0,a.kt)("p",null,"API-et b\xf8r utformes med fokus p\xe5 hva som er virksomhetens data, og forenkles\nder det er mulig. API-et m\xe5 for eksempel ikke eksponere interne datastrukturer,\nmen noe som er forst\xe5elig og funksjonelt for utenforst\xe5ende. Interne data,\nsom ikke er interessante for andre, eksponeres ikke."),(0,a.kt)("p",null,"API-et b\xf8r ogs\xe5 utformes etter hva som er de generelle behovene, og ikke\nbehov/\xf8nsker som gjelder en enkelt konsument. Spesialtilpasninger b\xf8r ligge hos\nkonsumenten og ikke datatilbyder."),(0,a.kt)("p",null,"I etableringen av en WS-basert integrasjon vil kostnaden knyttet v\xe6re likt\neller dyrere sammenlignet med andre m\xe5ter \xe5 integrere p\xe5 (for eksempel\nfilbasert eller leverand\xf8r-spesifikk svart-boks-integrasjoner). Det er n\xe5r\nWS-en allerede tilbyr et rikt API at datatilbyde vil se gevinsten: Konsumenter\nkan selv skaffe data gjennom WS-en, uten \xe5 trenge spesialtilpasninger fra\ndatatilbyder. En bonuseffekt er at konsumenter ikke trenger \xe5 m\xe5tte vente p\xe5\nutvikling hos datatilbyder."),(0,a.kt)("h3",{id:"meldingsk\xf8-mq"},"Meldingsk\xf8 (MQ)"),(0,a.kt)("p",null,"En meldingsk\xf8 (MQ) er en tjeneste som gir kilder\xa0mulighet til \xe5 sende beskjed\nom at data er endret. I eldre integrasjoner baserer man seg ofte p\xe5\nfulldumper \u2013 alts\xe5 filer med alle data en konsument trenger. Dette er kostbart,\ns\xe5rbart og tregt. Med en meldingsk\xf8 er tanken at en kilde sender ut en\nnotifikasjon n\xe5r data har endret seg, som kan v\xe6re av interesse for\nkonsumenter. Notifikasjonen er ikke n\xf8dvendigvis informasjonsb\xe6rende nok til at\nkonsumenten kan foreta en endring, men forteller konsumenten at den m\xe5 hente\ndata p\xe5 nytt for \xe5 sjekke egne data mot den autoritative kilden. Dette gj\xf8res\nmed en lenke til det ber\xf8rte objektet."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Illustrasjon av meldingsk\xf8, tilbydere og konsumenter",src:t(1854).Z,width:"1024",height:"510"})),(0,a.kt)("p",null,"Notifikasjoner sendes fra kildene inn til meldingsk\xf8en. Konsumentene velger\nselv hvilke notifikasjoner de \xf8nsker \xe5 abonnere p\xe5."),(0,a.kt)("p",null,"Notifikasjoner skal\xa0ikke inneholde utfyllende informasjon, av flere grunner:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"F\xe6rre personopplysninger i notfikasjoner forenkler tilgangsstyringen.\nSpesielt personopplysninger som krever ekstra beskyttelse ville kunne skapt\nutfordringer for meldingsk\xf8er.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Notifikasjonene blir mindre tidskritiske, d\xe5 konsumenter blir tvunget til \xe5\nhente korrekt og oppdatert informasjon fra datatilbyders API. For eksempel\nunng\xe5r du at en gammel notifikasjon om at et objekt har blitt slettet ville\nf\xf8rt til at konsumenten slettet objektet - det kan hende at objektet i\nmellomtiden har blitt gjenopprettet.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Dette er et enkelt integrasjonsm\xf8nster som spesielt passer for\nprovisjoneringer."))),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(5e3).Z,width:"814",height:"434"})),(0,a.kt)("p",null,"Kilden sender en notifikasjon til en meldingsk\xf8 som videresender denne til\nkonsumenter som abonnerer p\xe5 denne typen notifikasjoner. Notifikasjonen sier at\nkonsumenten m\xe5 hente data om en entitet for \xe5 se om endringen skal reflekteres\ni konsumenten."),(0,a.kt)("h3",{id:"autoritativ-kilde"},"Autoritativ kilde"),(0,a.kt)("p",null,"Datatilbydere b\xf8r i utgangspunktet bare tilby data de er autoritative for, som\nvil si at det er denne tjenesten som ",(0,a.kt)("em",{parentName:"p"},"eier")," denne typen data hos institusjonen"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"s\xe5kalt ",(0,a.kt)("em",{parentName:"li"},"masterdata")," eller ",(0,a.kt)("em",{parentName:"li"},"kildedata"),". Eierskapet besluttes av institusjonen\nselv.")),(0,a.kt)("p",null,"Dette betyr at WS-en i utgangspunktet bare b\xf8r eksponere data som tjenesten er\nautoritativ for. Det sier ogs\xe5 at konsumenter m\xe5 hente data fr\xe5 autoritativ\nkilde, og ikke via andre tjenester. Unntaket er velbrukte katalogtjenester der\ndata tilbys p\xe5 vegne av andre datatilbydere."),(0,a.kt)("h2",{id:"hvem-m\xe5-haen-ws"},"Hvem m\xe5 ha\xa0en WS?"),(0,a.kt)("p",null,"Ikke alle tjenester m\xe5 ha en WS. Kravet om WS inntreffer hovedsaklig n\xe5r en\nkilde sitter p\xe5 data som andre tjenester burde hatt tilgang til. Har kilden\nsv\xe6rt f\xe5 integrasjoner og dette ikke vil \xf8ke i fremtiden s\xe5 vil\nintegrasjonsarkitekturprinsippene heller ikke kreve en WS foran kilden. Det gir\nfor lite avkastning p\xe5 investeringen."),(0,a.kt)("p",null,"WS vil enten v\xe6re p\xe5krevd eller sv\xe6rt nyttig der tjenesten er en autoritativ\nkilde for data som andre trenger innsyn i, eller der tjenesten fungerer som en\ndel av en annen tjeneste."),(0,a.kt)("h3",{id:"datalager"},"Datalager"),(0,a.kt)("p",null,"Integrasjoner er ikke alltid det \xe5 flytte data fra A til B, s\xe5kalt replisering.\nSammensatte tjenester der man utnytter en tjenesteorientert arkitektur vil\nkunne bygge p\xe5 andre tjenester. En tjeneste kan for eksempel bruke en annen\ntjeneste som sitt ",(0,a.kt)("em",{parentName:"p"},"datalager"),". I stedet for \xe5 replikere data fra kilden, og\nsette opp en database for det, kan tjenesten heller bruke kildens WS direkte."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Illustrasjon av tjeneste som bruker ekstern WS som datalager",src:t(3894).Z,width:"566",height:"810"})),(0,a.kt)("p",null,"En tjeneste, best\xe5ende av et brukergrensesnitt, et logisk lag og en database,\nbenytter en ekstern kilde som en del av sitt datalag."),(0,a.kt)("p",null,"\xc5 bruke en WS som et datalager kan gj\xf8re det enklere, raskere og mindre\nkostbart \xe5 bygge nye tjeneste, men ogs\xe5 en mindre komplisert arkitektur.\nUlempen er at det setter h\xf8yere krav til kildens oppetid, ytelse og\nskalerbarhet."),(0,a.kt)("h2",{id:"hvordan-skalet-api-i-en-ws-se-ut"},"Hvordan skal\xa0et API i en WS se ut?"),(0,a.kt)("h3",{id:"restful"},"RESTful"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Representational_state_transfer"},"REST"),"\xa0er en\nmetodikk for \xe5 sikre l\xf8se koblinger mellom to tjenester i en integrasjon. Selv\nom REST ofte benytter HTTP som den underliggende protokollen for integrasjonen,\ner ikke REST begrenset til dette."),(0,a.kt)("p",null,"For \xe5 sikre at man ikke videref\xf8rer gamle, tett koblede integrasjoner i den nye\nintegrasjonsarkitekturen, b\xf8r tjenesteeiere og -utviklere etterstrebe \xe5 lage\ngrensesnitt som er s\xe5 ",(0,a.kt)("em",{parentName:"p"},"RESTfulle")," som mulig."),(0,a.kt)("p",null,"S\xe5 hva er RESTful? Det kan deles inn i fire niv\xe5er, der det er opp til\ndatatilbyder\xa0og -utvikler \xe5 bestemme hvor RESTful API-et skal v\xe6re. Anbefalt\nminimumsniv\xe5 er niv\xe5 2."),(0,a.kt)("h4",{id:"niv\xe5-0-rpc-over-http"},"Niv\xe5 0: RPC over HTTP"),(0,a.kt)("p",null,"P\xe5 dette niv\xe5et ligger REST API-er som ikke egentlig er REST. Man har\nimplementert typiske\n",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Remote_procedure_call"},"RPC"),"-kall over HTTP og\nkaller dette REST. Det resulterende API-et blir spesialisert og lite\ngjenbrukbart. Typisk fors\xf8ker man \xe5 tilby funksjonalitet i API-et tatt helt\nbokstavlig fra en bestilling. \xd8nsker konsument en \xe5 hente fornavn p\xe5 en person\ns\xe5 lager man en funksjon for dette. Konsument to \xf8nsker hele navnet s\xe5 da lager\nman en ny funksjon. Konsument tre \xf8nsker en liste med alle navnetyper, samt\nmuligheten til \xe5 oppdatere navn s\xe5 da lages det flere funksjoner for alt dette.\nData blir tilgjengeliggjort, men man ender opp med tette koblinger og lite til\ningen gjenbruk."),(0,a.kt)("h4",{id:"niv\xe5-1-ressurser"},"Niv\xe5 1: Ressurser"),(0,a.kt)("p",null,"P\xe5 niv\xe5 1 begynner man \xe5 omfavne RESTful. Isteden for spesialiserte kall for\nenhver handling som omhandler en ressurs eller entitet s\xe5 samler man disse i en\nfelles ",(0,a.kt)("em",{parentName:"p"},"ressurs"),". I eksemplet med navn p\xe5 en person fra niv\xe5 0 s\xe5 samler man\nnavn under stien/endepunktet ",(0,a.kt)("strong",{parentName:"p"},"persons/mathias/names"),". Under dette omr\xe5det\nsamler man de funksjoner som omhandler navn."),(0,a.kt)("p",null,"Dette er en bedre l\xf8sning enn i niv\xe5 0, men fortsatt utsatt for spesialiserte\nfunksjoner og manglende gjenbruk. Vi anbefaler en ressursdrevet (datadrevet)\nmodell der ressurser i form av data bestemmer mer av strukturen p\xe5 API-et\nheller enn en mer tilfeldig modell basert p\xe5 hvem som spurte om hva n\xe5r."),(0,a.kt)("h4",{id:"niv\xe5-2-http-verb"},"Niv\xe5 2: HTTP verb"),(0,a.kt)("p",null,"P\xe5 dette niv\xe5et har API-et modnet betraktelig. Om man implementerer et niv\xe5 2\nAPI s\xe5 er ikke API-et fullt ut RESTful, men det er likevel av en slik kvalitet\nat det oppfyller kravene fra fellestjenesten for datadeling. Det vil v\xe6re\nmodul\xe6rt, datadrevet og gjenbrukbart."),(0,a.kt)("p",null,"Vi utvider eksemplene med personnavn fra niv\xe5 1 med at HTTP-verbet bestemme\noperasjonen man gj\xf8r p\xe5 navn.\xa0",(0,a.kt)("strong",{parentName:"p"},"GET persons/mathias/names"),' vil gi en liste\nURL-er med de navn som er registrert for personen "mathias". En endring eller\nsletting gj\xf8res med HTTP-verbene DELETE, POST\xa0eller PUT. Behovet for\nspesialiserte funksjoner blir minimalt da dataene selv representeres som\nressurser og man kan lese og skrive til disse ressursene.'),(0,a.kt)("h4",{id:"niv\xe5-3hypermedia-controlshateoas"},"Niv\xe5 3:\xa0Hypermedia Controls/HATEOAS"),(0,a.kt)("p",null,"For et ekte RESTful API s\xe5 skal API-et i WS-en v\xe6re den kontrollerende akt\xf8ren\ni integrasjonen. Dette vil si at i eksemplet med navn s\xe5 vil utseendet p\xe5\nAPI-et endre seg i forhold til kontekst. For konsument 1, som kun skal hente\nfornavn p\xe5 personer, s\xe5 viser API-et kun dette. For konsument 3, som \xf8nsker\nalle navnetyper, samt mulighet til \xe5 oppdatere navn, s\xe5 vil kallet som\nreturnerer listen ogs\xe5 inkludere lenker til hvordan konsumenten kan oppdatere\nnavn. For de navn som ikke finnes vil det bli sendt med lenker til hvor\nkonsumenten kan opprette disse navnene. API-et gir fra seg informasjon om\ntilstanden p\xe5 data og tilgangene konsumenten har til data. Dette gir navn til\ndet velklingende akronymet\xa0",(0,a.kt)("strong",{parentName:"p"},"HATEOAS")," (Hypertext As The Engine Of Application\nState)."),(0,a.kt)("p",null,"\xc5 implementere et\xa0ekte RESTful API er ressurskrevende. Det er ofte ikke verdt\nden ekstra innsatsen \xe5 ta steget fra niv\xe5 2 til 3, da niv\xe5 2 gir det st\xf8rste\nhoppet i gevinster i datadeling. Niv\xe5 3 kan gj\xf8re det enklere \xe5 lage nye\nkonsumerende tjenester, men det er ogs\xe5 en fare for at datatilbyderen begynner\n\xe5 lage spesialtilpasninger per konsument hvis det ikke implementeres riktig."),(0,a.kt)("h3",{id:"entitetsbasert-api"},"Entitetsbasert API"),(0,a.kt)("p",null,"Entitet- eller ressursbasert, som nevnt under niv\xe5 1 under RESTful, handler om\n\xe5 bevege seg bort fra ",(0,a.kt)("strong",{parentName:"p"},"operasjonen"),"\xa0man skal gj\xf8re og heller se\np\xe5\xa0",(0,a.kt)("strong",{parentName:"p"},"data"),"\xa0man skal gj\xf8re noe med. Mange uttrekk og funksjoner i dag\ner\xa0resultatet av at man skal gj\xf8re noe bestemt. Konsumenter trenger sammensatte\nuttrekk fra konsumenter og skal ikke ha for mye eller for lite data. Dataene\nskal formateres p\xe5 bestemte m\xe5ter og sv\xe6rt sjeldent kan to ulike konsumenter\nbenytte de samme uttrekkene."),(0,a.kt)("p",null,"\xc5 si at API-er skal v\xe6re entitetsbaserte (evt. ressursbaserte) vil si at man\nheller eksponerer typiske entiteter fra kilden heller enn ferdige uttrekk. Om\nen konsument trenger informasjon om ansatte og deres organisasjonstilh\xf8righet\ns\xe5 kan dette realiseres med entitetene\xa0",(0,a.kt)("em",{parentName:"p"},"employees"),"og\xa0",(0,a.kt)("em",{parentName:"p"},"organisational units"),".\nRelasjonen mellom den ansatte og organisasjon realiseres som attributter i en\neller begge entiteter. Det er opp til eiere, forvaltere og utviklere for en\nkilde om hva som er en entitet eller ressurs. Eksempelvis kan man si at en\nbrukerkonto er en entitet, mens et brukernavn kun er et attributt ved denne\nbrukerkontoen. En gruppe er en entitet, mens gruppenavnet og medlemskap er\nattributter til gruppen."),(0,a.kt)("p",null,"For funksjoner som aldri kan v\xe6re datadrevne \u2013\xa0 som start/stopp-funksjonalitet\n\u2013 er det opp til tjenesteeier for hvordan man realiserer dette."),(0,a.kt)("h3",{id:"funksjonelt-api"},"Funksjonelt API"),(0,a.kt)("p",null,"Et funksjonelt API, til forskjell fra ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Functional_programming"},"funksjonell\nprogrammering"),", omhandler\nat designet av API-et skal v\xe6re forst\xe5elig og brukbart\xa0for utenforst\xe5ende.\nUtviklere av konsumenter sitter ikke med den domenekunnskapen som de som jobber\nmed en kilde gj\xf8r. Dette betyr at API-er inn mot kilder b\xf8r forenkles slik at\nde gir mening for utenforst\xe5ende, men ikke mer enn at informasjon som er\nn\xf8dvendig for konsumenter g\xe5r tapt."),(0,a.kt)("p",null,'Et eksempel kan v\xe6re den aktive studentmassen p\xe5 institusjonen. Ulike\nkonsumenter kan v\xe6re interessert i ulike mengder studenter slik at API-et m\xe5 gi\net rikt utplukk studenter, men konsumentene vet ikke reglene som omhandler\nbetalt semesteravgift, oppmeldt studieprogram eller enkeltemne, samt andre\nregler som bestemmer om studenter regnes som "aktive" studenter. API-et m\xe5\nkunne realiseres som enten \xe5 ha et attributt som sier "aktiv" p\xe5 ressursen\nstudent, eller eksponere alle tilh\xf8rende attributter\xa0som avgj\xf8r om studenten er\naktiv i andre enden av skalaen. Sannsynligvis ligger den beste l\xf8sningen et\nsted i midten, der man b\xf8r eksponere mye av de tilh\xf8rende data, men p\xe5 en slik\nm\xe5te at konsumenten kan forst\xe5 informasjonen heller enn \xe5 l\xe6re seg de interne\nstrukturene i kilden.'),(0,a.kt)("p",null,"Her kommer referansearkitekturen sin f\xf8ring p\xe5 indre og ytre API til nytte:\nIndre API vil n\xf8dvendigvis eksponere flere attributter, mens ytre API forenkler\netter hvilken kontekst det lages for. For eksempel vil et indre API eksponere\nalle attributtene som ligger til grunn for om en student er aktiv, mens et ytre\nAPI kanskje bare eksponerer aktive studenter, eller gir et enkelt flagg som\nforteller at studenten er aktiv."),(0,a.kt)("h2",{id:"hvorfor-anbefale-webservice"},"Hvorfor anbefale Webservice?"),(0,a.kt)("p",null,"Hensikten med \xe5 bruke en WS-basert integrasjonsarkitektur er prim\xe6rt \xe5 kvitte\nseg med flaskehalser i organisasjonen og forhindre dobbeltarbeid. Dette er\nsammenlignet med hvordan mange integrasjoner er gjort tidligere."),(0,a.kt)("h3",{id:"hub--spoke-modellen"},"Hub & spoke-modellen"),(0,a.kt)("p",null,'En Tidligere integrasjoner basert p\xe5 en s\xe5kalt "hub&spoke"-modell der\ndatakilden er ansvarlig for \xe5 levere fra seg\xa0de data som en konsument trenger.\n\xc5rsakene til at dette har blitt en s\xe5 vanlig modell for integrasjon er mange,\nder de viktigste er:'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"sikkerhet - kun de ansvarlige for kilden skal f\xe5 tilgang til dataene i kilden"),(0,a.kt)("li",{parentName:"ul"},"kompleksitet - kun de ansvarlige for kilden forst\xe5r datamodellen i kilden"),(0,a.kt)("li",{parentName:"ul"},"sentralisering - som en f\xf8lge av sentralisering av data s\xe5 blir integrasjonene ogs\xe5 sentraliserte"),(0,a.kt)("li",{parentName:"ul"},'tradisjon - slik at man "alltid" gjort integrasjon')),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(4294).Z,width:"826",height:"622"})),(0,a.kt)("p",null,"Kilden er ansvarlig for \xe5 gi konsumentene data. Ofte gj\xf8res dette ved at komponenter i kilden genererer filer som sendes til konsumenten",(0,a.kt)("em",{parentName:"p"},".")),(0,a.kt)("p",null,'Det er store utfordringer knyttet til en slik "hub&spoke"-modell.\nSentralisering av data er et veldig fornuftig valg for \xe5 bekjempe d\xe5rlig\ndatakvalitet og sikre en autoritativ kilde som konsumenter kan forholde seg\ntil. Sentralisering av integrasjonene nyter ikke de samme godene:'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"De tekniske ressursene tilknyttet kilden blir bundet opp i enkeltprosjekter, andre prosjekter m\xe5 vente."),(0,a.kt)("li",{parentName:"ul"},"En endring ute i en konsument medf\xf8rer at ressurser m\xe5 endre p\xe5 kilden."),(0,a.kt)("li",{parentName:"ul"},"Kilden m\xe5 alltid ha mange\xa0tekniske ressurser tilknyttet for \xe5 klare arbeidsmengden."),(0,a.kt)("li",{parentName:"ul"},"Prosjekter f\xe5r store skjulte kostnader fordi ressurser i kilden m\xe5 gj\xf8re integrasjonen."),(0,a.kt)("li",{parentName:"ul"},"Prosjekter blir forsinket da det sjelden er nok tekniske ressurser tilknyttet kilden og ingen andre enn disse ressursene kan gj\xf8re integrasjonen.")),(0,a.kt)("p",null,'To av problemene som har medf\xf8rt at "hub&spoke"-modellen har blitt s\xe5 utbredt\ner sikkerhet og kompleksitet. Uten grensesnitt som adresserer disse problemene\ns\xe5 vil det v\xe6re vanskelig \xe5 gj\xf8re en omfattende endring i hvordan UiO gj\xf8r\nintegrasjon. Sikkerhetsproblemet best\xe5r i hovedsak at systemeiere ikke vil\ntillate andre tilganger rett i databaser eller til API-er inne i tjenesten. Det\ner lite eller ingen tilgangskontroll s\xe5 skal noen ha tilgang til noe s\xe5 f\xe5r de\ndet til alt - gjerne ogs\xe5 muligheten til \xe5 endre data.'),(0,a.kt)("p",null,"Kompleksitetsproblemene er ofte at internt i en tjeneste s\xe5 er data strukturert\np\xe5 en slik m\xe5te at de gir mening for systemeiere og ressurser tilknyttet\ntjenesten, men ikke utenforst\xe5ende. S\xe5 selv om man gir tilgang til en kilde s\xe5\nbetyr ikke det at konsumenten skj\xf8nner hva kilden tilbyr eller f\xe5r gale data."))}m.isMDXComponent=!0},3894:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/datalager-7a148c7f255482d72e1b8b8a14c37025.png"},4294:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/hub-forklart-52d262e871601624628043e2b051502d.png"},1854:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/mq-flyt-d61a42ce065ae6cd07265e1b786e6561.png"},1690:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/ws-api-26664470ed7580077a1124c6c649b42d.png"},7442:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/ws-forklart-cf592fdf5080d788babbbc4fed9e21a9.png"},5e3:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/ws-mq-sirkel-4bd045e962bb27a031ce3cb8a351aca0.png"}}]);