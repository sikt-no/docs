{"searchDocs":[{"title":"Lokalnett - CNaaS","type":0,"sectionRef":"#","url":"/docs/cnaas/","content":"Lokalnett - CNaaS På denne siden kan du finne rutiner, tips og dokumentasjon relatert til &quot;Lokalnett - CNaaS&quot;. Se artikkel-liste til venstre for å finne de forskjellige artiklene.","keywords":"","version":"Next"},{"title":"GraphQL","type":0,"sectionRef":"#","url":"/docs/api-pvt/01-01-graphql","content":"","keywords":"","version":"Next"},{"title":"What is GraphQL?​","type":1,"pageTitle":"GraphQL","url":"/docs/api-pvt/01-01-graphql#what-is-graphql","content":" GraphQL is a strongly typed data query language for APIs. If you are not familiar with GraphQL then request you to visit http://graphql.org/ to learn the basics.  ","version":"Next","tagName":"h3"},{"title":"Why is Data Protection Services using GraphQL?​","type":1,"pageTitle":"GraphQL","url":"/docs/api-pvt/01-01-graphql#why-is-data-protection-services-using-graphql","content":" Data Protection Services chose GraphQL for its API because it serves the needs of modern applications and use cases that are the reality of today’s technological landscape. It supports the need to build integrated yet diversified solutions that can be harnessed via single point API. Most services provided by Data Protection Services will be available via the GraphQL API.  Even though GraphQL is quite similar to REST, some of the small changes in GraphQL make it a better choice of the use we aim to serve - seamless and easy integration of third party applications with our services.  For further reading please refer to the following articles  GraphQL is the better RESTGraphQL vs. REST  ","version":"Next","tagName":"h3"},{"title":"About the GraphQL Reference schema​","type":1,"pageTitle":"GraphQL","url":"/docs/api-pvt/01-01-graphql#about-the-graphql-reference-schema","content":" The GraphQL API documentation is generated by the Data Protection Services GraphQL schema. All calls are validated and executed against the schema. You can access this same content via GraphiQL. GraphiQL is an in-browser IDE for exploring GraphQL. ","version":"Next","tagName":"h3"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/docs/api-pvt/","content":"","keywords":"","version":"Next"},{"title":"Why use Data Protection Services API?​","type":1,"pageTitle":"Introduction","url":"/docs/api-pvt/#why-use-data-protection-services-api","content":" The API allows information hosted by Data Protection Services-services to be retrieved to update other systems. Similarly, Data Protection Services-services can retrieve information from other systems via their APIs.  When multiple systems exchange information automatically, users save from manually registering the same information in the different systems. Gives enhanced user experience, reduces manual work, saves times and improves integrity and quality of data. It also reduces development costs and efforts that would otherwise be needed to capture the same data needed for diverse services. Exchange of data and services via APIs ensures that modern systems are no more locked up in isolated silos but are integrated into federated landscape.  Institutions can retrieve information registered with Data Protection Services that corresponds to them, such as Notification Forms, Data Management Plans and archived research data. Institutions can retrieve this information to create reports, get overview or use in their internal/external systems as needed.  ","version":"Next","tagName":"h3"},{"title":"Technical Information​","type":1,"pageTitle":"Introduction","url":"/docs/api-pvt/#technical-information","content":" The API is implemented as a GraphQL server to facilitate graph shaped queries across these domain types. This allows you to perform queries across data in a single request. For example you could run a query to fetch your own user's name and email, as well as the title, summary, and creation date of all your projects:  { me { name email projects { title summary created } } }  ","version":"Next","tagName":"h3"},{"title":"Grunnleggende feilsøking ved problemer i lokalnett","type":0,"sectionRef":"#","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett","content":"","keywords":"","version":"Next"},{"title":"Innledning​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#innledning","content":" Denne artikkelen har som mål å gi hjelp til brukerstøtte når brukere har problemer med tilkobling til eller bruk av lokalnettet. Den inneholder da litt tips og triks slik at brukerstøtte kan isolere problemet og gir viktig grunnlag for feilsøking ved eskalering til Sikt.  ","version":"Next","tagName":"h2"},{"title":"Feilsøkingsscript​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#feilsøkingsscript","content":" Vi har utarbeidet en liste over kommandoer som kan kjøres på en klient for å få mer info for feilsøking. Disse kommandoene har vi lagt inn i script-filer som kan lastes ned og kjøres på maskinene. MERK: Kjør dette når maskinen har problemer!! Det er liten vits å kjøre dette når maskinen IKKE har problemer.  Under kan du se en liste over script som kan kjøres på de forskellige operativsystemene.  ","version":"Next","tagName":"h2"},{"title":"OAuth 2.0","type":0,"sectionRef":"#","url":"/docs/api-pvt/01-02-oauth","content":"","keywords":"","version":"Next"},{"title":"Request an access token (Service-to-service)​","type":1,"pageTitle":"OAuth 2.0","url":"/docs/api-pvt/01-02-oauth#request-an-access-token-service-to-service","content":" To obtain an access token you will first need to register a client application, then use the generated client ID and client secret to get an access token.  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"OAuth 2.0","url":"/docs/api-pvt/01-02-oauth#example","content":" $ CLIENT_ID=c3b7c6cf-9bd2-4053-be11-5fe94d6d4566 $ CLIENT_SECRET=password $ SCOPE=org:0e7ecd50-650a-425d-a6e7-462eb1b3f1f2 $ curl https://sso.nsd.no/oauth/token \\ -u $CLIENT_ID:$CLIENT_SECRET \\ -d &quot;grant_type=client_credentials&amp;scope=$SCOPE&quot; { &quot;scope&quot;: &quot;org:0e7ecd50-650a-425d-a6e7-462eb1b3f1f2&quot;, &quot;access_token&quot;: &quot;eyJraWQiOiJjQTdxRz...&quot;, &quot;expires_in&quot;: 3600, &quot;token_type&quot;: &quot;Bearer&quot; }   You can now make API calls by passing the access token in the Authorization header:  $ TOKEN=... $ QUERY='query{organization(id: \\&quot;af6fdcec-fcd6-4af2-8d61-03838b992344\\&quot;){name}}' $ curl -H 'Content-Type: application/json' \\ -H &quot;Authorization: Bearer $TOKEN&quot; \\ -X POST \\ -d &quot;{\\&quot;query\\&quot;: \\&quot;$QUERY\\&quot;}&quot; \\ https://api.nsd.no/graphql { &quot;data&quot;: { &quot;organization&quot;: { &quot;name&quot;: &quot;NSD – Norsk senter for forskningsdata AS&quot; } } }   Note: The current token endpoint, supported protocols and other metadata is available at https://sso.nsd.no/.well-known/openid-configuration  Further reading:  https://oauth.net/2/https://tools.ietf.org/html/rfc6749#section-4.4 ","version":"Next","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#windows","content":" Kopier koden nedenfor og legg den i en fil som heter netinfo.cmd. Kjør så denne på maskina som har problemer. Når dette scriptet kjøres så blir det laget en fil netinfo.log som kan vidersendes til CNaaS for dypere feilsøking.  @echo off netsh wlan show interface &gt; netinfo.log netsh interface ipv4 show route &gt;&gt; netinfo.log netsh interface ipv4 show addresses &gt;&gt; netinfo.log netsh interface ipv6 show route &gt;&gt; netinfo.log netsh interface ipv6 show neig &gt;&gt; netinfo.log netsh interface ipv6 show addresses &gt;&gt; netinfo.log netsh interface ipv6 show dnsservers &gt;&gt; netinfo.log arp -a &gt;&gt; netinfo.log nslookup www.vg.no &gt;&gt; netinfo.log nslookup dns-resolver1.uninett.no &gt;&gt; netinfo.log ping -4 8.8.8.8 &gt;&gt; netinfo.log ping -4 158.38.0.1 &gt;&gt; netinfo.log ping -6 2001:700:0:ff00::1 &gt;&gt; netinfo.log ping -6 2001:4860:4860::8888 &gt;&gt; netinfo.log   ","version":"Next","tagName":"h3"},{"title":"Linux​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#linux","content":" Coming soon!  ","version":"Next","tagName":"h3"},{"title":"Trådbasert tilkobling​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#trådbasert-tilkobling","content":" ","version":"Next","tagName":"h2"},{"title":"Sjekk at brukerpunktet er tilkoblet svitsjen i etasjefordeler/kommunikasjonsrom.​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#sjekk-at-brukerpunktet-er-tilkoblet-svitsjen-i-etasjefordelerkommunikasjonsrom","content":" Verifiser at brukerpunktet er tilkoblet i etasjefordeler/kommunikasjonsrom og at patche-kabelen er tilstrekkelig koblet inn i panelet og switchen.  ","version":"Next","tagName":"h3"},{"title":"Sjekk om det er link på nettkortet.​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#sjekk-om-det-er-link-på-nettkortet","content":" Dersom det ikke er link på nettkortet så...  ... kan det være feil på kabelen mellom brukerpunkt og maskin. Bytt kabelen og sjekk igjen.... nettkortet på brukerens maskin kan være &quot;disablet&quot; i operativsystemet til brukeren. Sjekk at nettkortet er skrudd på i operativsystemet.... kan det være feil med kablingen. Vurder måling (via elektromontør) av punktet dersom du allerede byttet patchekabel i punkt 1.  ","version":"Next","tagName":"h3"},{"title":"Trådløs tilkobling (Wi-Fi)​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#trådløs-tilkobling-wi-fi","content":" ","version":"Next","tagName":"h2"},{"title":"Tilkobling til eduroam​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#tilkobling-til-eduroam","content":" Verifiser at brukeren har brukernavn/passord i lokalt brukerdatabase. Om dette er en eduroam gjestebruker skal spørsmål om brukernavn, passord og oppsett gå direkte fra bruker til egen institusjon. Sjekk at trådløsnettet eduroam er synlig for klienten.Kjør eduroam-oppsett på Sjekk eventuell feilmelding ved oppkobling og gi informasjon om dette ved eskalering.  ","version":"Next","tagName":"h3"},{"title":"Tilkobling til gjestenett​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#tilkobling-til-gjestenett","content":" Sjekk at det trådløse gjestenettet er synlig for klienten.Sjekk eventuell feilmelding ved oppkobling og gi informasjon om dette ved eskalering.  ","version":"Next","tagName":"h3"},{"title":"Sjekk kvaliteten på signalet​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#sjekk-kvaliteten-på-signalet","content":" Kvaliteten på signalet sett fra klienten kan gi en pekepinn på om problemet er basert på signalstyrke og også gi nyttig informasjon ved eventuell eskalering. Dette kan sjekkes på de forskjellige operativsystemene slik:  Windows​  Kjør kommandoen netsh wlan show interface. Her får du masse nyttig informasjon, men først og fremst så bør det kikkes på linjen Signal som angi signalstyrken i prosent.  Denne informasjonen bør være med i en eventuell eskalering uavhengig om det er dårlig eller bra signal, siden det gir informasjon om SSID (trådløsnettnavn), MAC-adressen til klienten, kanal/bånd, protokoller med mer.  Mac​  HER KOMMER MER SNART!  Linux​  På Linux kan man installere wavemon og kjøre dette. Da vil man få masse nyttig informasjon, slik som signalkvalitet og signalstyrke.  Denne informasjonen bør være med i en eventuell eskalering uavhengig om det er dårlig eller bra signal, siden det gir informasjon om SSID (trådløsnettnavn), MAC-adressen til klienten, kanal/bånd, protokoller med mer.  ","version":"Next","tagName":"h3"},{"title":"Sjekk om brukeren får IPv4/IPv6-adresse og identifisering av brukerens MAC-adresse.​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#adresser","content":" ","version":"Next","tagName":"h2"},{"title":"Windows​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#windows-2","content":" Først finn rett nettkort å feilsøke. Dette kan finnes ved å kjøre netsh interface show interface som gir deg en liste over nettkort. Nettkortet du skal feilsøke må ha status Tilkoblet eller Connected. For trådbasert tilkobling heter det ofte noe som starter med Ethernet. Nettkort som heter noe med vEthernet er IKKE de som du skal se på nå.  Kjør kommandoen: ipconfig. Finn så rett innslag basert på nettkort-navnet du fant over. Sjekk deretter følgende:  Finnes det en IP-adresse for IPv4? Denne skal IKKE være noe som starter på 169.254.x.x. Dette betyr i prinsippet kortet ikke har IPv4-adresse.Dersom maskinen ikke har IPv4-adresse, så er feilen DHCP-tildeling. Da er dette &quot;problemet&quot; som kan meldes inn ved eskalering. Finnes det en IP-adresse for IPv6? Merk at det ikke er nok at maskinen har en adresse som starter på fe80::. Den skal også ha en fullverdig IPv6-adresse som f.eks starter på 2001:700:Dersom maskinen ikke har IPv6-adresse, så KAN dette være grunnen til problemene dersom IPv6 er skrudd på på dette nettet. Uansett så kan dette meldes inn ved eskalering.  Noter deg også kortets MAC-adresse slik at du har dette til eventuell eskalering. Dette finner du som Fysisk adresse/Physical address i resultatet av kommandoen over.  ","version":"Next","tagName":"h3"},{"title":"Mac​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#mac-1","content":" HER KOMMER MER SNART!  ","version":"Next","tagName":"h3"},{"title":"Linux​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#linux-2","content":" Kjør kommandoen: ip a. Da vil IPv4 vises som inet og IPv6 vises som inet6. Finn rett nettkort og sjekk følgende:  Finnes det en IP-adresse for IPv4? Dersom maskinen ikke har IPv4-adresse, så er feilen DHCP-tildeling. Da er dette &quot;problemet&quot; som kan meldes inn ved eskalering. Finnes det en IP-adresse for IPv6? Merk at det ikke er nok at maskinen har en adresse som starter på fe80::. Den skal også ha en fullverdig IPv6-adresse som f.eks starter på 2001:700:Dersom maskinen ikke har IPv6-adresse, så KAN dette være grunnen til problemene dersom IPv6 er skrudd på på dette nettet. Uansett så kan dette meldes inn ved eskalering.  Noter deg også kortets MAC-adresse slik at du har dette til eventuell eskalering. Dette finner du som link/ether i resultatet av kommandoen over.  ","version":"Next","tagName":"h3"},{"title":"Sjekk nåbarhet til ressurser​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#sjekk-nåbarhet-til-ressurser","content":" Dersom brukeren har IPv4-/IPv6-adresse og er tilkoblet nettet, men det fortsatt er problemer med nettet, så må følgende sjekkes:  ","version":"Next","tagName":"h2"},{"title":"Sjekk om det er mulig å kjøre ping mot default gateway.​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#sjekk-om-det-er-mulig-å-kjøre-ping-mot-default-gateway","content":" Windows​  IPv4: Kjør kommandoen: route print 0.0.0.0. Finn IP-adressen til default gateway og forsøk en ping mot denne adressen. IPv6: Kjør kommandoen: ping ::1.  Fungerer ikke en eller begge dissee, så bruk dette som informasjon ved eskalering.  Mac​  HER KOMMER MER SNART!  Linux​  IPv4: Kjør kommandoen: ip route og finn default-rute. Ping denne adressen. IPv6: Kjør kommandoen: ping ::1.  Fungerer ikke en eller begge dissee, så bruk dette som informasjon ved eskalering.  ","version":"Next","tagName":"h3"},{"title":"Sjekk om det er mulig å kjøre navneoppslag mot f.eks www.google.com​","type":1,"pageTitle":"Grunnleggende feilsøking ved problemer i lokalnett","url":"/docs/cnaas/grunnleggende-feilsok-lokalnett#sjekk-om-det-er-mulig-å-kjøre-navneoppslag-mot-feks-wwwgooglecom","content":" Windows​  Kjør kommandoen nslookup www.google.com. Da skal du få svar med IP-adressen til denne siden. Fungerer ikke dette, så bruk dette som informasjon ved eskalering.  Mac​  HER KOMMER MER SNART!  Linux​  Kjør kommandoen host www.google.com. Da skal du få svar med IP-adressen til denne siden. Fungerer ikke dette, så bruk dette som informasjon ved eskalering. ","version":"Next","tagName":"h3"},{"title":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","type":0,"sectionRef":"#","url":"/docs/cnaas/driftsinstruks-kunde","content":"","keywords":"","version":"Next"},{"title":"Innledning​","type":1,"pageTitle":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","url":"/docs/cnaas/driftsinstruks-kunde#innledning","content":" Dette dokumentet har som mål å beskrive grensesnittet mellom Sikt og kunder av tjenesten &quot;Lokalnett fra Sikt - CNaaS&quot;.  Med dette menes hvordan Sikts kunde skal ta kontakt med Sikt både ved hendelser/problemer (incidents), spørsmål (support) og bestillinger/endringer. Det omhandler også krav til informasjon som kunden må ha med i sine henvendelser. Det beskrives også hvordan Sikt skal ta kontakt med kunden og krav til varslingstider ved planlagte og hasteendringer (change).  I tillegg beskriver dokumentet hvordan Sikt skal ta kontakt med kunden ved hendelser/problemer og endringer (change).  ","version":"Next","tagName":"h2"},{"title":"Roller​","type":1,"pageTitle":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","url":"/docs/cnaas/driftsinstruks-kunde#roller","content":" ","version":"Next","tagName":"h2"},{"title":"Kundens brukerstøtte/tekniske ressurspersoner​","type":1,"pageTitle":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","url":"/docs/cnaas/driftsinstruks-kunde#kundens-brukerstøttetekniske-ressurspersoner","content":" Kunden skal sørge for en brukerstøtte-funksjon for henvendelser fra sine brukere. Dette betyr at alle henvendelser fra kundens brukere skal gå til kundens brukerstøtte og ikke direkte til Sikt.  Kunden skal også ha en eller flere tekniske ressurspersoner som skal utføre nødvendig lokalt arbeid for sine brukere og eventuelt Sikt ved behov. Noen kunder har ekstra avtale med Sikt hvor Sikt sørger for tilgang til tekniske ressurspersoner lokalt gjennom lokale universiteter/høgskoler. Disse kundene trenger da ikke egne tekniske ressurser lokalt.  ","version":"Next","tagName":"h3"},{"title":"Sikt Servicesenter (SSC)​","type":1,"pageTitle":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","url":"/docs/cnaas/driftsinstruks-kunde#sikt-servicesenter-ssc","content":" Sikts Servicesenter er Sikts single point of contact (SPOC) og 1.linje. Alle henvendelser som eskaleres fra kundens brukerstøtte skal gå til SSC. Se kontaktinformasjon nedenfor.  ","version":"Next","tagName":"h3"},{"title":"Sikt 2. linje (Campustjenester)​","type":1,"pageTitle":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","url":"/docs/cnaas/driftsinstruks-kunde#sikt-2-linje-campustjenester","content":" Fageksperter i Sikt Campustjenester fungerer som 2. linje i Sikt. Alle henvendelser som eskaleres fra SSC går hit.  ","version":"Next","tagName":"h3"},{"title":"Kontaktpunkter​","type":1,"pageTitle":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","url":"/docs/cnaas/driftsinstruks-kunde#kontaktpunkter","content":" ","version":"Next","tagName":"h2"},{"title":"Kontaktpunkter hos kunden​","type":1,"pageTitle":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","url":"/docs/cnaas/driftsinstruks-kunde#kontaktkunden","content":" Sikt registerer følgende kontaktpunkter i sine systemer som brukes ved behov:  De tre første kan med fordel være samme kontaktpunkt, f.eks kundens brukerstøtte.  Varslingspunkt Incidents: Her sendes alle varsler om incidents som Sikt oppdager i kundens nett. Dette bør ikke være personlig epost-adresse og telefonnummer.Varslingspunkt Change: Her sendes alle varsler om planlagte endringer i kundens nett. Dette bør ikke være personlig epost-adresse og telefonnummer.Lokalt supportpunkt: Her registereres kontaktinformasjon for kundens brukerstøtte for å informere eventuelle brukere som kontakter Sikt direkte. Dette brukes også som kontaktpunkt dersom Sikt har behov for å få utført lokalt arbeid på en eller flere komponenter i lokalnettet. Dette bør ikke være personlig epost-adresse og telefonnummer.Teknisk ansvarlig: En eller flere personer som er teknisk ansvarlig og/eller ressurser hos kunden. Brukes som kontaktpunkt ved alvorlige hendelser utenfor kundens normalåpningstid. Det er også kun disse personene som har mulighet til å bestille endringer i CNaaS-tjenesten.Juridisk/administrativ ansvarlig: En eller flere personer som kan kontaktes ved merkantile henvendelser.  ","version":"Next","tagName":"h3"},{"title":"Kontaktpunkter hos Sikt​","type":1,"pageTitle":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","url":"/docs/cnaas/driftsinstruks-kunde#kontaktsikt","content":" Sikts single point of contact er alltid Sikt Servicesenter (SSC).  E-post: kontakt@sikt.noTelefon: 73 55 79 00  Se Sikts nettside for åpningstider.  Kritiske henvendelser kan meldes 24/7. Utenfor ordinær arbeidstid, ring oppgitte telefonnummer og tast 1.  ","version":"Next","tagName":"h3"},{"title":"Ansvar​","type":1,"pageTitle":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","url":"/docs/cnaas/driftsinstruks-kunde#ansvar","content":" ","version":"Next","tagName":"h2"},{"title":"Kundens brukerstøtte og tekniske ressurspersoner​","type":1,"pageTitle":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","url":"/docs/cnaas/driftsinstruks-kunde#kundens-brukerstøtte-og-tekniske-ressurspersoner","content":" Kunden har ikke noe overvåkningsansvar av utstyret eller nettet. Dette er Sikts ansvar.  Kunden har som ansvar å utføre følgende oppgaver, enten av brukerstøttefunksjonen eller ved tekniske ressurspersoner:  Utføre lokalt arbeid​  Utføre tilkoblinger i kommunikasjonsrom/etasjefordelere for å koble til brukerpunkter ute i kontorarealene til svitsjer.Bytte komponenenter som er defekte etter ønske fra Sikt.  Utføre godkjente endringer i lokalnettet​  Virksomheten selv vil kunne gjøre enkelte endringer selv. F.eks vil kunden ha mulighet til å endre VLAN på et brukerpunkt/svitsjeport ved hjelp av NAV.  Bestille endringer i lokalnettet​  Endringer i nettet som kunden selv ikke kan utføre, må bestilles av kunden via Kontaktpunkter hos Sikt. Merk at kun personer som er satt som &quot;Teknisk ansvarlig&quot;, som beskrevet i Kontaktpunkter hos kunden, vil kunne bestille endringer. Dersom en tredjepart trenger at det utføres endringer, skal dette gå via en av de kontaktpersonene som står nevnt som &quot;Teknisk ansvarlige&quot;.  Grunnleggende feilsøking​  Når brukere opplever feil/hendelser så skal kundens brukerstøtte og/eller tekniske ressurspersoner gjøre grunnleggende feilsøking før eventuelt eskalering til Sikt.  Sjekke overvåkningssystemer  Opplæring i overvåkningssystemer gis etter behov.  Sjekk status i NAV. Spesielt viktig ved henvendelse fra flere brukere. Logg inn på lokal NAV-installasjon og sjekk om det er noen alarmer som kan være grunne til problemet. Sjekk status i trådløst administrasjonssystem. Spesielt viktig ved henvendelse fra flere brukere. Gjelder kun dersom kunden har fått tilgang til det trådløse overvåkningssystemet.Logg inn og sjekk om det er rapporterte feil i trådløsnettet.  Dersom overvåkningssystemene ikke gir noe indikasjon på at det er noe feil så kommer &quot;Sikts guide med tips og triks for å utføre grunnleggende feilsøking i lokalnett&quot; til nytte. Denne finner du på Grunnleggende feilsøking ved problemer i lokalnett. Her får du også mye informasjon som du kan bruke ved eskalering til Sikt.  Eskalering av incidenter til Sikt​  Se Nødvendig informasjon før eskalering av lokalnett-relaterte saker til Sikt for å se hva som må være med av informasjon før sak eskaleres til Sikt. Kontaktpunkt for Sikt finnes lengre opp i denne artikkelen under Kontaktpunkter hos Sikt.  ","version":"Next","tagName":"h3"},{"title":"Sikt Servicesenter (SSC)​","type":1,"pageTitle":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","url":"/docs/cnaas/driftsinstruks-kunde#sikt-servicesenter-ssc-1","content":" SSC har som ansvar å bistå kundens brukerstøtte i grunnleggende feilsøking og eventuelt eskalere hendelser/problemer og support-saker til Sikts 2. linje ved Sikt Campustjenester.  SSC har også som ansvar å varsle kundens brukerstøtte ved planlagte endringer eller hendelser som oppdages av Sikt. Vanligvis vil SSC varsle kunden om planlagte endringer minst 8 virkedager før endringstidspunktet. Ved hasteendringer, vil det varsles så tidlig som mulig, men kunden kan bli kontaktet på kontaktpunkt &quot;Teknisk ansvarlig&quot; for å gi innspill til tidspunkt for endringen.  ","version":"Next","tagName":"h3"},{"title":"Sikt 2. linje (Campustjenester)​","type":1,"pageTitle":"Driftsinstruks for kunder av \"Lokalnett fra Sikt - CNaaS\"","url":"/docs/cnaas/driftsinstruks-kunde#sikt-2-linje-campustjenester-1","content":" Sikts 2. linje har som ansvar å utføre dypere feilsøking på hendelser/problemer og spørsmål fra kunden.  Ressurser her har også som ansvar å sørge for kontinuerlig drift og overvåkning av kundens lokalnett. De vil, gjennom SSC, sørge for å varsle kunden ved avvik/hendelser og planlagte endringer. Planlagte endringer kan f.eks være halvårlig programvareoppgradering av komponeneter i kundens lokalnett. ","version":"Next","tagName":"h3"},{"title":"Nødvendig informasjon før eskalering av lokalnett-relaterte saker til Sikt.","type":0,"sectionRef":"#","url":"/docs/cnaas/info-ved-eskalering","content":"","keywords":"","version":"Next"},{"title":"Innledning​","type":1,"pageTitle":"Nødvendig informasjon før eskalering av lokalnett-relaterte saker til Sikt.","url":"/docs/cnaas/info-ved-eskalering#innledning","content":" Her finner du informasjon om hva som bør være med av informasjon i en sak som er relatert til problemer med lokalnett levert av Sikt.  Les Driftsinstruks for kunder av &quot;Lokalnett fra Sikt - CNaaS&quot; for å se hvordan du kontakter og eskalerer saker til Sikt.  ","version":"Next","tagName":"h2"},{"title":"Informasjon som bør være med i en sak​","type":1,"pageTitle":"Nødvendig informasjon før eskalering av lokalnett-relaterte saker til Sikt.","url":"/docs/cnaas/info-ved-eskalering#informasjon-som-bør-være-med-i-en-sak","content":" Organisasjonsnavn for kunde av CNaaSKontakt informasjon: E-post, navn og telefonTidspunkt for feilen. Dersom dette er sporadisk, oppgi tidspunkt for når feilen fant sted sist. Eventuelt kan flere tidspunkt oppgis. God beskrivelse av problemet Hvordan oppleves problemet? Tregt?Ustabilt/blir koblet av nett?Får ikke kontakt med enkelte eller flere nettsider?Får ikke logget på nettet? Beskriv også eventuelt hvilke nettsider/tjenester som fungerer og ikke fungerer.Er flere brukere berørt eller gjelder det kun innmelder? Trådløst eller fastnett; Ved trådløst: navn på SSID/trådløsnett Brukernavn: Gjelder kun ved tilkobling til eduroam.Brukerens telefonnummer: Gjelder kun ved tilkobling til gjestenett med bruk av SMS.Lokasjon for brukeren Bygg-nummer/-navnRom-nummerPunktnummer (ved trådbasert tilkobling) MAC-adresse på nettkortet til brukeren. Tips: Grunnleggende feilsøking ved problemer i lokalnett for å se hvordan du finner MAC-adressen til brukeren.Operativsystem/enhetstype; mobiltelefon/pc, windows, mac, linux, android, apple etc.Informasjon fra grunnleggende feilsøking. Ta med alt som ble avdekt under grunnleggende feilsøking (Se artikkel Grunnleggende feilsøking ved problemer i lokalnett).  Husk: heller for mye informasjon enn for lite. Dersom Sikt må etterspørre mer informasjon, så vil dette bidra til lengre løsningstid. ","version":"Next","tagName":"h2"},{"title":"Fellestjeneste for Datadeling (IntArk)","type":0,"sectionRef":"#","url":"/docs/datadeling/","content":"","keywords":"","version":"Next"},{"title":"Kom i gang med IntArk!​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"/docs/datadeling/#kom-i-gang-med-intark","content":" Hvordan kommer min institusjon i gang med IntArkKom i gang med API managerAlle veiledereGode praksiser og anbefalinger  ","version":"Next","tagName":"h2"},{"title":"Hva er IntArk​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"/docs/datadeling/#hva-er-intark","content":" Introduksjon: Hva er IntArkIntegrasjonsprinsippeneTeknisk plattform for datadelingBegreper  ","version":"Next","tagName":"h2"},{"title":"Informasjon for deg​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"/docs/datadeling/#informasjon-for-deg","content":" ","version":"Next","tagName":"h2"},{"title":"Institusjonsansvarlig​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"/docs/datadeling/#institusjonsansvarlig","content":"   For deg som er ansvarlig for at institusjonen følger IntArk.  ","version":"Next","tagName":"h3"},{"title":"Anskaffer​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"/docs/datadeling/#anskaffer","content":"   For deg som anskaffer IT-tjenester og IT-systemer.  ","version":"Next","tagName":"h3"},{"title":"Utvikler​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"/docs/datadeling/#utvikler","content":"   For deg som utvikler IT-tjenester.  ","version":"Next","tagName":"h3"},{"title":"Dataeier​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"/docs/datadeling/#dataeier","content":"   For deg som er ansvarlig for innholdet i en tjeneste eller system. (Ofte er du også tjenesteeier)  ","version":"Next","tagName":"h3"},{"title":"Leverandør​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"/docs/datadeling/#leverandør","content":"   For deg som leverer eller ønsker å levere IT-tjenester til UH-sektoren.  ","version":"Next","tagName":"h3"},{"title":"Sluttbruker​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"/docs/datadeling/#sluttbruker","content":"   For deg som er sluttbruker av IntArk, for eksempel forsker eller student.  ","version":"Next","tagName":"h3"},{"title":"Kontakt og hjelp​","type":1,"pageTitle":"Fellestjeneste for Datadeling (IntArk)","url":"/docs/datadeling/#kontakt-og-hjelp","content":" Kontaktinformasjonen til SiktErfaringer fra andre ","version":"Next","tagName":"h2"},{"title":"Galvanisk skille","type":0,"sectionRef":"#","url":"/docs/datadeling/begreper/galvanisk-skille","content":"Galvanisk skille Galvanisk skille brukes gjerne som begrep når brukerpåloggingen i en tjeneste er uavhengig av brukerpåloggingen i underliggende operativsystem. Eksempler på tjenester med et galvanisk skille er webapplikasjoner, som f.eks. StudentWeb eller HR-portalen. Sikkerhetsmessig er galvanisk skille viktig. Dette fordi skillet medfører at settet med handlinger brukerne kan utføre er begrenset. Dette gjør tjenesten stabil og vanskelig å bryte seg inn i - da man må finne et sikkerhetshull i programkoden. En fordel med galvanisk skille, er at tjenesten blir løsere koblet til operativsystemet. Dette gjør det enklere å kjøre tjenesten andre steder, også hos andre institusjoner. Applikasjoner med galvanisk skille, og som bruker FEIDE (eller annen SAML eller OIDC), gjør det enkelt å samarbeide på tvers av institusjoner. Applikasjoner med galvanisk skille er nesten utelukkende generalist tjenester, brukermassene er store og antall operasjoner som skal utføres er standardiserte og begrensede. Programvare som benytter innlogging i OS (typisk Kerberos og/eller LDAP) er det vanskelig å samarbeide om på tvers av institusjoner. Det er omfattende og man kan ikke få det fra en tredjepart. Skifte av leverandør er nesten umulig.","keywords":"","version":"Next"},{"title":"Sameksistens på Wi-Fi i kontorbygg","type":0,"sectionRef":"#","url":"/docs/cnaas/sameksistens-wifi-kontorbygg","content":"","keywords":"","version":"Next"},{"title":"Innledning​","type":1,"pageTitle":"Sameksistens på Wi-Fi i kontorbygg","url":"/docs/cnaas/sameksistens-wifi-kontorbygg#innledning","content":" Wi-Fi er i dag like vanlig og like viktig for bedrifter i et kontorbygg som ventilasjon og strøm. Det er da også viktig at det er stabilt og med tilstrekkelig kapasitet for at bedriftens ansatte skal kunne utføre sine arbeidsoppgaver og gjennomføre virtuelle møter.  I kontorbygg med flere leietakere er det sjelden at Wi-Fi leveres av én og samme leverandør. Noen bedrifter har avtaler med driftspartnere som leverer lokalnett inklusive Wi-Fi for dem, mens andre bedrifter setter opp og drifter Wi-Fi selv. Det er også stor variasjon på hvilke typer utstyr og leverandører som brukes i Wi-Fi-løsningene.  Wi-Fi bruker i dag frekvenser som gjør at signalene lett flyter utover i arealene i hver etasje, men som også lett på tvers av etasjene. Kontorbygg er også bygd opp slik at det lett skal kunne endres planløsning etter hvert som en leietaker ønsker det eller når nye leietakere overtar arealer. Da brukes ofte lettvegger som innervegger, noe som demper Wi-Fi-signaler veldig lite. Frekvensene som brukes er offentlige og kan derfor brukes fritt av hvem som helst.  Når det eksisterer mange autonome Wi-Fi-løsninger for de forskjellige leietakerne i et bygg, så vil én leietaker lett kunne se signaler fra en annen leietakers Wi-Fi. Dette fordi at autonome systemer sjelden bryr seg om å gjøre signalforholdene optimale for noen andre enn seg selv.  Dette dokumentet har som mål å informere om utfordringer dette kan skape i kontorbygg og hvilke kjøreregler Sikt anbefaler å ha for at Wi-Fi skal bli så godt som mulig for alle parter.  ","version":"Next","tagName":"h2"},{"title":"Litt mer om frekvenser og kanaler​","type":1,"pageTitle":"Sameksistens på Wi-Fi i kontorbygg","url":"/docs/cnaas/sameksistens-wifi-kontorbygg#litt-mer-om-frekvenser-og-kanaler","content":" Pr. dags dato opererer Wi-Fi på frekvensområdene 2.4Ghz og 5GHz. I fremtiden vil det også åpnes for kommunikasjon på 6GHz.  2.4GHz er spesielt utsatt for støy pga. at det er veldig få tilgjengelige kanaler i dette frekvensområdet. I praksis er det kun tre tilgjengelige kanaler som ikke forstyrrer for hverandre. Dette betyr at det lett kan bli støy som går ut over stabiliteten på trådløsnettet pga. at en brukers utstyr hører signaler fra veldig mange aksesspunkter samtidig. I tillegg er 2.4GHz frekvensområdet også utsatt for støy fra annet utstyr enn Wi-Fi, slik som Bluetooth, mikrobølgeovner, dørlås-systemer og andre IoT-nett.  ","version":"Next","tagName":"h2"},{"title":"Utfordringer og tiltak​","type":1,"pageTitle":"Sameksistens på Wi-Fi i kontorbygg","url":"/docs/cnaas/sameksistens-wifi-kontorbygg#utfordringer-og-tiltak","content":" Det er mange utfordringer med flere tilbydere av Wi-Fi i et kontorbygg. Her lister vi opp en del utfordringer og foreslår tiltak for å bidra til at Wi-Fi kan ha en tilstrekkelig kapasitet og være stabilt for alle brukere i bygget.  ","version":"Next","tagName":"h2"},{"title":"Høy sendestyrke på aksesspunkter​","type":1,"pageTitle":"Sameksistens på Wi-Fi i kontorbygg","url":"/docs/cnaas/sameksistens-wifi-kontorbygg#høy-sendestyrke-på-aksesspunkter","content":" I konfigurasjon av aksesspunkter (Wi-Fi sendere) kan det stilles inn hvilken sendestyrke de enkelte aksesspunktene skal ha. Sendestyrke er det samme som å stille inn hvor høyt aksesspunktene skal rope for å få kontakt med klientene (laptop, telefon, tablets etc.). Desto høyere utgangseffekt, desto lengre unna kan signalene høres.  Dersom ett Wi-Fi-nett i et kontorbygg har unødvendig høy sendestyrke, så vil dette gjøre at brukere av andre Wi-Fi-nett vil høre sitt eget nett dårligere pga. støy.  Anbefaling: Det anbefales at alle leietakere i et kontorbygg setter opp sine Wi-Fi-nett med så lav sendestyrke som mulig uten at dette går ut over dekningen for de leietakernes brukere. I noen Wi-Fi-systemer kan dette gjøres automatisk ved at systemet selv justerer opp eller ned sendestyrken ut fra kvaliteten på signalet mot tilkoblede brukere. Eksisterer slik funksjonalitet, så bør denne skrus på.  ","version":"Next","tagName":"h3"},{"title":"Kanaler på 2.4GHz-båndet​","type":1,"pageTitle":"Sameksistens på Wi-Fi i kontorbygg","url":"/docs/cnaas/sameksistens-wifi-kontorbygg#kanaler-på-24ghz-båndet","content":" I det internasjonale miljøet med Wi-Fi-ekspertise er det bred enighet om at aksesspunkter KUN skal settes opp til å bruke kanalene 1, 6 og 11 i 2.4GHz frekvensbåndet. Dette fordi at disse er tilstrekkelig adskilte og at de da ikke forstyrrer hverandre.    Anbefaling: Alle leietakere i et kontorbygg bør sørge for at aksesspunkter kun bruker kanalene 1, 6 og 11 på 2.4GHz. Dette kan som oftest gjøres i systemet ved å velge hvilke kanaler systemet skal kunne bruke ved automatisk kanalvalg eller ved å statisk sette kanaler på de forskjellige aksesspunktene. I tillegg bør alle slå av foreldet standard 802.11b. Dette gjøres ved å fjerne hastigheter 1, 2, 5.5 og 11Mbps som en mulig hastighet i konfigurasjon (detaljer varierer litt fra produsent til produsent).  ","version":"Next","tagName":"h3"},{"title":"5GHz-båndet​","type":1,"pageTitle":"Sameksistens på Wi-Fi i kontorbygg","url":"/docs/cnaas/sameksistens-wifi-kontorbygg#5ghz-båndet","content":" 5GHz-frekvensen har noen fordeler i forhold til 2.4GHz-frekvensen. Det er flere kanaler tilgjengelig og det er mindre støy fra utstyr som ikke er Wi-Fi. Men for å få utnyttet disse fordelene så bør Wi-Fi-nettet konfigureres på rett måte.  Selv om det er flere kanaler tilgjengelig i dette frekvensområdet, så må det i noen tilfeller settes opp i Wi-Fi-systemet. I Norge er det mulig å bruke følgende kanaler, listet etter radiobåndene U-NII:  U-NII-1: 36, 40, 44, 48U-NII-2A: 52, 56, 60, 64 (DFS)U-NII-2C: 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140 (DFS)U-NII-3: 149, 153, 157, 161, 165 (SRD - short range 25mW/14dBm)  Anbefaling: Det anbefales at alle Wi-Fi-systemer konfigureres til å bruke flest mulig av kanalene nevnt over. Da vil det være betraktelig mindre sjanser for at klienter opplever støy fra andre Wi-Fi-nett. Det anbefales også at systemene settes opp til å velge kanaler automatisk slik at de styrer unna kanaler som allerede brukes av andre. Dersom man skal bruke kanaler merket DFS over, så MÅ det konfigureres automatisk kanalvalg for å styre unna radarer.  ","version":"Next","tagName":"h3"},{"title":"Bruk av \"channel bonding\"​","type":1,"pageTitle":"Sameksistens på Wi-Fi i kontorbygg","url":"/docs/cnaas/sameksistens-wifi-kontorbygg#bruk-av-channel-bonding","content":" «Channel bonding» er et begrep for å slå sammen flere kanaler slik at hastigheten i Wi-Fi-nettet blir høyere. En kanal er 20Mhz bred, så det kan slås sammen kanaler til hhv. 40, 80 og 160Mhz kanaler. Dette er mye brukt i Wi-Fi-systemer, men bidrar til at flere kanaler blir brukt samtidig, noe som igjen gir mindre plass og mer støy i frekvensbåndet.  På 2.4GHz er det ikke plass til at det brukes «channel bonding», da det allerede er kun er 3 tilgjengelige kanaler i dette frekvensbåndet. Det er mer plass på 5GHz, men dersom man slår sammen mange kanaler, så vil dette gi samme problemer som på 2.4GHz.  Anbefaling: Det skal ikke brukes «channel bonding» på 2.4GHz. Dette vil ødelegge mye for andre Wi-Fi-nett i området. På 5GHz anbefales det å ikke slå sammen flere enn to kanaler, altså til maksimum 40MHz. I et kontorbygg med stor klienttetthet eller der flere virksomheter har eget trådløstnett anbefales kun 20MHz kanaler. Dette gir mindre celler og dermed redusert kanal interferens. ","version":"Next","tagName":"h3"},{"title":"Løs kobling","type":0,"sectionRef":"#","url":"/docs/datadeling/begreper/los-kobling","content":"Løs kobling Et prinsipp om at en integrasjon bør være mest mulig uavhengig av systemet, tjenesten eller leverandøren. En kobling mellom to system er løs hvis det er enkelt å bytte ut det ene systemet, uten at det andre systemet må endres. Løse koblinger er som oftest ønskelig i en arkitektur, da det gjør det enklere å bytte ut enkeltkomponenter. I praksis er det ofte snakk om grader av løse koblinger - to tjenester kan være mer eller mindre avhengige av hverandre. Du ønsker gjerne koblinger som er minst mulig kostbare å bytte ut eller endre på. En tett kobling er det omvendte av en løs kobling. For integrasjoner ønsker du som regel ikke tette koblinger, da det gjør det vanskeligere eller mer kostbart å bytte ut systemer. Eksempler på dette kan være to tjenester fra samme leverandør, som bruker en lukket, proprietær integrasjon som gjør at du ikke kan bytte ut en av tjenestene uten å også måtte se på den andre.","keywords":"","version":"Next"},{"title":"Notifikasjon","type":0,"sectionRef":"#","url":"/docs/datadeling/begreper/notifikasjon","content":"","keywords":"","version":"Next"},{"title":"Se også​","type":1,"pageTitle":"Notifikasjon","url":"/docs/datadeling/begreper/notifikasjon#se-også","content":" Integrasjonsmønsteret hendelsesbasert provisjonering, som er den primære bruken for notifikasjoner.Hvordan designe dine notifikasjoner ","version":"Next","tagName":"h2"},{"title":"Mikrotjeneste","type":0,"sectionRef":"#","url":"/docs/datadeling/begreper/mikrotjeneste","content":"","keywords":"","version":"Next"},{"title":"Hva er en mikrotjeneste i IntArk?​","type":1,"pageTitle":"Mikrotjeneste","url":"/docs/datadeling/begreper/mikrotjeneste#hva-er-en-mikrotjeneste-i-intark","content":" En mikrotjeneste er en liten tjeneste som er spesialisert til å gjøre én ting. I IntArk-sammenheng bruker vi mikrotjenester som konnektorer der det er nødvendig.  ","version":"Next","tagName":"h2"},{"title":"Om SOAP og REST​","type":1,"pageTitle":"Mikrotjeneste","url":"/docs/datadeling/begreper/mikrotjeneste#om-soap-og-rest","content":" For å forstå hvordan begrepet &quot;micro service&quot; vokste frem, må vi ta et steg tilbake og se på utviklingen av web services. Det finnes to hovedkategorier av web services: REST og SOAP. I begynnelsen var SOAP den dominerende. Dette fordi den vokste ut av objektorientert programmering. Objektorientert programmering var populært fordi man kunne lage objektet, f.eks. bil, og gi det egenskaper (som farge, motor, dører, pris). SOAP var utviklet av store aktører som IBM, Microsoft og Oracle, med Microsoft i spissen. Dette var i en tid da deres hegemoni var på sitt største. REST, på sin side, var utviklet av forskere i CERN, altså det samme teamet som sto bak WWW. Det tok betydelig med tid før teknologien festet seg i forretningstradisjonen. At den fikk grep, skyldtes primært:  Den var mye enklere å bruke og implementereDet var helt åpen og uavhengig av leverandør, og enkelt å benytte på tvers av tjenesterDen var intuitiv å forstå og bruke  ","version":"Next","tagName":"h2"},{"title":"Om ESB og tette koblinger​","type":1,"pageTitle":"Mikrotjeneste","url":"/docs/datadeling/begreper/mikrotjeneste#om-esb-og-tette-koblinger","content":" I den gamle SOAP tiden var integrasjon i større grad overlatt til eksperter. Integrasjoner var gjerne samlet i en kjerne som ga sentral kontroll. Disse kjernene ble kalt Enterprise Service Bus (ESB) eller tjenestebuss. (Disse skiller seg fra UiOs bruk av termen i sin integrasjonsarkitektur, der ESB/tjenestebuss bare betyr at tjenesten er sentralisert). ESB-en tilbød standardiserte integrasjonsgrensesnitt (API), som konsumentene kunne koble seg opp mot. I SOAP var integrasjoner bygget som kommandoer med argumenter, slik man kjenner fra kommandolinjeprogrammer. For å gjøre det enklere å integrere ble det ofte laget egne API-programmer som kjørte på klienten. På samme måte var det flere API på bussen som delte biblioteker med programkode. Slik kunne man gjenbruke kode og spare utviklingsarbeid, men det medførte også tette koblinger. Tette koblinger vil si at hvis man endrer noe i produsent eller API, må det også samtidig endres i konsumenten. Dvs at om man f.eks. oppgraderer en database fra versjon 8 til 9, så må man også oppgradere biblioteket i bussen for å reflektere dette. Siden dette biblioteket kan være delt med et annet API, hvor databasen enda ikke er oppgradert, må det håndteres, ellers vil API-et knekke. Videre må klienten/konsumenten oppgradere sitt bibliotek. Hvis konsumenten benytter begge API-er, altså både det som ble oppgradert til versjon 9 og det som fortsatt er på versjon 8, er dette ofte umulig å samkjøre. Uansett var det komplisert.  REST ikke krever noe API-spesifikk program på konsumenten, men REST kan likevel benytte delte biblioteker og ha de samme utfordingene i en ESB. En micro service deler ikke biblioteker med andre API. Det er noe av det som gjør den til en micro service; Man kan gjøre endringer uten at det affekterer noen andre API.  ","version":"Next","tagName":"h2"},{"title":"Om ESB og voksesmerter​","type":1,"pageTitle":"Mikrotjeneste","url":"/docs/datadeling/begreper/mikrotjeneste#om-esb-og-voksesmerter","content":" ESB-er hadde/har mye funksjonalitet. De kan se hvor en datapakke skal ved å se på overskrifter, de kan konvertere formater og protokoller, sette sammen data mm. Dette medførte at man etter hvert fikk en lock in situasjon mot sin egen ESB, den ble veldig dyr å skifte ut. Dessuten medførte kompleksiteten i ESB-en at integrasjoner krevde høy grad av spesialkompetanse, men ble sårbare på turn-over, og det tok lang tid å integrere. Videre har gjerne en ESB mye annen logikk, dvs. vurderinger som :&quot;Først skal jeg gjøre det, og hvis svaret er A, så skal jeg gjør ditt, mens hvis svaret er B, så skal jeg gjøre datt&quot;. Denne type logikk kalles orkestrering. Det er som dirigenten av et orkester, som forteller medlemmene i ensemblet hva de skal gjøre. Et micro service landskap, derimot, er bygget på at alle vet bare hva en selv skal gjøre. Vi sier da at løsningen er koreografert. Dette etter dans, der det ikke er noen dirigent, men hver danser kjenner sin egen rolle. Løsningene kan naturligvis kombineres. Hovedsaken er at man unngår en endringshemmende lock in situasjonen som oppstår dersom man orkestrerer mye logikk i en programvaretjeneste.  ","version":"Next","tagName":"h2"},{"title":"Om sentraliserte komponenter i et micro service landskap​","type":1,"pageTitle":"Mikrotjeneste","url":"/docs/datadeling/begreper/mikrotjeneste#om-sentraliserte-komponenter-i-et-micro-service-landskap","content":" For å lage oversikt og forenkle administrasjon og tilgang, er micro service landskap gjerne samlet bak en såkalt API Manager (også kjent som API Gateway eller API Gatekeeper). Foruten å hjelpe konsumenter med å finne frem til de data de trenger og utstede adgangsbevis, vil API Gatewayen holde orden på hvem som benytter hvilke data. Slik kan man nå ut til konsumenter i god tid med endringer i API. Når API endres må konsumenten endre i sin ende, og vanligvis løses dette ved versjonering. Det innebærer at man kjører gammelt og nytt API parallelt i en periode (f.eks. 3 eller 6 mnd), hvilket gir konsumenten mulighet til selv å finne et passende tidspunkt å flytte over til det nye API-et.  ","version":"Next","tagName":"h2"},{"title":"Oppsummert​","type":1,"pageTitle":"Mikrotjeneste","url":"/docs/datadeling/begreper/mikrotjeneste#oppsummert","content":" En micro service har tre hovedkarekteristikker:  Den er liten, intuitiv/selvforklarende, og brukes til et spesielt formålDen har ingen kodeavhengigheter til andre tjenesterDen er en del av en koreografert løsning ","version":"Next","tagName":"h2"},{"title":"Provisjonering","type":0,"sectionRef":"#","url":"/docs/datadeling/begreper/provisjonering","content":"","keywords":"","version":"Next"},{"title":"Just In Time provisjonering (JIT)​","type":1,"pageTitle":"Provisjonering","url":"/docs/datadeling/begreper/provisjonering#just-in-time-provisjonering-jit","content":" Programvare som bygger en brukerkonto/-profil under første innlogging kalles gjerne just in time provisjonering (JIT).  For moderne tjenester benyttes gjerne teknologier som billetteknologier, f. eks. OpenID Connect (OIDC) og SAML. Informasjonen programvaren trenger for bygge brukerprofilen ligger i billetten (adgangstegnet) fra innloggingstjenesten (FEIDE o.l.), i tillegg kan informasjon i billetten brukes for å finne mer informasjon om identiteten/entiteten i et oppslagsverk, f.eks. en web service. Til dette kan tjenesten f.eks. benytte teknologien OAuth.  Integrasjonsmessig kan JIT virke fordelaktig, men også her er det fallgruver. F.eks. skjer det ofte at JIT-tjenester bare bygger en veldig tynn profil, og at brukeren manuelt må registrere resten av sine data. Det er ofte begrenset med informasjon som ligger i en billett. ","version":"Next","tagName":"h2"},{"title":"Erfaringer fra bruk av IntArk","type":0,"sectionRef":"#","url":"/docs/datadeling/erfaringer/","content":"Erfaringer fra bruk av IntArk For å hjelpe institusjoner med innføringen av IntArk samler vi opp erfaringer og publiserer de på dette området.","keywords":"","version":"Next"},{"title":"Begreper i IntArk","type":0,"sectionRef":"#","url":"/docs/datadeling/begreper/","content":"","keywords":"","version":"Next"},{"title":"Provisjonere​","type":1,"pageTitle":"Begreper i IntArk","url":"/docs/datadeling/begreper/#provisjonere","content":" Å &quot;kopiere&quot; data fra et kildesystem til et endesystem, og holde dette fortløpende oppdatert.  Mange systemer har behov for å provisjoneres, for eksempel med alle brukerkontoer som skal ha tilgang. Begrepet Integrasjon brukes som regel om å koble sammen tjenester, mens provisjonering er det å flytte data. Alternativt kan et system bli oppdatert med informasjon ved behov, ved såkalt Just In Time provisjonering (JIT). Et siste alternativ er systemer som ikke kan integrere, og du må legge inn data manuelt.  Teknisk sett kan provisjonering foregå gjennom eOppslag, og bli hendelsesbasert ved bruk av eNotifikasjon. Eldre systemer integrerer ofte ved overføring av store, tunge filer, som har en del ulemper.  Se også: Integrasjon, Just In Time provisjonering  ","version":"Next","tagName":"h2"},{"title":"Produsent​","type":1,"pageTitle":"Begreper i IntArk","url":"/docs/datadeling/begreper/#produsent","content":" Se Tilbyder  ","version":"Next","tagName":"h2"},{"title":"Tilbyder​","type":1,"pageTitle":"Begreper i IntArk","url":"/docs/datadeling/begreper/#tilbyder","content":" Rollen til en tjeneste eller person som tilbyr data. I utgangspunktet er tilbyderen autoritativt kildesystem for data som tilbys. Avhengig av konteksten, kan dette også være snakk om en person, gruppe eller enhet.  Se også: Autoritativt kildesystem  ","version":"Next","tagName":"h2"},{"title":"Andre begrep​","type":1,"pageTitle":"Begreper i IntArk","url":"/docs/datadeling/begreper/#andre-begrep","content":" Begrep\tForklaringKonsument\tRollen til en tjeneste eller system som ønsker å motta data fra en tilbyder. Avhengig av kontekst, kan dette også være snakk om en person, gruppe, enhet, utvikler eller sluttbruker. Tjenesteportefølje\tEn oversikt over tjenester. Tjenesteportefølje (Service Portfolio) er opprinnelig et oppslagsverk definert i ITIL for planlagte, aktive og nedlagte tjenester i virksomheten. Teknisk plattform gir en oversikt tjenesters integrasjoner. Konnektor\tEn tjeneste som integrerer mellom to systemer som ikke kan integreres direkte. Ofte gjøres dette med mikrotjenester. Konnektorer inneholder ofte forretningslogikk. Konnektorer bør følge IntArk, ved at de blant annet bruker åpne grensesnitt, har så løse koblinger som mulig, og at forretningslogikk og målsystem-spesifikke hensyn ikke legges i produserende system. Se mer under prinsippet Tjenesteorientert. Merk at andre kan bruke begrepet &quot;konnektor&quot; også for direkte-integrasjoner. Målsystem\tRollen til et system, når det henter data fra et kildesystem. Se også: Konsument. Endesystem\tSe: Målsystem, Konsument. Autoritativt kildesystem\tRollen til et system som institusjonen har bestemt skal være kildesystemet for spesifikke dataelementer. Se også: Tilbyder. Kildesystem\tSe: Autoritativt kildesystem. System\tEt IT-system. I denne konteksten brukes begrepet &quot;system&quot; for teknisk nivå, mens &quot;tjeneste&quot; brukes i brukersammenheng. Definisjonen er vag og brukes forskjellig, så begrepet bør unngås. Se også: Tjeneste. Tjeneste\tEn tjeneste er noe som tilbyr funksjonalitet for noen. Tjenesten kan tilbys av et system, eller i samspillet mellom flere system. Se også: System. API\tApplication Programming Interface: Maskinlesbart grensesnitt for en tjeneste eller system. IntArk setter noen føringer og anbefalinger for hvordan API til kildesystem skal fungere, for eksempel at vi bruker Web Service Se blant annet utforming av API. Se også: Web Service Sikker Datadeling\tEn tjeneste for å håndtere avtaler om tilganger til data. I tjenesten kan du som dataeier ha oversikt over hvem som har tilgang til hva i dine systemer, og du kan opprette, fornye og avvikle tilganger til data. Se også: API Manager Notifikasjon\tVi bruker begrepet i IntArk om tynne meldinger som sendes til og fra meldingskøen, primært i integrasjonsmønsteret hendelsesbasert oppdatering. Se eget dokument som beskriver notifikasjoner i mer detalj. API manager\tEn tjeneste som gir dataeiere kontroll over tilganger til sine API, og konsumenter mulighet for å få tilgang. API manager er et system som realiserer de funksjonelle. API manager er en sentral komponent i IntArks tekniske plattform. Se også: Sikker Datadeling API-katalog\tEn tjeneste som gir deg oversikt over alle API-er for en institusjon. I praksis inneholder ofte en API Manager også ein API-katalog. Se også: API Manager, Datakatalog Datatilbyder\tSe: Tilbyder Datakonsument\tSe: Konsument API gateway\tEn tjeneste som tar seg av selve tilgangskontrollen til API på systemnivå. Hvem som skal ha tilgang styres i API manager, og API gateway overholder dette. Dette er en sentral komponent i IntArks tekniske plattform. Applikasjon\tEn applikasjon er vanligvis definert som en samling programvare som tilbyr tjenester. Gravitee bruker begrepet for entiteter som får tilgang til API, altså konsumentene. En applikasjon har en eier, og kan bli gitt tilganger. Du søker om tilganger til API via applikasjonen du registrerer. Se også: Konsument, Tjeneste. Application\tSe: Applikasjon Authorization server\tEn rolle i Oauth 2-protokollen, som tar seg av tilgangskontroll. Se: Autorisasjonstjeneste Meldingskø\tEn tjeneste for å behandle meldinger og sikre at disse meldingene blir distribuert videre til tjenester som abonnerer på valgt type melding. For tiden brukes systemet RabbitMQ i IntArk. Merk: I IntArk-sammenheng snakker vi bare om meldingskø som tjenesten som behandler notifikasjoner og andre meldinger som skal bruker mellom tjenester. IntArk sier ingenting om meldingskøer som brukes internt i systemer. Se også: Notifikasjon API portal\tSe: API-katalog Autentiseringstjeneste\tEn tjeneste som kan autentisere sluttbrukeren og/eller systemet som ønsker å konsumere data. I Oauth2 blir autentiseringstjenesten spesifisert i mer detalj. Datakatalog\tEn oversikt over alle data, spesielt kildedata, som er tilgjengelig, og hvordan du kan få tilgang til dette. Dette er relatert til DigDirs &quot;Orden i eget hus&quot;. En datakatalog kan være en API-katalog, men det kan også være to uavhengige tjenester som kan relatere til hverandre. Det er planer om en felles datakatalog for sektoren i fremtiden. Se også: API-katalog. Autorisasjonstjeneste\tEn tjeneste som tar seg av tilgangskontrollen ved uthenting av data fra API. I Oauth2 er dette en rolle som er spesifisert i detalj, og der du som tjeneste eller sluttbruker får utsted en nøkkel (token) du kan bruke for å hente ut data. Nøkkelutsteder\tSe: Autorisasjonstjeneste Event streaming\tSe: Hendelsesstrømming Hendelsesstrømming\tNår du behandler mange meldinger under ett, kalles dette gjerne hendelsesstrømming. Se også: Meldingskø, Notifikasjoner Galvanisk skille\tOpprinnelig et elektronikk-begrep, men som er tatt inn for å beskrive tjenester som har et strengt skille mellom innlogging i applikasjonen og ikke i operativsystemet. Det er da et &quot;galvanisk skille&quot;, så innloggingshemmeligheter er isolert til applikasjonen. Et eksempel er webapplikasjoner som bruker Feide-pålogging. Se mer informasjon under forvaltningsveilederen. Retrofit\tRetrofit handler om å forlenge levetiden til gammel teknologi ved å legge på ny teknologi utenpå. I IntArk-sammenheng handler dette som oftest om å lage egne mikrotjenester som oversetter og forenkler integrasjon med et gammelt system, slik at den kan bli IntArk-kompatibelt. Se mer informasjon under forvaltning. Masterdata\tSe: Autoritativt kildesystem Web Service\tWeb Service (WS) er en type API (integrasjonsgrensesnitt), som er den vanligste måten å dele data på internett i dag. WS er en sekkebetegnelse, som inneholder blant annet RESTfulle API. IntArk anbefaler bruk av webservice for API. Se også: API Åpent grensesnitt\tEt åpent grensesnitt er et grensesnitt som alle skal kunne utvikle integrasjoner mot, i motsetning til proprietære, lukkede grensesnitt. Åpent grensesnitt er et krav i IntArk, og følger integrasjonsprinsippet om Tilgjengelighet: Autoritative data skal tilbys gjennom åpne grensesnitt. Grensenitt som er bransjestandard foretrekkes ofte, siden det reduserer faren for lock in. Autorisasjon\tAutorisasjon er prosessen med å bestemme om en autentisert entitet er berettiget å få en tilgang. Dette betyr at en tjeneste verifiserer, vha. regler som er satt for tjenesten, om entiteten skal gis en tilgang eller ikke. Tilgang kan for eksempel være om entiteten skal slippes inn i tjenesten, om de skal få ekstra funksjonalitet i tjenesten eller endret utseende på tjenesten. Tjenester som sjekker tilganger bedriver tilgangskontroll. Autoritativ\tAutoritativ refererer til hvem som bestemmer (autoritær). I IntArk-sammenheng er dette hvilket system eller tjeneste som er en autoritær kilde for data. Se: Autoritativt kildesystem Integrasjon\tDet å integrere tjenester i konteksten IT og arkitektur er det å påse at tjenester kommuniserer. Dette kan foregå som en dialog mellom tjenestene eller som monolog fra en tjeneste til en annen. Hensikten er å sikre at data blir kjent i de tjenester som trenger dem. Begrepet integrasjon brukes om selve den tekniske kommunikasjonen, mens begrepet datadeling er bredere og inkluderer også det utenfor det tekniske, for eksempel datakvalitet, ansvarsplassering og informasjonsforvaltning. Se også: Datadeling Datadeling\tDatadeling handler om alt som må til for at du skal kunne dele data mellom tjenester, prosesser og mennesker. Vi følger Digitaliseringsdirektoratets definisjon av datadeling: Datadeling handler om å forsyne forretningsprosesser og dataanalyse med nødvendig datagrunnlag. De fleste aktører sitter på begge sider i dette bildet, og må kunne både dele og innhente data og hendelser. I beskrivelsene skilles det likevel gjerne på rollene som tilbyder og konsument*.* Begrepet datadeling er ut fra dette å oppfatte som kortform for deling og innhenting av data og hendelser. Se også: Integrasjon Just In Time provisjonering\tJust In Time (JIT) provisjonering er provisjonering som gjøres i øyeblikket de provisjonerte dataene trengs. Et eksempel kan være at man slår opp informasjon om en bruker når vedkommende logger inn. Se også: Provisjonering Masterdata Management\tMasterdata Management (MDM) bestemmer hvilke system/tjeneste som er ansvarlig (autoritativ) for hvilke data. MDM omfatter også dataenes semantikk, som vil si hva dataene betyr ut fra gitt kontekst, og videre dataens kvalitet: Hvilken grad av feil og mangler er tolerert? Se også: Autoritativt kildesystem, Informasjonsforvaltning Informasjonsforvaltning\tProsesser, rutiner og funksjoner for å sikre god datakvalitet i institusjonens data. Mikrotjeneste\tEn liten webservice som er spesialisert til å gjøre én ting. Mer om Micro Services. Mikrotjenester som brukes i IntArk-sammenheng kalles for en konnektor. Se også: Konnektor Micro Service\tSe: Mikrotjeneste Return On Investment\tReturn On Investment (ROI): Et begrep om hva man får for en investering. I IntArk-sammenheng er ROI ofte vesentlig for å vurdere om en tjeneste skal oppgraderes for å kunne integreres med, eller om det skal vere et unntak. Dette fra prinsippet Fleksibel. Spørring\tHandlingen å ta kontakt med et API for å be om data. Fra engelsk &quot;request&quot;. Se også: Uttrekk Teknisk gjeld\tTeknisk gjeld er et abstrakt begrep som handler om endringer som må gjøres i en applikasjon for å få denne til å følge gjeldende regler, ønsket funksjonalitet og fleksibilitet, og etterkomme retningslinjer. Teknisk gjeld øker typisk gjennom en applikasjons levetid, med mindre teknisk gjeld adresseres. Økende teknisk gjeld medfører økt time-to-market og synkende return-on-investment. Enterprise Service Bus\tEnterprise Service Bus (ESB) er engelsk begrep for tjenestebuss. Se: Tjenestebuss Teknisk plattform\tIntArk sin tekniske plattform er verktøyet som hjelper institusjonene med å dele data trygt og sikkert, ved å gi oversikt over hvem som har tilgang til hvilke data. Time to Market\tTime To Market (TTM): Et begrep om tiden det tar å lansere funksjonalitet. En mer fleksibel arkitektur, med for eksempel løsere koblinger, gir kortere TTM. Uttrekk\tResultatet man får etter en spørring mot en webservice. Se også: Spørring Datakvalitet\tKvaliteten på data. God kvalitet er vesentlig for å kunne gjenbruke data, og med det ha en god og effektiv datadeling. Dataeier er ansvarlig for god datakvalitet for sine autoritative data. Noen kriterier til datakvalitet: * At data er komplette * At data er maskinlesbare * At data er riktig formaterte * At data er oppdaterte Tilstandsløs\tEn tjeneste som ikke lagrer egne data, inkludert sesjonsdata, er tilstandsløs. Tilstandsløse mikrotjenester er ofte enklere å håndtere, både fordi det er enklere å skalere horisontalt ved mye last, og krever mindre drift. Idempotent håndtering\tHvis et kall mot et endepunkt i et API er garantert å gi samme resultat ved gjentagende kall, er det idempotent. Dette er sentralt i hendelsesdrevet provisjonering. API-eier\tDen som er ansvarlig for et API hos en institusjon. Dette kan for eksempel være tjenesteansvarlig eller dataforvalter, eller være en egen rolle, avhengig av hvordan institusjonen har løst dette. Løs kobling\tEt prinsipp om at en integrasjon bør være mest mulig uavhengig av systemet, tjenesten eller leverandøren. En kobling mellom to system er løs hvis det er enkelt å bytte ut det ene systemet, uten at det andre systemet må endres. Se mer utdypende forklaring i Løs kobling. Tett kobling\tDet omvendte av en løs kobling. For integrasjoner ønsker du som regel ikke tette koblinger, da det gjør det vanskeligere eller mer kostbart å bytte ut systemer. Se: Løs kobling. Datasett\tEn samling av data-elementer. Se: Kildedata Kildedata\tDatasett som er autoritativt. Se: Autoritativt kildesystem. ","version":"Next","tagName":"h2"},{"title":"Trelagsarkitektur","type":0,"sectionRef":"#","url":"/docs/datadeling/begreper/trelagsarkitektur","content":"Trelagsarkitektur Trelagsarkitekturen handler om å splitte opp IT-tjenester så du kan gjenbruke ulik funksjonalitet i andre IT-tjenester. Arkitekturen deler opp en tjeneste i tre lag: Presentasjonslaget, der dataene vises og arbeides med. Logiske operasjoner, der forretningslogikk og endringer faktisk gjøres. Lagring, der informasjonen hentes og skrives til. Begrepet trelagsarkitektur blir benyttet av forskjellige teknologier og betyr ikke nødvendigvis det samme for alle. Vi snakker om 'løst koblet trelagsarkitektur', i kontrast til f.eks. MVC-modellen sin 'tett koblede trelagsarkitektur'. Lagene kan for eksempel skilles ved å definere et åpent definert API mellom dem, så andre IT-tjenester har mulighet for å bruke de samme API-ene. Presentasjonslaget, der dataene vises og arbeides med, gjør ikke annet enn å vise informasjonen og ta imot input. Eksempelvis kan man tenke seg bankens lånekalkulator, som tar hensyn til takst, inntekt, egenkapital, alder osv. Uavhengig om du benytter en mobilapp, nettleser eller annet, så sendes tallene inn til den samme bakenforliggende tjenesten for utregning. Svaret sendes så tilbake til brukeren for videre prosessering, for eksempel å godta et tilbud om lån. Det at presentasjonslaget ikke kan skrive til vilkårlige felter i databasen gjør at man har kontroll over endringer. Hendelsene (som er nødvendige for sanntidsoppdateringer) fanges opp i det logiske laget. Man må ikke ha noe som sammenligner i flere databasetabeller om det er gjort endringer og om disse er gjort samtidig osv. Det at klienten bare kan gjøre definerte, standariserte oppgaver mot databasen gjør programvaren mer stabil. En av ulempene med denne arkitekturen er at det er tynge å gå gjennom et API, enn interne kall i tjenesten. Dette kan skape utfordringer for tjenester som har veldig mange operasjoner og aktivitet. Fordelen er gevinstene ved gjenbruk av både data og funksjonalitet, som bør kost/nytte-vurderes.","keywords":"","version":"Next"},{"title":"Tjenesteportefølje","type":0,"sectionRef":"#","url":"/docs/datadeling/erfaringer/uio/portefolje","content":"","keywords":"","version":"Next"},{"title":"Felter til bruk i tjenesteportefølje​","type":1,"pageTitle":"Tjenesteportefølje","url":"/docs/datadeling/erfaringer/uio/portefolje#felter-til-bruk-i-tjenesteportefølje","content":" Tjenesteporteføljen trenger informasjon om API innen tre overordnede kategorier: forankring, forvaltning og validering.Detaljnivå kan variere mht. hva interessentene opplever som hensiktsmessig. Ofte vil hensikt og mål begrunnes på et høyere nivå for tjenesten.  Innen forankring bør det sies noe om hva hensikten med API er. Dette inkluderer kort- og langsiktige mål og målekriterier. I vurdering av hensikt bør det også inngå vurderinger som er gjort mht. legalitet/konfidensialitet, intendert målgruppe og API-kategori. API-kategori vil si om API er ment for offentligheten eller internt, om det har en betalingsmodell, om det krever en registerering, er underlagt lovgivning eller annet. Om API er for strengt begrenset bruk (produsentens egne utviklere) er det ikke nødvendig for integrasjonsarkitekturen at det er oppført i tjenesteporteføljen. Systemeier kan allikevel ønske oppføring mht. dokumentasjon, budsjettering eller måling av ressursbruk.  Under forvaltning bør det være:  Lenker til dokumentasjon rundt tekniske implementasjon. I det tekniske designet bør det være gjort vurdering mht. gjenbruk, hvordan delte data holdes konsistente på tvers av tjenester, samt i hvilken grad man det vil påvirke konsumentene om man skiller ut funksjonalitet fra kildesystemet eller bytter kildesystem.Det bør være beskrevet hvilke delegeringer som er gjort. F.eks. kan utviklere være delegert rettighet til selv å utvikle mer funksjonalitet eller andre grupperinger kan være delegert muligheten til å gi tilganger til systemeierens data. Sistnevnte skjer typisk i situasjoner hvor det er laget uttrekk sammensatt fra forskjellige kildesystemer og som er lagt under sentral forvaltning.Det bør beskrives eventuell juridiske forhold, f.eks. hvorvidt det kreves en databehandleravtale og hvorvidt denne er standardisert og elektronisk  Validering av en tjeneste bør foregå på et tidspunkt planlagt da tjenesten sist ble validert. Vi skal ikke her gi noen fasit på validering, men kan kort nevne at måloppnåelse, ROS-analyse, compliance med lovverk og interne føringer, samt brukerundersøkelser er vanlig tiltak i et valideringsprogram. Integrasjonsarkitekturen tilfører et krav om validering av kvaliteten på egne data. (Som oftest finner man at kvaliteten på dataene er lavere enn antatt).  ","version":"Next","tagName":"h2"},{"title":"Felter til bruk i tjenestekatalog​","type":1,"pageTitle":"Tjenesteportefølje","url":"/docs/datadeling/erfaringer/uio/portefolje#felter-til-bruk-i-tjenestekatalog","content":" Husk: All informasjon i tjenestekatalogen skal være hentet fra tjenesteporteføljen. Det skal altså ikke dukke opp nye informasjonsområder; tjenestekatalogen skal tilrettelegge den informasjon som er relevant for konsumenten. Grovt sett kan API-informasjonen i tjenestekatalogen deles i overordnede forretningsmessige forhold og deres praktiske implikasjoner. Overgangen har en tendens til å være gradvis. I tabellen under er dette illustrert:  Forretningsmessige forhold\tBeskrivelseMasterdata\tBeskrivelse av hvilke overordnede typer data kan man forvente å finne og hvordan dataene henger sammen med relevante data i andre tjenester Kategori\tDette feltet bør besvare spørsmål som: Er API tilgjenglig for alle? Krever det registrering? Er det begrenset ved lovgivning? Er det en betalingstjeneste? Praktiske implikasjoner Tilgang til API\tInformasjon om hvor API er å finne og hvordan man får tilgang. Lenker til standardisert avtaleverk. Informasjon om kontraktsforhold\tDette er både overordnet informasjon om hvilke lover og regler som gjelder. Det er også informasjon av annen art, som løfter om ytelse og oppetid (SLA) eller i hvilken grad produsent forplikter seg til versjonering av sine API. Dokumentasjon\tLenker til tekniske dokumentasjon eller annen informasjon som tjenestens forvaltningssyklus og valideringskriteria.  ","version":"Next","tagName":"h2"},{"title":"Felter til bruk i tjenesteregister​","type":1,"pageTitle":"Tjenesteportefølje","url":"/docs/datadeling/erfaringer/uio/portefolje#felter-til-bruk-i-tjenesteregister","content":" I tjenesteregister må det være lenker til tjenestekatalog/-portefølje avhengig av APIs kategori eller utviklers rolle. (En tjenesteportefølje/-katalog er ofte samme programvare hvor tilgangen til informasjon er segregert på rolle). Det bør også være lenker til utvidet teknisk informasjon. Videre kan det være felt for egne kontaktpunkt for utviklere. ","version":"Next","tagName":"h2"},{"title":"Teknisk beskrivelse av UiOs integrasjonsarkitektur","type":0,"sectionRef":"#","url":"/docs/datadeling/erfaringer/uio/om-uio-arkitekturmodell","content":"","keywords":"","version":"Next"},{"title":"Overordnet​","type":1,"pageTitle":"Teknisk beskrivelse av UiOs integrasjonsarkitektur","url":"/docs/datadeling/erfaringer/uio/om-uio-arkitekturmodell#overordnet","content":" Arkitekturen har som overordnet mål om å flytte ansvaret for det å integrere på den part som ønsker å integrere. Tradisjonelt har integrasjoner ofte vært realisert ved at de ansvarlige for en datakilde har måttet generere filer basert på de data de har i kilden, får så å distribuere denne filen. På grunn av krav fra prosjekt eller applikasjonseier som ønsker data, samt et krav om ikke å lekke data, så har disse filene blitt skreddersydd for hver nye konsument. Dette er problematisk av flere årsaker:  Ansvaret for å integrere ligger da hos de ansvarlige for dataene, ikke de som ønsker dem.Neglisjerbar gjenbruksmulighet av slik eksporter.Etterhvert som behovet for å integrere flere applikasjoner øker, så øker kompleksiteten i datakilden.Prosjekter eller applikasjonseiere kan ikke løse integrasjon selv, de er prisgitt planer og kapasitet hos dem som er ansvarlige for datakilden.Å flytte filer er utdatert og ineffektiv teknologi som gir dårlig datakvalitet og brukeropplevelse.  Deler av arkitekturen er organisatoriske grep for å definere ansvar og sette ned regler som hele virksomheten skal følge. Selv de beste IT-tjenestene kan ikke påse at arkitekturen følges – arkitekturen må representeres i forretningssiden i virksomheten også. Siden utenforstående ikke tradisjonelt har hatt tilgang til datakilden, har integrasjoner vært forbeholdt de ansvarlige for kilden. For å endre på dette definerer denne arkitekturen styringsregler som pålegger datakildeeiere/systemeiere å tilby data via åpne grensesnitt.  ","version":"Next","tagName":"h2"},{"title":"Modellen​","type":1,"pageTitle":"Teknisk beskrivelse av UiOs integrasjonsarkitektur","url":"/docs/datadeling/erfaringer/uio/om-uio-arkitekturmodell#modellen","content":" Den overordnede tekniske modellen som ligger til grunn for UiOs integrasjonsarkitektur, er en distribuert modell. Dette betyr at data og ansvar er distribuert i organisasjonen, men liten grad av sentralisering. Det er flere årsaker til at dette er valgt modell, men primært kommer dette av hvordan virksomheten er organisert.  Tjenester, applikasjoner og systemer er i stor grad selvstendige og ansvarlige for å hente de data de trenger selv.  Modellen er den mest formålstjenlige – organisatoriske – for UiO, men gir også noen utfordringer:  Økt risiko for varierende teknologi og grensesnitt foran applikasjonerIngen sentral oversiktIngen sentral kontrollIngen gevinster gjennom sentralisering og stordrift  For å adressere disse utfordringene er det definert noen styringsregler og støttestjenester.  ","version":"Next","tagName":"h2"},{"title":"Webservice (WS)​","type":1,"pageTitle":"Teknisk beskrivelse av UiOs integrasjonsarkitektur","url":"/docs/datadeling/erfaringer/uio/om-uio-arkitekturmodell#webservice-ws","content":" En webservice er et teknisk grensesnitt som følger bestemte bransjenormer. Gjennom UiO:IntArk har et sett med styringsregler blitt vedtatt for å standardisere hvordan tjenester og applikasjoner tilbyr grensesnitt. Hensikten med dette er å standardisere der det er hensiktsmessig, uten å begrense handlingsrom og innovasjon ute blant tjeneste- og applikasjonseiere. Det foreligger også en veiledning om hvordan man vurderer en eksisterende WS eller designer en.  ​  En kilde tilbyr sine data gjennom en WS. Konsumenter gis muligheten til å hente de data de trenger.  En WS som tilbyr et RESTful API gir fordeler:  BransjestandardGjenbrukbar funksjonalitetFremmer heller enn hemmer innovasjon  ","version":"Next","tagName":"h3"},{"title":"API manager​","type":1,"pageTitle":"Teknisk beskrivelse av UiOs integrasjonsarkitektur","url":"/docs/datadeling/erfaringer/uio/om-uio-arkitekturmodell#api-manager","content":" En API manager er en tjeneste som har til ansvar å kontrollere tilganger til tjenesters WS-er. Det å implementere full tilgangskontroll til API-er er en anselig ekstrakostnad for applikasjonsforvaltere som skal tilby en WS. Uten tilgangskontroll vil WS-en tilby alle data for alle.  API manager gir begrenset tilgang til et API. De ulike konsumentene får kun tilgang til de delene av API-et som er godkjent gjennom API manager.  Tilgangskontroll til hvert enkelt API er en betydelig besparelse for applikasjonsforvaltere som er ansvarlige for WS-er, men det gir også en forenkling og en besparelse for konsumenter:  En konsument forholder seg kun til API GW, mens bak GW rutes trafikken til multiple API-er.  Fordi all trafikk mellom WS og konsument går gjennom API manager så adresserer man flere av utfordringene med den valgte modellen:  Sentral oversikt over integrasjonerSentral kontroll over integrasjonerStordriftsfordeler ved at tilgangskontroll av tjenester sentraliseres  Gitt retningslinjene for hvordan et API skal utformes så vil man også kunne se hvordan data flyter via integrasjonene.  API manager er tilrettelagt distribuert forvaltning av API-tilganger slik at den organisatoriske modellen etterleves selv om API manager er en sentral komponent. Dette vil si at applikasjonsforvaltere selv forvalter tilganger til API-er og data i API manager.  ","version":"Next","tagName":"h3"},{"title":"Meldingskø (MQ)​","type":1,"pageTitle":"Teknisk beskrivelse av UiOs integrasjonsarkitektur","url":"/docs/datadeling/erfaringer/uio/om-uio-arkitekturmodell#meldingskø-mq","content":" Meldingskøen – MQ – er en tjeneste for å fortelle om endringer. WS brukes for å hente data (evt. skrive), men dette løser ikke de situasjoner der en applikasjon skal fortelle at en endring har skjedd. Man kunne skissert en løsning der applikasjonen skulle sendt endringen til alle WS-er rundt omkring, men dette er ikke generelt nok og det undergraver prinsippet om å la de som skal integrere, gjøre integrasjonen selv.  Løsningen er å tilby en sentral meldingskø der produsenter sender notifikasjoner om endringer på sine data. Produsenten vet ingenting om eventuelle konsumenter av disse notifikasjonene og forholder seg kun til MQ.  Tre kilder sender inn notifikasjoner til MQ. Tre konsumenter henter notifikasjoner. Konsumenten nede til høyre konsumerer enkelte notifikasjoner fra alle tre produsenter.  MQ vil ta ansvar for mye av logistikken rundt notifikasjoner. Hendelses-basert kommunikasjon er komplekst med flere utfordringer:  Oversikt over alle køer og notifikasjonerTilgang til køer og notifikasjonerOppetidskrav og redundans  MQ løser i stor grad disse problemene og gjør at produsenter kan forenkle notifikasjonsutveksling.  I UiO:IntArk er innholdet i notifikasjoner også regulert. Notifikasjoner sendes typisk ikke ut uten innhold, men for MQ så er notifikasjoner tenkt brukt kun som et varsko på at konsumenter skal undersøke WS for oppdateringer. Det er flere årsaker til dette, men de viktigste er:  En notifikasjon blir aldri komplett. Data er sammensatte og en endring på et fakultet kan få implikasjoner for tilhørighetene til personer tilknyttet fakultetet.Datarike notifikasjoner vil måtte tilgangskontrolleres. Datafattige notifikasjoner kan publiseres nærmest fritt.  En notifikasjon gjennom MQ vil typisk si noe om at en entitet er endret. Det vil være opp til konsumenten å finne ut hva som er endret. Notifikasjonen vil gi indikasjon på hvilken entitet som har endret en type data, men vil ikke lekke informasjon som kan identifisere en person. Notifikasjonene vil heller ikke si noe om tidligere eller nytt innhold i data som er endret.  ","version":"Next","tagName":"h3"},{"title":"Hvordan modellen fungerer​","type":1,"pageTitle":"Teknisk beskrivelse av UiOs integrasjonsarkitektur","url":"/docs/datadeling/erfaringer/uio/om-uio-arkitekturmodell#hvordan-modellen-fungerer","content":" Arkitekturen legger opp til å sentralisere tjenester som er nyttige, som ikke begrenser handlingsrommet til applikasjonsforvaltere eller prosjekter, og som effektiviserer integrasjon på UiO. Det er ikke nødvendigvis slik at alle applikasjoner vil måtte forholde seg til alle komponenter i arkitekturen, det er styrt av integrasjonsbehovet for applikasjonen.  ","version":"Next","tagName":"h2"},{"title":"Provisjonering – Need to Know​","type":1,"pageTitle":"Teknisk beskrivelse av UiOs integrasjonsarkitektur","url":"/docs/datadeling/erfaringer/uio/om-uio-arkitekturmodell#provisjonering--need-to-know","content":" Provisjonering er det å sende en mengde data fra en applikasjon til en annen. Hvorfor man ønsker å gjøre dette kan være mange, men tradisjonelt har man basert integrasjoner på provisjonering fordi integrasjoner har vært tunge, filbaserte batch-oppdateringer. Man har laget store filer med komplette datasett, flyttet disse til konsumenten og der sammenligner man den store filen med konsumentens database for å se etter endringer. Dette er ikke en effektiv måte å integrere på. Isteden kan slik provisjonering være hendelsesdrevne:  En entitet X oppdateres i Kilde. Kilde sender en notifikasjon til MQ om at entitet X er oppdatert. MQ sender en notifikasjon til konsumenter som abonnerer på denne typen notifikasjoner om at entitet X er oppdatert. Konsument vet ingenting om hva endringer består i, så Konsument kontakter API manager for å få tilgang til Kildens WS for å spørre om data om entitet X.  Mange applikasjoner, som i dag er baserte på gamle integrasjoner med provisjonering, trenger ikke å provisjonere data i den nye arkitekturen. Likevel er det et behov for provisjonering i de tilfeller der man lager moderne applikasjoner og integrasjoner. Eksempel: Når en ny person registreres i HR-systemet så er ikke HR-systemet ansvarlig for å utstede en brukerkonto til personen. Dette er IAM-kjernen (tidligere BAS, IdM) ansvarlig for. IAM-kjernen vet ikke at det er registrert en ny person i HR-systemet før HR-systemet gir beskjed. IAM-kjernen vil ikke kopiere alle data om personen fra HR-systemet, men den trenger data om personen for å lage en brukerkonto til vedkommende og da vil IAM-kjernen provisjonere noe data. IAM-kjernen vil beholde oversikt over hvem som er eier for brukerkonti f.eks. Disse eierne er provisjonert fra HR-systemet.  Man kan tenke seg et annet eksempel der flyten er lik som i figuren over, men man ikke provisjonerer – integrasjonen er basert på Need to Know. Forskjellen på provisjonering og Need to Know ligger i om konsumenten lagrer kopier av data fra kilden i sine datalagre. Distinksjonen mellom de to er minimal, men generelt skal man forsøke å unngå mellomlagring av data fra et kildesystem og heller hente disse dataene fra kilden ved behov. Av ulike årsaker kan dette vise seg vanskelig så provisjonering vil forekomme også i den nye arkitekturen.  Forskjell fra DiFis eNotifikasjon​  Selv om Need to know kan ligne veldig på eNotifikasjon-mønsteret fra DiFis referansearkitektur for datautveksling, er det til dels store avvik i mønstrene:  \tNeed To Know\teNotifikasjon1\tFår tilsendt en notifikasjon. Konsumenten kan være tilstandsløs, da konsumenten ikke trenger å ha begrep om hvilke notifikasjoner som er prosessert.\tMå hente en liste over notifikasjoner. Konsumenten må lagre tilstand, da eNotifikasjon-mønsteret forutsetter at konsumenter vet hvilke notifikasjoner som er prosessert. 2\tNotifikasjonen inneholder kun nok informasjon til å identifisere hva som har endret seg. Konsumenten må utføre eOppslag mot kildesystem før det kan avgjøres om det skal utføres en operasjon.\tNotifikasjonen inneholder informasjon om hva som har endret seg, og en identifikator til et hendelsesdokument som inneholder endrede data. eNotifikasjonen bærer nok data til å avgjøre om det skal utføres en operasjon. 3\tRekkefølgen notifikasjoner ankommer i er ikke garantert å være velordnet og sekvensiell.\tRekkefølgen notifikasjoner ankommer i er alltid velordnet og sekvensiell. 4\tIngen autorisasjon er nødvendig da notifikasjoner kun har informasjon om hva som er endret. Produsenter har ikke begrep om hvem som er konsumenter.\tAutorisasjon kan være nødvendig da notifikasjoner kan inneholde data. I tilfeller der autorisasjon er nødvendig, må produsenter ha et begrep om hvem som skal kunne konsumere hvilke data. 5\tNeed To Know er en implementasjon av Fire And Forget og eOppslag mønstrene.\teNotifikasjon er en implementasjon av Event Sourcing mønsteret.  ","version":"Next","tagName":"h3"},{"title":"Modulære applikasjoner​","type":1,"pageTitle":"Teknisk beskrivelse av UiOs integrasjonsarkitektur","url":"/docs/datadeling/erfaringer/uio/om-uio-arkitekturmodell#modulære-applikasjoner","content":" Integrasjonsarkitekturen legger også opp til mer modulære tjenester som er satt sammen av ulike applikasjoner (eller deler av applikasjoner). Under Provisjonering beskrives en dataflyt mellom to applikasjoner fordi konsumenten skal agere på endringer i produsentens data. Man kan tenke seg scenarier der man ikke anser tjenester eller applikasjoner som så separate, men heller at applikasjoner sammen utgjør en tjeneste.  Isteden for å flytte data fra Kilde til sine interne datalager så kommuniserer tjenesten med Kilde i sanntid ved behov.  Et eksempel på en produsent som vil være attraktiv for mange tjenester er e-posttjenesten. Ved å integrere e-posttjensten i f.eks. læringsplattformen får studenter en bedre og mer innholdsrik arbeidsflate. LMS-et kan benytte e-post- og kalendertjenesten for meldinger mellom studenter og forelesere, eller kollokvie- og undervisningsgrupper. Mer tradisjonell integrasjon ved å kopiere data vil gi dårligere brukeropplevelse og kompleksitetsproblemer ved en eventuell synkronisering mellom LMS-et og e-posttjenesten.  ","version":"Next","tagName":"h3"},{"title":"Sammendrag​","type":1,"pageTitle":"Teknisk beskrivelse av UiOs integrasjonsarkitektur","url":"/docs/datadeling/erfaringer/uio/om-uio-arkitekturmodell#sammendrag","content":" UiOs integrasjonsarkitektur er en standardisering av prosess og teknikk for å effektivisere integrasjoner. Standardisering er, som kjent, et tveegget sverd. Det strømlinjeformer slik at aktiviteter blir mer effektive, men strømlinjeformingen hindrer også innovasjon og handlingsrom. Tanken bak UiO:IntArk har hele tiden vært å standardisere der det er formålstjenlig og la felt som krever selvråderett være opp til applikasjonsforvaltere, utviklere og prosjekter. Hvaman ønsker å integrere er opp til den enkelte, hvordan man integrerer stilles det krav til.  Det å basere arkitekturen på bransjestandard teknologi og inkludere de organisatoriske utfordringene som noe arkitekturen skal adressere har resultert i en arkitektur som posisjonerer UiO i forhold til bransjen, men ikke på bekostning av autonomi. Arkitekturen vil kunne erstatte protokoller og tjenester etterhvert som bransjen utvikler seg, men uten å måtte omskrive hele arkitekturen. Store systemer kan oppstå og legges ned uten at arkitekturen påvirkes nevneverdig. ","version":"Next","tagName":"h2"},{"title":"UiB sine føringer for navngivning","type":0,"sectionRef":"#","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming","content":"","keywords":"","version":"Next"},{"title":"What is this about​","type":1,"pageTitle":"UiB sine føringer for navngivning","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming#what-is-this-about","content":" Main use case: APIs that expose data from a system. Integrations.  ","version":"Next","tagName":"h2"},{"title":"What needs to be named related to the IntArk components​","type":1,"pageTitle":"UiB sine føringer for navngivning","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming#what-needs-to-be-named-related-to-the-intark-components","content":" domain name for mq and gw servershttps://api.{owner}.no as central entry point for all things API. Might just redirect to the API-gateway portal.api context pathsapi namesapi export filesplan namesapplication namesapi pathsgw users (feide)gw groupsgw rolesmq topics(mq message types)mq virtual hostsmq exchangesmq queuesmq users  ","version":"Next","tagName":"h2"},{"title":"Meta variables​","type":1,"pageTitle":"UiB sine føringer for navngivning","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming#meta-variables","content":" {owner} Data owner (behandlingsansvarlig/controller/system tenant) legal institution, typically represented by the domainname without &quot;.no&quot;, eg &quot;uib&quot;, &quot;uio&quot;, &quot;uit&quot;, &quot;ntnu&quot;, &quot;oslomet&quot;, &quot;himolde&quot;. {svc} Service name; example &quot;iga&quot;, &quot;mail&quot;, &quot;dfo&quot; {sys} System or application name; example &quot;fs&quot;, &quot;tp&quot;, &quot;ri&quot;, &quot;sap&quot; {subsys} Sub system {owner-div} System owner (behandlingsansvarlig avdeling); examples &quot;sa&quot;, &quot;it&quot;. Match up with acronym or shortname in orgreg. {sysop} System operator (databehandler/Processor). Example &quot;it&quot;, &quot;idauto&quot;, &quot;uninett&quot;, &quot;unit&quot;, &quot;dfo&quot; {api-name} An actual API identifier name or just the string &quot;api&quot; — name in context of a system. Example &quot;scim&quot;, &quot;fsapi&quot;, 'fsws' {api-vers} api-version or &quot;v1&quot; — generation of the named api {env} system environment (examples &quot;prod&quot;, &quot;test&quot;, &quot;dev&quot;). This is also used if there are for instance multiple test environments in use. They may then be called &quot;test2&quot;, &quot;test3&quot;, &quot;test_foo&quot;, &quot;test_bar&quot; or something. {endpoint} # URL path; resource name in the case of REST {type} # serve same function as content types in HTTP; identifies the format used for a message {op} # CRUD without the R: 'create', 'update', 'delete'  ","version":"Next","tagName":"h2"},{"title":"Domain names​","type":1,"pageTitle":"UiB sine føringer for navngivning","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming#domain-names","content":" This documents the current practice in how the IntArk components (Gravitee/Rabbit MQ) is set up from USIT.  api-{owner}.intark.uh-it.nogw-{owner}.intark.uh-it.nomq-{owner}.intark.uh-it.no  ","version":"Next","tagName":"h2"},{"title":"Gravitee​","type":1,"pageTitle":"UiB sine føringer for navngivning","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming#gravitee","content":" ","version":"Next","tagName":"h2"},{"title":"context paths​","type":1,"pageTitle":"UiB sine føringer for navngivning","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming#context-paths","content":" The context paths must all be unique prefixes i Gravitee. This defines what is considered a single API in the Gallery as well.  There are two approaches to be considered. Making separate APIs in the Gallery for new versions and new environments or having a single entrypoint that represents the API and use internal paths and plans to diffentiate. With the second approach we would drop the {api-vers} and {env} part at the end of these paths.  We are showing the domain name in context just to document that the context paths are already qualified with the {owner}.  //gw-{owner}.intark.uh-it.no/{sys}/{api-name}/{api-vers}//gw-{owner}.intark.uh-it.no/{sys}/{api-name}/{env}//gw-{owner}.intark.uh-it.no/{owner-div}/{sys}/{api-name}/{api-vers}//gw-{owner}.intark.uh-it.no/{owner-div}/{sys}/{api-name}/{env}  Could also use {svc} instead of {sys} in places.  developers and other &quot;personal&quot; stuff  //gw-{owner}.intark.uh-it.no/u-{username}/...//gw-{owner}.intark.uh-it.no/z{username}/...  virtual host mode (unclear if this will be supported by the USIT installation)  //api.{owner}.no/{sys}/{api-name}/{env}//{sys}.api.{owner}.no/{api-name}/{api-vers}  ","version":"Next","tagName":"h3"},{"title":"Rabbit MQ​","type":1,"pageTitle":"UiB sine føringer for navngivning","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming#rabbit-mq","content":" ","version":"Next","tagName":"h2"},{"title":"users​","type":1,"pageTitle":"UiB sine føringer for navngivning","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming#users","content":" s-{sys} # when env=prods-{sys}-{env}u-{username} # developer  ","version":"Next","tagName":"h3"},{"title":"vhost​","type":1,"pageTitle":"UiB sine føringer for navngivning","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming#vhost","content":" //mq-{owner}.intark.uh-it.no/s-{sys}//mq-{owner}.intark.uh-it.no/s-{sys}-{env}//mq-{owner}.intark.uh-it.no/{owner}-admin  Note: We avoid '/' in vhost names as it has to be escaped in URLs as '%2F' and serves no real purpose in forming hierarchies.  Developers can experiment by getting access to their own vhost:  //mq-{owner}.intark.uh-it.no/u-{username}//mq-{owner}.intark.uh-it.no/u-{username}-{sys}//mq-{owner}.intark.uh-it.no/z{username}-{sys}//mq-{owner}.intark.uh-it.no/z{username}-{sys}  ","version":"Next","tagName":"h3"},{"title":"exchanges​","type":1,"pageTitle":"UiB sine føringer for navngivning","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming#exchanges","content":" Messages are delivered to exchanges that live within the vhost space of the communicating system. The exchanges are named using this pattern:  ex_from_{sys}ex_from_{sys}-{env}  Where the {sys} part can be the owner system (for events generated) or some other system for events consumed. The {env}-part is dropped for production setup and when the environment is already established in the vhost name.  ","version":"Next","tagName":"h3"},{"title":"queues​","type":1,"pageTitle":"UiB sine føringer for navngivning","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming#queues","content":" The application is free to use any convention it sees fit. They have their own vhost to spoil.  ","version":"Next","tagName":"h3"},{"title":"topics​","type":1,"pageTitle":"UiB sine føringer for navngivning","url":"/docs/datadeling/erfaringer/uib/uib-iga-naming#topics","content":" This just documents existing practice:  no.{owner}.{sys}.{env}.{endpoint}.{op}no.{owner}.{sys}.{type}.{endpoint}.{op}{endpoint}  I would hope to drop the 'no' part. It's shows up becuase we then end up the reversed domain name; but it's confusing if we want to generalize this to domain names that might have more segments. ","version":"Next","tagName":"h3"},{"title":"UiO sin Canvas-integrasjon","type":0,"sectionRef":"#","url":"/docs/datadeling/erfaringer/uio/uio-canvas","content":"UiO sin Canvas-integrasjon Døme på ein artikkel av typen &quot;sånn har vi gjort det&quot; for å dele erfaringar: IntArk-basert integrasjon mellom Canvas, FS, SAP og Cerebrum, for å bygge opp Canvas med korrekte studielement. Sjå også designdokumentet til Canvas-integrasjonen.","keywords":"","version":"Next"},{"title":"UiO sine erfaringer med notifikasjonar","type":0,"sectionRef":"#","url":"/docs/datadeling/erfaringer/uio/uio-notifikasjonar","content":"UiO sine erfaringer med notifikasjonar Døme på erfaringsdokument. Kva UiO har erfart etter nokre år med bruk av notifikasjonar. Dømer på erfaringar: Altfor tynn melding gir for lite å jobbe vidare påKompromiss rundt tynn melding og optimalisering. Meir data gir meir effektiv filtrering og raskare integrasjon.Nyttig innhald: NBFUnik id til entiteten det gjeldLenke til endepunkt. Helst relativ lenke, så notifikasjonen kan gå uavhengig av miljø. Fordeler og ulemper. Konklusjon: CloudEvent gir oss nesten alt vi treng, men erfaringa er at vi også ønsker oss: NBF?URL? Korleis utlede?Versjonering: Korleis forholde oss til det? Generelt om korleis forholde seg til notifikasjonane: Ikkje len deg på detaljar i notifikasjonane. Ikkje stol på notifikasjonsinnhaldet, men sjekk kva som er riktig i API-et.","keywords":"","version":"Next"},{"title":"Spørsmål og svar","type":0,"sectionRef":"#","url":"/docs/datadeling/faq","content":"","keywords":"","version":"Next"},{"title":"Gjelder IntArk også internt i institusjonen?​","type":1,"pageTitle":"Spørsmål og svar","url":"/docs/datadeling/faq#gjelder-intark-også-internt-i-institusjonen","content":" IntArk kan brukes både mellom tjenester intern hos en institusjon, mellom institusjoner og med andre utenfor sektoren.Styringsreglene til IntArk fokuserer på datadeling ut av institusjonen, men det er også nyttig å bruke mye av dette internt i institusjonen.  Hver institusjon bestemmer selv i hvor stor grad de skal bruke IntArk internt. Det er likevel en fordel om flest mulig bruker den samme arkitekturen, både fordi det øker muligheten for gjenbruk av tjenester og forenkler samarbeid om tjenester. IntArk brukes allerede internt hos institusjoner.  ","version":"Next","tagName":"h2"},{"title":"Må IntArk følges?​","type":1,"pageTitle":"Spørsmål og svar","url":"/docs/datadeling/faq#må-intark-følges","content":" Ja, føringene fra IntArk må følges av sektoren. Formålet med IntArk er å gjøre det enklere å dele data, som vil kreve en innsats fra alle parter. Dette kan gjøre det mer kostbart for enkelttjenester, men til nytte for hele sektoren. Merk at unntak fra føringene er tillatt. ","version":"Next","tagName":"h2"},{"title":"Anbefalinger for god datakvalitet","type":0,"sectionRef":"#","url":"/docs/datadeling/god-praksis/datakvalitet/","content":"","keywords":"","version":"Next"},{"title":"Ansvar og plikter​","type":1,"pageTitle":"Anbefalinger for god datakvalitet","url":"/docs/datadeling/god-praksis/datakvalitet/#ansvar-og-plikter","content":" Datatilbyder er ansvarlig for at sine autoritative data holder god datakvalitet. Som oftest blir dette plassert hos dataforvalter.  ","version":"Next","tagName":"h2"},{"title":"Hva er datakvalitet?​","type":1,"pageTitle":"Anbefalinger for god datakvalitet","url":"/docs/datadeling/god-praksis/datakvalitet/#hva-er-datakvalitet","content":" Datakvalitet handler om at dataene er til å stole på, og at de kan gjenbrukes av andre.  At data er kompletteAt data er maskinlesbareAt data er riktig formaterteAt data er oppdatert  ","version":"Next","tagName":"h2"},{"title":"Hvorfor trengs god datakvalitet?​","type":1,"pageTitle":"Anbefalinger for god datakvalitet","url":"/docs/datadeling/god-praksis/datakvalitet/#hvorfor-trengs-god-datakvalitet","content":" God datakvalitet gjør det enklere å gjenbruke dataene, som skaper mer effektiv datadeling.  Dårlig datakvalitet kan føre til:  Konsumenter slutter å bruke kildedataen, og en mister gevinstene med gjenbruk. Konsumenter kan begynne å produsere egne data, eller &quot;vaske&quot; kildens data. I praksis har konsumenten innført et nytt kildesystem med tilnærmet like data. For institusjonen kan dette føre til ekstrakostnader og forvirring.  ","version":"Next","tagName":"h2"},{"title":"Hvordan sikre god datakvalitet?​","type":1,"pageTitle":"Anbefalinger for god datakvalitet","url":"/docs/datadeling/god-praksis/datakvalitet/#hvordan-sikre-god-datakvalitet","content":" Dataforvalter må:  Være bevisst på sitt ansvar for datakvalitetenEvaluere sine dataHa rutiner for å sikre god datakvalitet  Konsumenter må:  Hente data fra det institusjonen har definert autoritativt kildesystem for dataene, og ikke via tredjeparter. Katalogtjenester, som AD og LDAP, er mulige å bruke så lenge de ikke har endret på de autoritative dataene. Varsle/informere dataeier ved dårlig datakvalitet, for eksempel feil i data.  ","version":"Next","tagName":"h2"},{"title":"Se også​","type":1,"pageTitle":"Anbefalinger for god datakvalitet","url":"/docs/datadeling/god-praksis/datakvalitet/#se-også","content":" Nasjonal verktøykasse for deling av data Veileder for orden i eget hus ","version":"Next","tagName":"h2"},{"title":"God praksis i fellestjenesten for Datadeling","type":0,"sectionRef":"#","url":"/docs/datadeling/god-praksis/","content":"","keywords":"","version":"Next"},{"title":"Integrasjonsmønster​","type":1,"pageTitle":"God praksis i fellestjenesten for Datadeling","url":"/docs/datadeling/god-praksis/#integrasjonsmønster","content":" Anbefalte integrasjonsmønstre i bruk av fellestjenesten. Ved at flere følger samme mønstre blir det enklere å samarbeid og gjenbruke integrasjoner.  For system-til-system-integrasjoner:  Sanntidsoppdatert provisjonering: Hendelsesbasert provisjoneringFor tjenester som ikke ønsker egenlagring: Backend for frontendFor små tjenester med lave krav til oppdaterte data: Fullstendig synkronisering  ","version":"Next","tagName":"h2"},{"title":"Utforming av API​","type":1,"pageTitle":"God praksis i fellestjenesten for Datadeling","url":"/docs/datadeling/god-praksis/#utforming-av-api","content":" Anbefalinger rundt API.  Design av APIAnbefalt bruk av Web Services  ","version":"Next","tagName":"h2"},{"title":"Bruk av meldingskø​","type":1,"pageTitle":"God praksis i fellestjenesten for Datadeling","url":"/docs/datadeling/god-praksis/#bruk-av-meldingskø","content":" Hvordan designe dine notifikasjoner  ","version":"Next","tagName":"h2"},{"title":"Datakvalitet​","type":1,"pageTitle":"God praksis i fellestjenesten for Datadeling","url":"/docs/datadeling/god-praksis/#datakvalitet","content":" Generelt om god datakvalitet ","version":"Next","tagName":"h2"},{"title":"API-design","type":0,"sectionRef":"#","url":"/docs/datadeling/god-praksis/api-design/","content":"","keywords":"","version":"Next"},{"title":"Prinsipper for godt API-design​","type":1,"pageTitle":"API-design","url":"/docs/datadeling/god-praksis/api-design/#prinsipper-for-godt-api-design","content":" Utformingen av API bør følgeintegrasjonsprinsippene, som blant annet sier at du bør ha et åpent grensesnitt og det bør være så løst koblet som mulig. Dette følger også Digitaliseringsdirektoratets føringer, blant annet at data skal deles som de er, og ikke tilpasset enkelte konsumenter.  Andre anbefalinger:  Brukerorientert: Ha i bakhodet at brukernes behov kan endre seg raskt, og at vi også derfor bør kunne endre tjenester og funksjonalitet raskt. Endringsdyktighet kan fort være viktigere enn for eksempel hvor effektiv en integrasjon er. Tjenesteorientert: Bruk så løse koblinger som mulig, som vil si å gjøre det så enkelt som mulig å bytte ut tjenester på begge sider av en integrasjon. For eksempel: Bruk API-standarder, der det finnesBruk bransjestandarder, for eksempel RESTfulHold API-et på funksjonelt nivå, og unngå systemspesifikke detaljer.Bruk felles semantikk, hvis det finnes.Unngå skreddersøm for en enkelt konsument. Tilgjengelig: Lag et åpent grensesnitt, som vil si at spesifikasjonen av ditt API må være fritt tilgjengelig, dokumentert og leverandøruavhengig. Oversiktlig: Registrer ditt API i din institusjons API-katalog, og dokumenter den. Du bør som minimum følgeOpenAPI-spesifikasjonen (swagger). Etterrettelig: Konsumenter må snakke med ditt API via din institusjons API gateway. Dette gjør at institusjonen får samlet oversikt over dataflyt, og har kontroll og kan for eksempel sperre tilganger ved behov. I praksis betyr det at din WS bør støtte autentiseringsmekanismene som er tilgjengelig i fellestjenesten. Fleksibel: Unntak fra prinsipper og anbefalinger er tillatt, men må begrunnes. Det kan for eksempel bli vurdert å ikke være hensiktsmessig å utvikle et nytt API hvis en liten tjeneste har et proprietært API som fungerer greit nok. Vurderingen må gjøres med hensyn på institusjonen og sektoren som helhet, og ikke bare basert på den enkelte tjenesten. Effektiv: Konsumenter bør hente data direkte fra det institusjonen definerer som kildesystem, og ikke via andre tjenester. Unntaket er velbrukte katalogtjenester. Noen datasett kan være ønskelig å kombinere for mange konsumenter, som kan vere nyttig å sammenstille sentralt. Det er også lite effektivt om en institusjon har to ulike kildesystem for omtrent samme data.  Sjekkliste for valg av typen API:  Finnes det en API-standard for datasettet du skal tilby? Prioriter å bruke denne! Standardisering er veldig nyttig for løse koblinger, og gjør det enklere å bytte systemer, på begge sider av integrasjonen. Bruk bransjestandarder, der det finnes. For eksempel bruk av RESTful eller GraphQL. Se mer om anbefaling om Web services. Finnes det lignende data i andre kildesystemer? Det bør i så fall først avklares hvilken tjeneste som er kildesystem for hvilke data. Bruk lignende semantikk som i tilsvarende datasett andre steder, hvis mulig. Du anbefales å gjenbruke eksisterende datasett fradata.norge.no. Hvis det ikke finnes, kan du med fordel publisere ditt eget definerte datasett der.  ","version":"Next","tagName":"h2"},{"title":"Funksjonelt API​","type":1,"pageTitle":"API-design","url":"/docs/datadeling/god-praksis/api-design/#funksjonelt-api","content":" Hold API på funksjonelt nivå så langt det er mulig. Unngå for eksempel å eksponere interne systemdetaljer i API-et, for eksempel hvilke databasetabeller du må snakke med. Konsumenter ønsker å fokusere på dataene, uten å måtte ha kunnskap om interne detaljer i systemet ditt.  Se mer om funksjonelt API i anbefaling om bruk av webservices.  Det er ofte vanskelig å klare å designe et API som er uavhengig av tekniske valg i en tjeneste. Det kan være en fordel med en dialog med ulike konsumenter, og se på tilsvarende datamodeller eller API-et til lignende tjenester. Det kan være nyttig å designe en første versjon av et API før valg av tjeneste bak, siden en unngår fallgruver i tekniske valg.  RESTful gir ofte en godt grunnlag for et funksjonelt API, men mange fallgruver gjenstår.  ","version":"Next","tagName":"h2"},{"title":"Datasett​","type":1,"pageTitle":"API-design","url":"/docs/datadeling/god-praksis/api-design/#datasett","content":" Det er forskjell på et API og et datasett. Begge deler bør designes og dokumenteres ved innføring av en ny datakilde.  For et API må tekniske detaljer dokumenteres, for eksempel autentiseringsmetoder og endepunkt. For et datasett må begreper defineres og dataelementer beskrives.  Datasett kan med fordel beskrives i API-katalogen. Dagens API manager støtter ikke statens anbefalte format for beskrivelser av datasett (DCAT), men kan beskrives i et dokument, eller med en lenke til beskrivelsen.  ","version":"Next","tagName":"h2"},{"title":"Personopplysninger​","type":1,"pageTitle":"API-design","url":"/docs/datadeling/god-praksis/api-design/#personopplysninger","content":" Mange tjenester behandler personopplysninger. Da det er egne regler og lover som påvirker hvordan disse kan deles, anbefales det å skille personopplysninger fra andre data. Ved å holde dette adskilt blir det enklere å dele data som kan deles.  Et eksempel: Et API gir oversikt over institusjonens organisasjonsenheter. Dette kan enkelt deles ut med hvem som helst, siden det er offentlige data. Men, hvis dette API-et i samme utplukk også lister ut hvilke ansatte og studenter som er aktiv på hver enhet, blir det straks mer utfordrende å gi tilgang.  Å dele personopplysninger til konsumenter utenfor egen institusjon krever blant annet en databehandleravtale. Å dele personopplysninger internt hos institusjonen kan kreve en oppdatering av hjemmelsgrunnlaget for personpplysningene - følger datadelingen opprinnelig formål og hjemmel for den nye behandlingen?  ","version":"Next","tagName":"h2"},{"title":"Anskaffelse av tjenester​","type":1,"pageTitle":"API-design","url":"/docs/datadeling/god-praksis/api-design/#anskaffelse-av-tjenester","content":" Også ved anskaffelse av IT-tjenester gjelder anbefalingene rundt deling av data, på samme måte som ved egen utvikling. Alle IT-tjenester med data som kan eller bør deles er anbefalt å ha et API som følger anbefalingene fra fellestjenesten.  Ofte kommer innkjøpte IT-tjenester med et API, men det er ikke sikkert dette gir gevinstene du ønsker.  Er API-et godt nok dokumentert? Følger det prinsippet om løse koblinger? Hvor lukket og leverandørspesifikt er API-et? Kan andre konsumenter bruke det? Følger det noen standarder? Kan institusjonen få inn endringer i API-et? Hva er lovnaden til ytelse og oppetid? Hvor mange konsumenter ville kunne brukt API-et samtidig?  I anbud er det nyttig å legge inn krav til datadelingen, spesielt krav til API. For viktige tjenester kan det også være nyttig å definere hvilket API leverandøren må oppfylle, og hvis det ikke finnes en (bransje)standard til og med designe API-et på forhånd. Dette kan gjøre datadelingen enklere etter at IT-tjenesten er kjøpt inn.  ","version":"Next","tagName":"h2"},{"title":"Versjonering​","type":1,"pageTitle":"API-design","url":"/docs/datadeling/god-praksis/api-design/#versjonering","content":" Konsumenter trenger forutsigbarhet. Når et API lanseres, bør konsumenter forvente at det fungerer i lang tid før konsumenten må gjøre endringer. Anbefalingen er som regel at en versjon av et API bør støttes i minst seks måneder.  Dette gjør at versjonering bør vere med i designet av et API. Hvordan skal tjenesten din støtte å tilgjengeliggjøre data både i et API for eksisterende konsumenter og en nyere versjon av API-et?  I RESTfulle API løses dette ofte med å legge på versjonen som del av stien til endepunktet. Noen eksempler:  /v1/persons/ola /v2/persons/ola/contactinfo  For datatilbydere som også støtter notifikasjoner, bør dette også reflekteres i meldingene. Hvilken versjon av API-et skal notifikasjoner refere til? Kan/bør tjenesten støtte å sende ut en notifikasjon per aktive versjon av API-et?  ","version":"Next","tagName":"h2"},{"title":"Sjekkliste for API​","type":1,"pageTitle":"API-design","url":"/docs/datadeling/god-praksis/api-design/#sjekkliste-for-api","content":" Hvis du designer et API:  Er API-et på funksjonelt nok nivå?Følger API-et prinsippene til RESTful?Inneholder API teknisk terminologi som egentlig burde vært systeminterne?Trenger konsumenter å kjenne til interne detaljer om systemet bak for å kunne bruke API-et?Må du endre på API-et hvis du gjør endringer i tjenestens datamodell?Klarer du å unngå å eksponere personpplysninger, og likevel klare å tilgjengeliggjøre andre opplysninger?Har du dokumentert ditt API etter OpenAPI-spesifikasjonen (swagger)?Har du registrert API-et ditt i institusjoens API-katalog? ","version":"Next","tagName":"h2"},{"title":"Anbefalinger rundt Webservice","type":0,"sectionRef":"#","url":"/docs/datadeling/god-praksis/bruk-av-webservice","content":"","keywords":"","version":"Next"},{"title":"Hva er en Webservice?​","type":1,"pageTitle":"Anbefalinger rundt Webservice","url":"/docs/datadeling/god-praksis/bruk-av-webservice#hva-er-en-webservice","content":" En Webservice (WS) er en del av en tjeneste som tilbyr et standardisert grensesnitt (API) for å lese- og/eller skrive tjenestens data. WS bruker web-basert teknologi, som HTTP. En WS kan være en del av tjenesten eller en løsrevet komponent med eget livsløp.    Konsumenter spør kildens WS om data. Flere konsumenter kan benytte samme WS.  ","version":"Next","tagName":"h2"},{"title":"En WS-basert modell​","type":1,"pageTitle":"Anbefalinger rundt Webservice","url":"/docs/datadeling/god-praksis/bruk-av-webservice#en-ws-basert-modell","content":" Datatilbydere er ansvarlig for å tilby sine data gjennom et API, som konsumenten kan bruke. Konsumentene får kun tilgang til de funksjonene som avtales på forhånd.    API-et bør utformes med fokus på hva som er virksomhetens data, og forenkles der det er mulig. API-et må for eksempel ikke eksponere interne datastrukturer, men noe som er forståelig og funksjonelt for utenforstående. Interne data, som ikke er interessante for andre, eksponeres ikke.  API-et bør også utformes etter hva som er de generelle behovene, og ikke behov/ønsker som gjelder en enkelt konsument. Spesialtilpasninger bør ligge hos konsumenten og ikke datatilbyder.  I etableringen av en WS-basert integrasjon vil kostnaden knyttet være likt eller dyrere sammenlignet med andre måter å integrere på (for eksempel filbasert eller leverandør-spesifikk svart-boks-integrasjoner). Det er når WS-en allerede tilbyr et rikt API at datatilbyde vil se gevinsten: Konsumenter kan selv skaffe data gjennom WS-en, uten å trenge spesialtilpasninger fra datatilbyder. En bonuseffekt er at konsumenter ikke trenger å måtte vente på utvikling hos datatilbyder.  ","version":"Next","tagName":"h2"},{"title":"Meldingskø (MQ)​","type":1,"pageTitle":"Anbefalinger rundt Webservice","url":"/docs/datadeling/god-praksis/bruk-av-webservice#meldingskø-mq","content":" En meldingskø (MQ) er en tjeneste som gir kilder mulighet til å sende beskjed om at data er endret. I eldre integrasjoner baserer man seg ofte på fulldumper – altså filer med alle data en konsument trenger. Dette er kostbart, sårbart og tregt. Med en meldingskø er tanken at en kilde sender ut en notifikasjon når data har endret seg, som kan være av interesse for konsumenter. Notifikasjonen er ikke nødvendigvis informasjonsbærende nok til at konsumenten kan foreta en endring, men forteller konsumenten at den må hente data på nytt for å sjekke egne data mot den autoritative kilden. Dette gjøres med en lenke til det berørte objektet.    Notifikasjoner sendes fra kildene inn til meldingskøen. Konsumentene velger selv hvilke notifikasjoner de ønsker å abonnere på.  Notifikasjoner skal ikke inneholde utfyllende informasjon, av flere grunner:  Færre personopplysninger i notfikasjoner forenkler tilgangsstyringen. Spesielt personopplysninger som krever ekstra beskyttelse ville kunne skapt utfordringer for meldingskøer. Notifikasjonene blir mindre tidskritiske, då konsumenter blir tvunget til å hente korrekt og oppdatert informasjon fra datatilbyders API. For eksempel unngår du at en gammel notifikasjon om at et objekt har blitt slettet ville ført til at konsumenten slettet objektet - det kan hende at objektet i mellomtiden har blitt gjenopprettet. Dette er et enkelt integrasjonsmønster som spesielt passer for provisjoneringer.    Kilden sender en notifikasjon til en meldingskø som videresender denne til konsumenter som abonnerer på denne typen notifikasjoner. Notifikasjonen sier at konsumenten må hente data om en entitet for å se om endringen skal reflekteres i konsumenten.  ","version":"Next","tagName":"h3"},{"title":"Autoritativ kilde​","type":1,"pageTitle":"Anbefalinger rundt Webservice","url":"/docs/datadeling/god-praksis/bruk-av-webservice#autoritativ-kilde","content":" Datatilbydere bør i utgangspunktet bare tilby data de er autoritative for, som vil si at det er denne tjenesten som eier denne typen data hos institusjonen  såkalt masterdata eller kildedata. Eierskapet besluttes av institusjonen selv.  Dette betyr at WS-en i utgangspunktet bare bør eksponere data som tjenesten er autoritativ for. Det sier også at konsumenter må hente data frå autoritativ kilde, og ikke via andre tjenester. Unntaket er velbrukte katalogtjenester der data tilbys på vegne av andre datatilbydere.  ","version":"Next","tagName":"h3"},{"title":"Hvem må ha en WS?​","type":1,"pageTitle":"Anbefalinger rundt Webservice","url":"/docs/datadeling/god-praksis/bruk-av-webservice#hvem-må-haen-ws","content":" Ikke alle tjenester må ha en WS. Kravet om WS inntreffer hovedsaklig når en kilde sitter på data som andre tjenester burde hatt tilgang til. Har kilden svært få integrasjoner og dette ikke vil øke i fremtiden så vil integrasjonsarkitekturprinsippene heller ikke kreve en WS foran kilden. Det gir for lite avkastning på investeringen.  WS vil enten være påkrevd eller svært nyttig der tjenesten er en autoritativ kilde for data som andre trenger innsyn i, eller der tjenesten fungerer som en del av en annen tjeneste.  ","version":"Next","tagName":"h2"},{"title":"Datalager​","type":1,"pageTitle":"Anbefalinger rundt Webservice","url":"/docs/datadeling/god-praksis/bruk-av-webservice#datalager","content":" Integrasjoner er ikke alltid det å flytte data fra A til B, såkalt replisering. Sammensatte tjenester der man utnytter en tjenesteorientert arkitektur vil kunne bygge på andre tjenester. En tjeneste kan for eksempel bruke en annen tjeneste som sitt datalager. I stedet for å replikere data fra kilden, og sette opp en database for det, kan tjenesten heller bruke kildens WS direkte.    En tjeneste, bestående av et brukergrensesnitt, et logisk lag og en database, benytter en ekstern kilde som en del av sitt datalag.  Å bruke en WS som et datalager kan gjøre det enklere, raskere og mindre kostbart å bygge nye tjeneste, men også en mindre komplisert arkitektur. Ulempen er at det setter høyere krav til kildens oppetid, ytelse og skalerbarhet.  ","version":"Next","tagName":"h3"},{"title":"Hvordan skal et API i en WS se ut?​","type":1,"pageTitle":"Anbefalinger rundt Webservice","url":"/docs/datadeling/god-praksis/bruk-av-webservice#hvordan-skalet-api-i-en-ws-se-ut","content":" ","version":"Next","tagName":"h2"},{"title":"RESTful​","type":1,"pageTitle":"Anbefalinger rundt Webservice","url":"/docs/datadeling/god-praksis/bruk-av-webservice#restful","content":" REST er en metodikk for å sikre løse koblinger mellom to tjenester i en integrasjon. Selv om REST ofte benytter HTTP som den underliggende protokollen for integrasjonen, er ikke REST begrenset til dette.  For å sikre at man ikke viderefører gamle, tett koblede integrasjoner i den nye integrasjonsarkitekturen, bør tjenesteeiere og -utviklere etterstrebe å lage grensesnitt som er så RESTfulle som mulig.  Så hva er RESTful? Det kan deles inn i fire nivåer, der det er opp til datatilbyder og -utvikler å bestemme hvor RESTful API-et skal være. Anbefalt minimumsnivå er nivå 2.  Nivå 0: RPC over HTTP​  På dette nivået ligger REST API-er som ikke egentlig er REST. Man har implementert typiskeRPC-kall over HTTP og kaller dette REST. Det resulterende API-et blir spesialisert og lite gjenbrukbart. Typisk forsøker man å tilby funksjonalitet i API-et tatt helt bokstavlig fra en bestilling. Ønsker konsument en å hente fornavn på en person så lager man en funksjon for dette. Konsument to ønsker hele navnet så da lager man en ny funksjon. Konsument tre ønsker en liste med alle navnetyper, samt muligheten til å oppdatere navn så da lages det flere funksjoner for alt dette. Data blir tilgjengeliggjort, men man ender opp med tette koblinger og lite til ingen gjenbruk.  Nivå 1: Ressurser​  På nivå 1 begynner man å omfavne RESTful. Isteden for spesialiserte kall for enhver handling som omhandler en ressurs eller entitet så samler man disse i en felles ressurs. I eksemplet med navn på en person fra nivå 0 så samler man navn under stien/endepunktet persons/mathias/names. Under dette området samler man de funksjoner som omhandler navn.  Dette er en bedre løsning enn i nivå 0, men fortsatt utsatt for spesialiserte funksjoner og manglende gjenbruk. Vi anbefaler en ressursdrevet (datadrevet) modell der ressurser i form av data bestemmer mer av strukturen på API-et heller enn en mer tilfeldig modell basert på hvem som spurte om hva når.  Nivå 2: HTTP verb​  På dette nivået har API-et modnet betraktelig. Om man implementerer et nivå 2 API så er ikke API-et fullt ut RESTful, men det er likevel av en slik kvalitet at det oppfyller kravene fra fellestjenesten for datadeling. Det vil være modulært, datadrevet og gjenbrukbart.  Vi utvider eksemplene med personnavn fra nivå 1 med at HTTP-verbet bestemme operasjonen man gjør på navn. GET persons/mathias/names vil gi en liste URL-er med de navn som er registrert for personen &quot;mathias&quot;. En endring eller sletting gjøres med HTTP-verbene DELETE, POST eller PUT. Behovet for spesialiserte funksjoner blir minimalt da dataene selv representeres som ressurser og man kan lese og skrive til disse ressursene.  Nivå 3: Hypermedia Controls/HATEOAS​  For et ekte RESTful API så skal API-et i WS-en være den kontrollerende aktøren i integrasjonen. Dette vil si at i eksemplet med navn så vil utseendet på API-et endre seg i forhold til kontekst. For konsument 1, som kun skal hente fornavn på personer, så viser API-et kun dette. For konsument 3, som ønsker alle navnetyper, samt mulighet til å oppdatere navn, så vil kallet som returnerer listen også inkludere lenker til hvordan konsumenten kan oppdatere navn. For de navn som ikke finnes vil det bli sendt med lenker til hvor konsumenten kan opprette disse navnene. API-et gir fra seg informasjon om tilstanden på data og tilgangene konsumenten har til data. Dette gir navn til det velklingende akronymet HATEOAS (Hypertext As The Engine Of Application State).  Å implementere et ekte RESTful API er ressurskrevende. Det er ofte ikke verdt den ekstra innsatsen å ta steget fra nivå 2 til 3, da nivå 2 gir det største hoppet i gevinster i datadeling. Nivå 3 kan gjøre det enklere å lage nye konsumerende tjenester, men det er også en fare for at datatilbyderen begynner å lage spesialtilpasninger per konsument hvis det ikke implementeres riktig.  ","version":"Next","tagName":"h3"},{"title":"Entitetsbasert API​","type":1,"pageTitle":"Anbefalinger rundt Webservice","url":"/docs/datadeling/god-praksis/bruk-av-webservice#entitetsbasert-api","content":" Entitet- eller ressursbasert, som nevnt under nivå 1 under RESTful, handler om å bevege seg bort fra operasjonen man skal gjøre og heller se på data man skal gjøre noe med. Mange uttrekk og funksjoner i dag er resultatet av at man skal gjøre noe bestemt. Konsumenter trenger sammensatte uttrekk fra konsumenter og skal ikke ha for mye eller for lite data. Dataene skal formateres på bestemte måter og svært sjeldent kan to ulike konsumenter benytte de samme uttrekkene.  Å si at API-er skal være entitetsbaserte (evt. ressursbaserte) vil si at man heller eksponerer typiske entiteter fra kilden heller enn ferdige uttrekk. Om en konsument trenger informasjon om ansatte og deres organisasjonstilhørighet så kan dette realiseres med entitetene employeesog organisational units. Relasjonen mellom den ansatte og organisasjon realiseres som attributter i en eller begge entiteter. Det er opp til eiere, forvaltere og utviklere for en kilde om hva som er en entitet eller ressurs. Eksempelvis kan man si at en brukerkonto er en entitet, mens et brukernavn kun er et attributt ved denne brukerkontoen. En gruppe er en entitet, mens gruppenavnet og medlemskap er attributter til gruppen.  For funksjoner som aldri kan være datadrevne – som start/stopp-funksjonalitet – er det opp til tjenesteeier for hvordan man realiserer dette.  ","version":"Next","tagName":"h3"},{"title":"Funksjonelt API​","type":1,"pageTitle":"Anbefalinger rundt Webservice","url":"/docs/datadeling/god-praksis/bruk-av-webservice#funksjonelt-api","content":" Et funksjonelt API, til forskjell fra funksjonell programmering, omhandler at designet av API-et skal være forståelig og brukbart for utenforstående. Utviklere av konsumenter sitter ikke med den domenekunnskapen som de som jobber med en kilde gjør. Dette betyr at API-er inn mot kilder bør forenkles slik at de gir mening for utenforstående, men ikke mer enn at informasjon som er nødvendig for konsumenter går tapt.  Et eksempel kan være den aktive studentmassen på institusjonen. Ulike konsumenter kan være interessert i ulike mengder studenter slik at API-et må gi et rikt utplukk studenter, men konsumentene vet ikke reglene som omhandler betalt semesteravgift, oppmeldt studieprogram eller enkeltemne, samt andre regler som bestemmer om studenter regnes som &quot;aktive&quot; studenter. API-et må kunne realiseres som enten å ha et attributt som sier &quot;aktiv&quot; på ressursen student, eller eksponere alle tilhørende attributter som avgjør om studenten er aktiv i andre enden av skalaen. Sannsynligvis ligger den beste løsningen et sted i midten, der man bør eksponere mye av de tilhørende data, men på en slik måte at konsumenten kan forstå informasjonen heller enn å lære seg de interne strukturene i kilden.  Her kommer referansearkitekturen sin føring på indre og ytre API til nytte: Indre API vil nødvendigvis eksponere flere attributter, mens ytre API forenkler etter hvilken kontekst det lages for. For eksempel vil et indre API eksponere alle attributtene som ligger til grunn for om en student er aktiv, mens et ytre API kanskje bare eksponerer aktive studenter, eller gir et enkelt flagg som forteller at studenten er aktiv.  ","version":"Next","tagName":"h3"},{"title":"Hvorfor anbefale Webservice?​","type":1,"pageTitle":"Anbefalinger rundt Webservice","url":"/docs/datadeling/god-praksis/bruk-av-webservice#hvorfor-anbefale-webservice","content":" Hensikten med å bruke en WS-basert integrasjonsarkitektur er primært å kvitte seg med flaskehalser i organisasjonen og forhindre dobbeltarbeid. Dette er sammenlignet med hvordan mange integrasjoner er gjort tidligere.  ","version":"Next","tagName":"h2"},{"title":"Hub & spoke-modellen​","type":1,"pageTitle":"Anbefalinger rundt Webservice","url":"/docs/datadeling/god-praksis/bruk-av-webservice#hub--spoke-modellen","content":" En Tidligere integrasjoner basert på en såkalt &quot;hub&amp;spoke&quot;-modell der datakilden er ansvarlig for å levere fra seg de data som en konsument trenger. Årsakene til at dette har blitt en så vanlig modell for integrasjon er mange, der de viktigste er:  sikkerhet - kun de ansvarlige for kilden skal få tilgang til dataene i kildenkompleksitet - kun de ansvarlige for kilden forstår datamodellen i kildensentralisering - som en følge av sentralisering av data så blir integrasjonene også sentralisertetradisjon - slik at man &quot;alltid&quot; gjort integrasjon    Kilden er ansvarlig for å gi konsumentene data. Ofte gjøres dette ved at komponenter i kilden genererer filer som sendes til konsumenten*.*  Det er store utfordringer knyttet til en slik &quot;hub&amp;spoke&quot;-modell. Sentralisering av data er et veldig fornuftig valg for å bekjempe dårlig datakvalitet og sikre en autoritativ kilde som konsumenter kan forholde seg til. Sentralisering av integrasjonene nyter ikke de samme godene:  De tekniske ressursene tilknyttet kilden blir bundet opp i enkeltprosjekter, andre prosjekter må vente.En endring ute i en konsument medfører at ressurser må endre på kilden.Kilden må alltid ha mange tekniske ressurser tilknyttet for å klare arbeidsmengden.Prosjekter får store skjulte kostnader fordi ressurser i kilden må gjøre integrasjonen.Prosjekter blir forsinket da det sjelden er nok tekniske ressurser tilknyttet kilden og ingen andre enn disse ressursene kan gjøre integrasjonen.  To av problemene som har medført at &quot;hub&amp;spoke&quot;-modellen har blitt så utbredt er sikkerhet og kompleksitet. Uten grensesnitt som adresserer disse problemene så vil det være vanskelig å gjøre en omfattende endring i hvordan UiO gjør integrasjon. Sikkerhetsproblemet består i hovedsak at systemeiere ikke vil tillate andre tilganger rett i databaser eller til API-er inne i tjenesten. Det er lite eller ingen tilgangskontroll så skal noen ha tilgang til noe så får de det til alt - gjerne også muligheten til å endre data.  Kompleksitetsproblemene er ofte at internt i en tjeneste så er data strukturert på en slik måte at de gir mening for systemeiere og ressurser tilknyttet tjenesten, men ikke utenforstående. Så selv om man gir tilgang til en kilde så betyr ikke det at konsumenten skjønner hva kilden tilbyr eller får gale data. ","version":"Next","tagName":"h3"},{"title":"Beskrivelser av datasett","type":0,"sectionRef":"#","url":"/docs/datadeling/god-praksis/datakvalitet/datasett/","content":"","keywords":"","version":"Next"},{"title":"Hvordan beskrive datasett i fellestjenesten?​","type":1,"pageTitle":"Beskrivelser av datasett","url":"/docs/datadeling/god-praksis/datakvalitet/datasett/#hvordan-beskrive-datasett-i-fellestjenesten","content":" Dagens API-katalog støtter ikke DCAT sine filformat ut av boksen. Det er to måter å beskrive datasettet i API-katalogen:  Beskriv datasettet på data.norge.no eller tilsvarende tjenester, og lenk til denne fra API-katalogen. Beskriv datasettet i et vanlig dokument under API-et i API-katalogen. ","version":"Next","tagName":"h2"},{"title":"Gammeldags fullstendig provisjonering","type":0,"sectionRef":"#","url":"/docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/","content":"","keywords":"","version":"Next"},{"title":"Når bør dette brukes?​","type":1,"pageTitle":"Gammeldags fullstendig provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/#når-bør-dette-brukes","content":" Dette mønsteret bør vanligvis ikke brukes, men kan vurderes for mindre tjenester som ikke har behov for oppdaterte data.  Mønsteret gjelder system-til-system-integrasjoner, altså der sluttbrukeren ikke er direkte involvert.  ","version":"Next","tagName":"h2"},{"title":"Fordeler​","type":1,"pageTitle":"Gammeldags fullstendig provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/#fordeler","content":" Ofte det enkleste og rimeligste alternativet å utvikle.  ","version":"Next","tagName":"h2"},{"title":"Ulemper​","type":1,"pageTitle":"Gammeldags fullstendig provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/#ulemper","content":" Passer best for system-til-system-integrasjoner.Fullstendige provisjoneringer tar tid, så du vil få forsinkelser. Sluttbrukere har ofte forvetninger om at tjenester skal vere klare umiddelbart.Fullstendige provisjeringer er ressurskrevende, spesielt for kildesystemet, og ved store datamengder.Har du veldig mange konsumenter vil det sette høyere krav til ytelsen hos tilbyderen. Dette kan kompenseres ved for eksempel caching i API manager.  ","version":"Next","tagName":"h2"},{"title":"Fallgruver​","type":1,"pageTitle":"Gammeldags fullstendig provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/#fallgruver","content":" Integrerer via et standard API, og ikke ta snarveier om filer. Eldre kildesystemer har ofte brukt dette mønsteret, men basert seg på å produserer egne filer med relevante data, ofte skreddersydd per konsument. Dette frarådes, da det reduserer muligheten for gjenbruk, og du får sikkerhetsutfordringer rundt fildeling og opprydning. Selv med dette mønsteret bør data deles gjennom et standard API. Opprydding vil kunne skape utfordringer, spesielt ved uthenting av subsett fra kildesystemet.  ","version":"Next","tagName":"h2"},{"title":"Se også​","type":1,"pageTitle":"Gammeldags fullstendig provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/#se-også","content":" Hendelsesbasert provisjoneringUtforming av API ","version":"Next","tagName":"h2"},{"title":"Tilgang til data","type":0,"sectionRef":"#","url":"/docs/datadeling/god-praksis/informasjonsforvaltning/api-tilganger","content":"","keywords":"","version":"Next"},{"title":"Åpne data​","type":1,"pageTitle":"Tilgang til data","url":"/docs/datadeling/god-praksis/informasjonsforvaltning/api-tilganger#åpne-data","content":" Informasjon som kan eller skal være tilgjengelig for alle uten særskilte tilgangsrettigheter. Tilgang til å lese disse kan gis til alle og bør i størst mulig grad være helt åpne, slik at alle kan bruke API-et uten autentisering.  Grunner til å ikke ha åpne data tilgjengelige for alle uten autentisering:  Informasjonen ligger lagret i flere systemer, men dette systemer er ikke masterdatakilde. Skjerme backend-systemet for last (kan da ha åpen plan med rate-limiting. Du ønsker vite hvem som har tilgang, så du kan kontakte dem ved nedetid og endringer.  Du kan i API manager sette opp automatisk godkjenning av søknader om tilgang til åpne data.  Selv om noe av denne informasjonen skal være tilgjengelig for alle, skal likevel informasjonens integritet sikres ved at kun riktige applikasjoner har tilgang til å endre informasjonen.  ","version":"Next","tagName":"h2"},{"title":"Tilgang til API-er basert på samtykke​","type":1,"pageTitle":"Tilgang til data","url":"/docs/datadeling/god-praksis/informasjonsforvaltning/api-tilganger#tilgang-til-api-er-basert-på-samtykke","content":" Tilgang til API hvor personer samtykker til at en applikasjon får tilgang til sine data (ofte kalt brukersentrisk datadeling) trenger ikke ekstra godkjennelse per applikasjon. Datatilbyder setter opp API-ene slik at de kun gir ut informasjon som tilhører personen.  ","version":"Next","tagName":"h2"},{"title":"Tilgang til persondata hjemlet i lov​","type":1,"pageTitle":"Tilgang til data","url":"/docs/datadeling/god-praksis/informasjonsforvaltning/api-tilganger#tilgang-til-persondata-hjemlet-i-lov","content":" Tjenester som behandler personopplysninger er omfattet av kravene i GDPR, og må ha formåls- og hjemmelsvurdering, og ha gjennomført risiko og sårbarhetsanalyse. For tjenester som driftes av eksterne må institusjonen i tillegg ha databehandleravtale og overføringsgrunnlag (for utenlandske (under)leverandører).  Datatilbyder må sjekke at alt dette er på plass før konsumenten får tilgang til personopplysningene. Rent praktisk kan dette gjøres ved at opplysninger om dette legges ved søknaden om tilgang. Når man registrerer API bør planer som gir tilgang til persondata kreve kommentar og en kort beskjed om krav til referanse  ","version":"Next","tagName":"h2"},{"title":"Data med begrenset tilgang​","type":1,"pageTitle":"Tilgang til data","url":"/docs/datadeling/god-praksis/informasjonsforvaltning/api-tilganger#data-med-begrenset-tilgang","content":" Informasjon som ikke skal være åpen og som ikke er regnet som fortrolig havner gjerne i denne mellomkategorien. Tilgang på slike data kan deles med både eksterne og interne.  Søknad om tilgang til disse dataene bør inneholde en begrunnelse og/eller beskrivelse av hva dataene skal brukes til. For personopplysninger må informasjon om formål/hjemmelsvurdering legges ved. Kommentarfeltet i søknaden i API manager kan brukes for dette.  Dataforvalter bør beskrive hvordan nødvendig dokumentasjon skal tilgjengeliggjøres i API manager, for å hjelpe konsumentene med søknadsprosessen.  ","version":"Next","tagName":"h2"},{"title":"Fortrolige data​","type":1,"pageTitle":"Tilgang til data","url":"/docs/datadeling/god-praksis/informasjonsforvaltning/api-tilganger#fortrolige-data","content":" Dette er informasjon som institusjonen er pålagt å begrense tilgangen til i lov, forskrift, avtaler, og annet regelverk. Dette tilsvarer gradenfortrolig i den offentlige Beskyttelsesinstruksen.  API-er som tilbyr fortrolige data er pålagt å ha ekstraordinære beskyttelsestiltak. Dette kan være med ekstra kryptering, eller asymmetrisk nøkkel, for eksempel OAuth2. Bruk av IP-filter kan komme i tillegg, men er alene ikke et godt nok ekstratiltak. ","version":"Next","tagName":"h2"},{"title":"Integrasjonsmønstre i fellestjenesten for Datadeling","type":0,"sectionRef":"#","url":"/docs/datadeling/god-praksis/integrasjonsmonster/","content":"","keywords":"","version":"Next"},{"title":"Introduksjon​","type":1,"pageTitle":"Integrasjonsmønstre i fellestjenesten for Datadeling","url":"/docs/datadeling/god-praksis/integrasjonsmonster/#introduksjon","content":" Ulike behov og tjenester har ulike behov for typen integrajon. Mønstrene beskrevet her er basert på erfaringer fra sektoren, og dekker de viktigste behovene.  Fellestjenesten krever ikke at du må bruke disse mønstrene, da de bare er anbefalinger, men det er gevinster ved å integrere likt som andre. Det gjør det enklere å samarbeide om integrasjon, øker sjansen for gjenbruk, og er mønster som sektoren har gode erfaringer med. Det er også disse mønstrene fellestjenesten har god støtte for.  Vi skiller mellom to forskjellige typer integrasjonsmønstre:  Integrasjoner der sluttbruker er involvert.System-til-system-integrasjoner.  Fokuset i fellestjenesten er system-til-system-integrasjoner. ","version":"Next","tagName":"h2"},{"title":"API som datalager","type":0,"sectionRef":"#","url":"/docs/datadeling/god-praksis/integrasjonsmonster/datalager/","content":"","keywords":"","version":"Next"},{"title":"Når bør dette brukes?​","type":1,"pageTitle":"API som datalager","url":"/docs/datadeling/god-praksis/integrasjonsmonster/datalager/#når-bør-dette-brukes","content":" Dette mønsteret kan passe for IT-tjenester som er frontendtjenester, for eksempel portalsider på nett som skal samle informasjon fra forskjellige kilder.  Når du ønsker å gjenbruke oppdaterte data i en tjeneste, uten å måtte duplisere alle data.  Eksempler på tjenester:  Nettportal for studenter, der studenten logger på og får oversikt over sine detaljer, for eksempel informasjon om sine emner (fra FS), undervisningstider (fra kalendersystemet), sine eksamener (fra LMS-system som Canvas), hvor alt dette skjer (fra rombookingssystemet) og sine pensumlister.  ","version":"Next","tagName":"h2"},{"title":"Fordeler​","type":1,"pageTitle":"API som datalager","url":"/docs/datadeling/god-praksis/integrasjonsmonster/datalager/#fordeler","content":" Sluttbrukerne får ferskere data.Konsumenten får det enklere, ved å slippe å forholde seg til eget datalager, provisjonering og alt som følger med. For eksempel å slippe å rydde i gamle data. Dette kan gjøre det raskere og billigere for institusjonen å sette opp nye tjenester.  ","version":"Next","tagName":"h2"},{"title":"Ulemper​","type":1,"pageTitle":"API som datalager","url":"/docs/datadeling/god-praksis/integrasjonsmonster/datalager/#ulemper","content":" Datatilbyder får høyere krav til ytelse og responstid for API-et. Sluttbrukere har ofte lav toleranse for ventetid. Caching bør vurderes. Ressursbruken vil variere veldig avhengig av målgruppen. For eksempel vil studenttjenester ha veldig høy belastning ved studiestart, men veldig liten aktivitet på nattestid.  ","version":"Next","tagName":"h2"},{"title":"Fallgruver​","type":1,"pageTitle":"API som datalager","url":"/docs/datadeling/god-praksis/integrasjonsmonster/datalager/#fallgruver","content":" Konsument må kommunisere med tilbyder om forventninger om last, så tilbyder har mulighet for å skalere opp ved behov. Konsument bør hente data direkte fra kildesystemet og ikke fra et mellomsystem. Hvis ikke kan det kan skape utfordringer når data ikke er korrekte i alle systemer, og det gjør det vanskeligere å få oversikt over all dataflyt hos institusjonen. Datatilbyder er ikke kommunisert godt nok med om forventet last. Økt last vil kunne føre til at API-et går ned og tjenesten slutter å fungere.  ","version":"Next","tagName":"h2"},{"title":"Eksempler​","type":1,"pageTitle":"API som datalager","url":"/docs/datadeling/god-praksis/integrasjonsmonster/datalager/#eksempler","content":" En portal for studentene kan raskt gi studenten en samlet oversikt over data som er relevant for de. For eksempel å hente ut siste nyhetssaker fra påmeldte emner, tidspunkt for neste forelesning og innleveringsfrist, og siste nytt fra sine studentforeninger. Portalen trenger ikke å lagre alle slike opplysninger internt, men hente de fra relevante datatilbydere på direkten. ","version":"Next","tagName":"h2"},{"title":"Prosessene fra fellestjenesten for Datadeling","type":0,"sectionRef":"#","url":"/docs/datadeling/hva-er/prosessene/","content":"","keywords":"","version":"Next"},{"title":"Operative prosesser​","type":1,"pageTitle":"Prosessene fra fellestjenesten for Datadeling","url":"/docs/datadeling/hva-er/prosessene/#operative-prosesser","content":" For å bruke fellestjenesten har du prosessene:  Registrere og publisere APISøke etter APISøke om tilgang til APIGodkjenne og avslå tilgang til APIKoble til et API  Disse prosessene bør plasseres i organisasjonen.  Se veilederene for hvordan du gjennomfører prosessene i praksis.  ","version":"Next","tagName":"h2"},{"title":"Andre prosesser​","type":1,"pageTitle":"Prosessene fra fellestjenesten for Datadeling","url":"/docs/datadeling/hva-er/prosessene/#andre-prosesser","content":" Fellestjenesten anbefaler at institusjonene også innfører prosessene:  Informasjonforvaltning, spesielt sikre god datakvalitet. Se orden i eget hus.Implementere, designe og forvalte APIBeslutnings- og eskaleringsprosesser rundt integrasjonsutvikling, inkludert unntakshåndteringJustere institusjonens arkitektur etter nasjonale føringer og anbefalingene fra fellestjenesten ","version":"Next","tagName":"h2"},{"title":"Hvordan designe dine notifikasjoner","type":0,"sectionRef":"#","url":"/docs/datadeling/god-praksis/notifikasjonsdesign/","content":"","keywords":"","version":"Next"},{"title":"Anbefalt standard​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"/docs/datadeling/god-praksis/notifikasjonsdesign/#anbefalt-standard","content":" Hver tilbyder står selv fritt til å velge format på sine notifikasjoner, men vi anbefaler standarden CloudEvent. Dette fordi det er en system- og leverandøruavhengig standard som kan brukes av alle, og inneholder mange av de samme slutningene som vi har erfart.  Notifikasjoner bør også følge de samme føringene som ved utforming av API. Vi fraråder å lage egne notifikasjoner som er skreddersydde for spesifikke konsumenter, men lage notifikasjoner som er generelle og standardiserte nok til å kunne brukes av alle konsumenter.  ","version":"Next","tagName":"h2"},{"title":"Hva bør en notifikasjon inneholde?​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"/docs/datadeling/god-praksis/notifikasjonsdesign/#hva-bør-en-notifikasjon-inneholde","content":" Meningen med en notifikasjon er å fortelle konsumenter at noe har skjedd i kildesystemet, slik at de kan vurdere om de skal gjøre noe. Ved at tilbyder selv sier i fra, slipper tilbyder at hver enkelt konsument jevnlig spør etter om noe nytt har skjedd siden sist.  Notifikasjonen trenger som minimum å fortelle konsumentene:  Hvilket system, instans eller API dette gjelder. Så konsumenten vet hvor data skal hentes fra. Hvilket endepunkt, entitet eller objekt endringen gjelder for.  Det er også en fordel om notifikasjonen inneholder:  Hvilken type endring det er snakk om. Er det for eksempel oppretting, endring eller sletting av en entitet? Hvilket tidspunkt gjelder endringen for. Hvilke attributter har blitt endret.  Dette er optimalisering. Mer metadata om en endring gjør det enklere for konsumenter å filtrere bort endringer som er irrelevante for de. Dette skaper igjen mindre last på produsenten, siden færre konsumenter trenger å slå opp for å sjekke.  ","version":"Next","tagName":"h2"},{"title":"Framtidige hendelser​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"/docs/datadeling/god-praksis/notifikasjonsdesign/#framtidige-hendelser","content":" I noen tilfeller vil en endring ikke være gyldig før på et senere tidspunkt. For eksempel at en saksbehandler oppretter en ny ansatt, men som ikke skal starte før om to uker.  Tilbyderen sender en notifikasjon på tidspunktet registreringen skjedde, i dette tilfellet når den ansatte ble registrert. Tilbyderen har ikke ansvar for å sende ut en ny notifikasjon på tidspunktet endringen trer i kraft, selv om tilbyder gjerne må gjøre det. Det er konsumenten som er ansvarlig for å reagere på riktig tidspunkt, ikke tilbyder.  Bakgrunnen for ansvarsfordelingen er at tidspunkt for reaksjon er ulik hos konsumentene - det er forretningslogikk som ikke bør ligge hos tilbyder. I eksempelet med nyansatte kan for eksempel personpresentasjonsløsningen trenge å publisere personen samme dag som startdato i avtalen, mens IGA vil måtte opprette en brukerkonto kanskje fem dager før startdato. Andre konsumenter trenger kanskje ikke å forholde seg til startdato i det hele tatt, men provisjonere den nyansatte umiddelbart.  ","version":"Next","tagName":"h3"},{"title":"Eksempler på notifikasjoner​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"/docs/datadeling/god-praksis/notifikasjonsdesign/#eksempler-på-notifikasjoner","content":" Eksempel på en notifikasjon som bruker CloudEvents-standarden:   { &quot;specversion&quot; : &quot;1.0&quot;, &quot;type&quot; : &quot;no.uio.cerebrum.account.create&quot;, &quot;source&quot; : &quot;https://cerebrum-uio.uio.no&quot;, &quot;subject&quot; : &quot;https://cerebrum-uio.uio.no/api/v2/accounts/123456&quot;, &quot;id&quot; : &quot;4d3559ec67504aaba65d40b0363faad8&quot;, &quot;time&quot; : &quot;2020-10-29T09:01:14Z&quot;, }   Dette eksempelet er en typisk &quot;tynn melding&quot;, som forteller deg at en brukerkonto har blitt opprettet, men ikke så mye annet. For å vite mer om brukerkontoen må du snakke med API-et som subject peker til.  Eksempel på en mye enklere notifikasjon:  accounts/123456  For enkle tjenester kan dette være godt nok. De fleste tilbydere er likevel tjent med å eksponere mer detaljer, spesielt for å redusere antal spørringer fra konsumentene.  ","version":"Next","tagName":"h2"},{"title":"Eksempler på tjenester​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"/docs/datadeling/god-praksis/notifikasjonsdesign/#eksempler-på-tjenester","content":" NTNU sin OrgReg gir ut notifikasjoner som følger CloudEvents-standarden. IGA-løsninger, som Rapid Identity og Cerebrum, gir ut notifikasjoner.  Se gjerne i institusjonenes API-kataloger for detaljer om notifikasjoner fra de enkelte tjenestene.  ","version":"Next","tagName":"h2"},{"title":"Hvorfor tynne meldinger?​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"/docs/datadeling/god-praksis/notifikasjonsdesign/#hvorfor-tynne-meldinger","content":" Tynne meldinger gir en enklere flyt for provisjoneringsløsninger, som har fokus på status her og nå. Meldingene er tynne for å redusere mengden personopplysninger, og unngår at konsumentene behandler det som kildedata. Meldinger kan bli forsinket, for eksempel at de ligger på vent i meldingskøen mens konsumenten er nede, og vil fort kunne inneholde utdaterte data.  ","version":"Next","tagName":"h2"},{"title":"Fallgruver​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"/docs/datadeling/god-praksis/notifikasjonsdesign/#fallgruver","content":" Notifikasjonene gir bare informasjon om at noe har skjedd, og ikke hva som har skjedd. Ikke se på notifikasjoner som kildedata - kildedata må du få fra tilbyders API. Faren med å bruke innholdet i notifikasjoner som kildedata er at du kan ende opp med utdaterte data - for eksempel hvis konsument ikke har hentet ut nye notifikasjoner fra sin meldingskø på en dag.  API og notifikasjoner bør vere i synk, dvs. snakke om de samme entitetene. Gjøres dette ulikt blir det fort komplisert hos alle konsumenter som må tolke og oversette.  API-et bør tilby data konsistent. Hvis en entitet finnes, bør det eksponeres i API-et uavhengig av tidspunktet spørringen skjer på. Hvis data for eksempel blir begrenset før et tidspunkt, og etter en viss tid, er det stor fare for at tilbyder utfører en forretningslogikk som bør ligge hos konsumentene. Plutselig dukker det opp en konsument med behov for data på et enda senere tidspunkt, som da plutselig ikke blir mulig.  ","version":"Next","tagName":"h2"},{"title":"Se også​","type":1,"pageTitle":"Hvordan designe dine notifikasjoner","url":"/docs/datadeling/god-praksis/notifikasjonsdesign/#se-også","content":" Integrasjonsmønsteret hendelsesbasert provisjonering, som bruker notifikasjoner. Selvbetjening for RabbitMQ, som er der du administrerer hvem som har tilgang til hvilke notifikasjoner. ","version":"Next","tagName":"h2"},{"title":"Rollene i fellestjenesten for Datadeling","type":0,"sectionRef":"#","url":"/docs/datadeling/hva-er/roller/","content":"","keywords":"","version":"Next"},{"title":"Mottaksansvarlig og datadelingskoordinator​","type":1,"pageTitle":"Rollene i fellestjenesten for Datadeling","url":"/docs/datadeling/hva-er/roller/#mottaksansvarlig-og-datadelingskoordinator","content":" Hver institusjon som innfører fellestjenesten bør ha sin lokale koordinator som tar seg av dialogen med Sikt. Under innføringen av IntArk er det denne personen Sikt forholder seg til.  Den mottaksansvarlige må sikre at institusjonen innfører fellestjenesten på en hensiktsmessig måte, blant annet ved:  Kjenne til anbefalingene fra fellestjenesten.Relevante interessenter blir holdt informert (blant annet dataforvaltere, tjenesteeiere, utviklere og anskaffere).Intern dokumentasjon blir oppdatert.Se til at datatilbydere og konsumenter får tilganger i den tekniske plattformen.Holde Sikt oppdatert på innføringen av IntArk.Koordinere opplæringstilbudet fra Sikt internt hos institusjonen.Melde tilbake til Sikt om mangler og behov.  Etter innføringen bør institusjonen også ha en koordinator som kjenner til fellestjenesten, da dette kan gjøre videre forvaltning enklere.  ","version":"Next","tagName":"h2"},{"title":"Datatilbyder​","type":1,"pageTitle":"Rollene i fellestjenesten for Datadeling","url":"/docs/datadeling/hva-er/roller/#datatilbyder","content":" En datatilbyder er en person, tjeneste eller enhet som har ansvar for data som er brukbare for andre - dvs. kildedata. Referansearkitekturen deler denne rollen opp i tre roller: tjenesteeier, tjenesteansvarlig og datforvalter, men i fellestjenesten forholder vi oss primært bare til alt som datatilbyderen. Institusjonen er likevel anbefalt å følge rolledefinisjonen fra referansearkitekturen.  I fellestjenesten er datatilbyderens primære ansvar at dataene blir gjort tilgjengelige, uavhengig av hvem som er konsument. Datatilbyder må også følgestyringsreglene, og bør også se på anbefalingene rundt effektiv datadeling.  I den tekniske plattformen skal datatilbydere publisere sine API, og registrere sin publisering av notifikasjoner.  ","version":"Next","tagName":"h2"},{"title":"Konsument​","type":1,"pageTitle":"Rollene i fellestjenesten for Datadeling","url":"/docs/datadeling/hva-er/roller/#konsument","content":" En person, enhet eller tjeneste som trenger å hente data fra et kildesystem. Husk at du kan både være datatilbyder og konsument - dette avhenger av hvilke data du ser på.  I fellestjenesten er konsumenten pliktig å hente data direkte fra kildesystemet, og å rapportere om feil i data til datatilbyder. Konsumenten må også selv håndtere systemspesifikke tilpasninger av dataene.  I den tekniske plattformen må konsumenter registrere sin tjeneste for å kunne søke om tilgang til datatilbydere sine API, og kunne abonnere på deres notifikasjoner.  ","version":"Next","tagName":"h2"},{"title":"Dataforvalter​","type":1,"pageTitle":"Rollene i fellestjenesten for Datadeling","url":"/docs/datadeling/hva-er/roller/#dataforvalter","content":" Dataforvalter er den enhet/person som har ansvaret for å administrere dataene hos en datatilbyder. Vi anbefaler at dette ansvaret plasseres, men det er opp til institusjonen om dette plasseres som en egen roller, eller sammen med for eksempel datatilbyder, tjenesteeier eller tjenesteansvarlig.  Dataforvalter er ansvarlig for datakvaliteten, dvs:  At data er kompletteAt data er maskinlesbareAt data er riktig formaterte  ","version":"Next","tagName":"h2"},{"title":"Se også​","type":1,"pageTitle":"Rollene i fellestjenesten for Datadeling","url":"/docs/datadeling/hva-er/roller/#se-også","content":" BegrepsbrukRollene i referansearkitekturenStyringsreglene til fellestjenesten ","version":"Next","tagName":"h2"},{"title":"Hendelsesbasert provisjonering","type":0,"sectionRef":"#","url":"/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/","content":"","keywords":"","version":"Next"},{"title":"Hvorfor dette mønsteret?​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#hvorfor-dette-mønsteret","content":" Dette mønsteret gjør at mindre data trenger å overføres, og at konsumentene kan bli oppdatert umiddelbart. Dette uten behov for å hente absolutt alle data fra tilbyderen, eller at datatilbyder må selv dytte data ut til hver enkelt konsument.  Tradisjonelt har man brukt tunge, filbasertebatch-oppdateringerfor å provisjonere tjenester. Dette er ikke en effektiv måte å integrere på, fordi produsenten må samle og overføre komplette datasett, og konsumenten må sammenligne det komplette datasettet i hver runde. Det hendelsesbaserte mønsteret effektiviserer integrasjonen, og gjør at bare nødvendige data kan overføres, raskere.  Mønsteret er ikke designet for tjenester som trenger historiske data eller trenger å &quot;spille av&quot; tidligere endringer. Slike tjenester vil fort kunne ha behov for mer komplisert funksjonalitet, enten at datatilbyder eller konsument lagrer slik historikk selv, eller mer avansert mellomvare enn enkle meldingskøer.  Bruken av meldingskøer for å håndtere notifikasjoner om endringer er valgt av tekniske grunner. Meldingskøer er effektive og lite kompliserte, og gjør at datatilbyder slipper å måtte forholde seg til hver enkelt konsument i utsendingen. Alternative metoder, som HTTP-kall eller websockets, har ikke vært modne nok og har ført til mer kompleksitet hos datatilbyder, og har derfor blitt valgt bort. Tekniske endringer i fremtiden kan endre på denne anbefalingen.  ","version":"Next","tagName":"h2"},{"title":"Teknisk flyt​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#teknisk-flyt","content":"   En typisk flyt med dette integrasjonsmønsteret:  Datatilbyder får endret data om en entitet, for eksempel fordi en saksbehandler gjør endringer.Datatilbyder sender ut en notifikasjon til meldingskø-tjenesten, RabbitMQ, om at noe har skjedd. Notifikasjonen inneholder lite data, annet enn hvilken entitet det gjelder.Meldingskø-tjenesten tar i mot notifikasjonen og distribuerer den videre til alle konsumenter som abonnerer på dataene de gjelder.Konsumenten mottar notifikasjonen, og ser om den er relevant.Konsumenten henter ut data fra kildesystemet sitt API.Konsumenten oppdaterer sine interne data.  Hvis konsumenten selv er tilbyder av andre kildedata som blir oppdatert basert på dette, vil konsumenten bytte rolle til datatilbyder og gå gjennom samme prosessen. Et eksempel på dette er at en ansatt får endret sitt navn i personalsystemet, som gjør at e-posttjenesten endrer primær e-postadresse, som gjør at andre konsumenter endrer sine data. I dette tilfellet kan også personalsystemet være en konsument og oppdatere den ansatte sin e-postadresse indirekte grunnet navneendringen. Merk at e-posttjenesten skal ikke sende ut notifikasjoner om at navn er endret, siden det er personalsystemets ansvar, men bare for endret e-postadresse.  Et eksempel fra flyten over:  En saksbehandler endrer mobilnummeret til en ansatt i personalsystemet (datatilbyderen).Personalsystemet sender notifikasjonen &quot;person-objekt med id 123 er endret&quot; til RabbitMQ.RabbitMQ sender notifikasjonen videre til konsumentene som abonnerer på de. En av disse kan være et CMS med personpresentasjoner.CMS mottar notifikasjon om at person 123 er endret. CMS ser at denne personen er registrert hos seg, og trenger derfor å reagere.CMS kaller på API-et til tjenesten, via API manager, og henter ut data om personen. Avhengig av granulariteten til datatilbyder, vil CMS enten få returnert mobilnummeret eller flere personopplysninger.CMS sammenlikner personopplysningene, og oppdatere data som er endret.  ","version":"Next","tagName":"h2"},{"title":"Når bør dette brukes?​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#når-bør-dette-brukes","content":" Dette mønsteret passer når du trenger å provisjonere et endesystem med kildedata fra en tilbyder, uten at sluttbrukeren er involvert.  Dette mønsteret bør brukes når noen forventer at data er tilgjengelig tilnærmet umiddelbart, eller når fortløpende oppdateringer gir en bedre brukeropplevelse.  Det er ofte en kost-nytte-vurdering om raskt oppdaterte data gir nok gevinster til å veie opp for kostnadene. Ofte blir gevinstene undervurderte, da indirekte kostnader ikke blir inkludert - når data blir raskt oppdaterte øker tilliten til de og de blir brukt mer og av flere konsumenter.  ","version":"Next","tagName":"h2"},{"title":"Fordeler​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#fordeler","content":" Data blir oppdatert raskere i mange systemer - &quot;tilnærmet umiddelbart&quot;. Dette gir ofte en bedre brukeropplevelse, og mer tillit til dataene og tjenesten. Mye mindre ressurskrevende enn det eldre mønsteret der du henter alledata fra kilden, og oppdaterer konsumenten.  ","version":"Next","tagName":"h2"},{"title":"Ulemper​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#ulemper","content":" Passer best for system-til-system-integrasjoner. Har du veldig mange konsumenter vil det sette høyere krav til ytelsen hos datatilbyder. Dette kan kompenseres ved for eksempel caching i API manager. Å implementere notifikasjonsutsending hos datatilbyder kan være krevende å implementere. Det kan også være ukjent teknologi for mange utviklere. Mønsteret koster mer å implementere enn en gammeldags fullsynk.  ","version":"Next","tagName":"h2"},{"title":"Eksempler​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#eksempler","content":" DFØ sine API støtter utsending av hendelser når det skjer endringer i deres API. Overføring av notifikasjoner fra DFØ til din institusjon må settes opp - ta kontakt. Flere IGA-løsninger, som Rapid Identity og Cerebrum, støtter utsending av hendelser når det skjer endringer på brukerkontoer og grupper.  Flere og flere tjenester i sektoren støtter utsending av notifikasjoner ved endringer i sine data, spesielt de som utvikles av sektoren selv.  ","version":"Next","tagName":"h2"},{"title":"Fallgruver​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#fallgruver","content":" Datatilbyder skal bare sende ut notifikasjoner når data faktisk er endrethos seg selv, og ikke sende ut notifikasjoner bare fordi tjenesten har mottatt notifikasjoner fra andre. Falske positive notifikasjoner vil føre til mer ressursbruk, siden det kan føre til unødvendige API-oppslag fra konsumenter. I verste fall vil du kunne få evige meldingsløkker hvis to systemer som snakker sammen gjør samme feilen - de vil sende samme notifikasjonen fram og tilbake, uten stopp.  Notifikasjonene er tynne - inneholder få data - men de vil likevel kunne inneholde personopplysninger: en identifikator til en person eller til data som tilhører en enkelt person. Notifikasjonene må derfor behandles som personopplysninger. Fordelen med at notifikasjonene er tynne, er at du reduserer risikoen for at de inneholder personopplysninger som krever ekstraordinære tiltak, for eksempel helseopplysninger, da dette skal beskyttes bak datatilbyders API.  ","version":"Next","tagName":"h2"},{"title":"Se også​","type":1,"pageTitle":"Hendelsesbasert provisjonering","url":"/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/#se-også","content":" Utforming av notifikasjoner ","version":"Next","tagName":"h2"},{"title":"IntArk for anskaffere/innkjøpere","type":0,"sectionRef":"#","url":"/docs/datadeling/malgrupper/anskaffer/","content":"","keywords":"","version":"Next"},{"title":"Hva trenger jeg å vite?​","type":1,"pageTitle":"IntArk for anskaffere/innkjøpere","url":"/docs/datadeling/malgrupper/anskaffer/#hva-trenger-jeg-å-vite","content":" Hvis du skal kjøpe inn digitale løsninger, vil de mest sannsynlig måtte integrere med andre løsninger, nå eller i fremtiden. Det er derfor viktig å vite hvilke krav IntArk setter til integrasjoner, for å kunne vektlegge dette i innkjøpet.  Som anskaffer trenger du:  Les Hva er IntArk.Les veileder for anskaffelser.Sjekkliste for om en IT-tjeneste er IntArk-kompatibel [TODO lag og lenk] ","version":"Next","tagName":"h2"},{"title":"Kode som bruker IntArk","type":0,"sectionRef":"#","url":"/docs/datadeling/kode","content":"","keywords":"","version":"Next"},{"title":"Enkle eksempler​","type":1,"pageTitle":"Kode som bruker IntArk","url":"/docs/datadeling/kode#enkle-eksempler","content":" Du kan laste ned ferdig python-kode for å produsere og hente notifikasjoner for din applikasjon fra IntArks Selvbetjeningstjeneste for meldingskøer. Disse filene er ferdig satt opp med detaljer som hostname og navn på kø.Enkel publisering av notifikasjoner for meldingskø (python)Enkel konsumering av notifikasjoner fra meldingskø (python)Se også RabbitMQ sine mer generelle introduksjoner, for ulike programmeringsspråk  ","version":"Next","tagName":"h2"},{"title":"Eksisterende tjenester​","type":1,"pageTitle":"Kode som bruker IntArk","url":"/docs/datadeling/kode#eksisterende-tjenester","content":" Eksisterene IntArk-kompatible tjenester som du kan se koden til og hente inspirasjon fra:  Canvas-integrasjon - En hendelsesbasert oppdatering av Canvas basert på notifikasjoner og data fra Felles Studentsystem, SAP og IGA. Denne er i bruk på UiO. Se Designdokument for Canvas-integrasjonenfor en overordnet forklaring på hva integrasjonen gjør. TOFH - Motor for å ta imot IntArk-notifikasjoner og reagere på disse. Denne brukes som en sentral komponent i flere mikrotjenester. Koden er skrevet i python. Kode for TOFH i UiB sin gitlab Kalenderdata - Tjeneste som oppdaterer studenters og fagpersoners Exchange-kalendre med studieelementer, basert på notifikasjoner og data fra Felles Studentsystem og TP. Denne er i bruk på UiO og andre institusjoner. SeDesigndokument for Kalenderdatafor en overordnet forklaring på hva integrasjonen gjør.  ","version":"Next","tagName":"h2"},{"title":"Se også​","type":1,"pageTitle":"Kode som bruker IntArk","url":"/docs/datadeling/kode#se-også","content":" Oversikt over BOTT-INTs integrasjoner for 2020-2021. Disse er laget på bestilling av prosjekt BOTT Økonomi og lønn, og et krav er at de skal følge IntArk.Oversikt over den tekniske plattforme, for tilkoblingsdetaljer i IntArk.Universitetet i Oslo på Github. Mer kode er tilgjengelig ved å henvende deg til integrasjon@uio.no. ","version":"Next","tagName":"h2"},{"title":"IntArk for dataeiere","type":0,"sectionRef":"#","url":"/docs/datadeling/malgrupper/dataeier/","content":"","keywords":"","version":"Next"},{"title":"Hva trenger jeg å vite?​","type":1,"pageTitle":"IntArk for dataeiere","url":"/docs/datadeling/malgrupper/dataeier/#hva-trenger-jeg-å-vite","content":" Som ansvarlig for data som andre kan ha bruk for, har du plikt til å dele dette i et API.  Les Hva er IntArkSe oversikten over roller og plikter i IntArk som er relevant for deg. Du som dataeier har rollen &quot;Tilbyder&quot;.  ","version":"Next","tagName":"h2"},{"title":"Hvordan komme i gang?​","type":1,"pageTitle":"IntArk for dataeiere","url":"/docs/datadeling/malgrupper/dataeier/#hvordan-komme-i-gang","content":" Det viktigste er at du er kjent med din rolle i IntArk, spesielt hva som er ditt ansvar som dataeier.  Er dine data tilgjengeliggjort i et API, med et åpent grensesnitt? Se anbefalinger om bruk av Web ServiceSe veileder for anskaffelse av IT-tjenester Er API-et for dine data registrert i institusjonens API manager? Se veileder for å registrere ditt APISe veileder for å gi eller avslå søknader om tilgang til ditt API Har du kontroll på datakvaliteten, og rutiner for å vedlikeholde disse? Se anbefalinger rundt god datakvalitetSe også veilederen Orden i eget hus ","version":"Next","tagName":"h2"},{"title":"IntArk for institusjonsansvarlige","type":0,"sectionRef":"#","url":"/docs/datadeling/malgrupper/institusjonsansvarlig/","content":"","keywords":"","version":"Next"},{"title":"Hva trenger jeg å vite?​","type":1,"pageTitle":"IntArk for institusjonsansvarlige","url":"/docs/datadeling/malgrupper/institusjonsansvarlig/#hva-trenger-jeg-å-vite","content":" Som ansvarlig for en institusjon er du også ansvarlig for at IntArk sine føringer følges.  Relevant informasjon:  Hva er IntArkKonsekvenser for organisasjonenRollene i IntArkStyringsreglene til IntArk  ","version":"Next","tagName":"h2"},{"title":"Hvordan kommer jeg i gang med IntArk?​","type":1,"pageTitle":"IntArk for institusjonsansvarlige","url":"/docs/datadeling/malgrupper/institusjonsansvarlig/#hvordan-kommer-jeg-i-gang-med-intark","content":" Følg veilederen for innføring av IntArk. ","version":"Next","tagName":"h2"},{"title":"IntArk for sluttbrukere","type":0,"sectionRef":"#","url":"/docs/datadeling/malgrupper/sluttbruker/","content":"","keywords":"","version":"Next"},{"title":"IntArk for utviklere","type":0,"sectionRef":"#","url":"/docs/datadeling/malgrupper/utvikler/","content":"","keywords":"","version":"Next"},{"title":"For utviklere som er ferske i IntArk​","type":1,"pageTitle":"IntArk for utviklere","url":"/docs/datadeling/malgrupper/utvikler/#for-utviklere-som-er-ferske-i-intark","content":" Hva er IntArk i praksis, for utviklereIntroduksjon til anbefalte integrasjonsmønstreEksempler på kode og eksisterende IntArk-kompatible tjenester  ","version":"Next","tagName":"h2"},{"title":"Oppslag​","type":1,"pageTitle":"IntArk for utviklere","url":"/docs/datadeling/malgrupper/utvikler/#oppslag","content":" Oversikt over tekniske komponenteneAPI manager: OversiktMeldingskø: Tekniske detaljerBegrepsbrukAlle veiledere  ","version":"Next","tagName":"h2"},{"title":"Tilbyder​","type":1,"pageTitle":"IntArk for utviklere","url":"/docs/datadeling/malgrupper/utvikler/#tilbyder","content":" For deg som utvikler systemer som andre kan hente kildedata fra:  Hvilke integrasjonsmønstre som anbefales i IntArkHvordan utforme ditt APIHvordan utforme og sende notifikasjonerHvordan registrere ditt API i API manager Krav om Feide, via OIDC?Kva med system-til-system-integrasjoner?Hvor bør API legges Veileder for å se bruken av ditt API, for innsikt og statistikk over bruk, for eksempel hvem som bruker API-et ditt mest?  ","version":"Next","tagName":"h2"},{"title":"Konsument​","type":1,"pageTitle":"IntArk for utviklere","url":"/docs/datadeling/malgrupper/utvikler/#konsument","content":" For deg som utvikler IT-tjenester som skal hente data fra datatilbydere.  Hvordan finne frem til riktige data: Gå til API-katalogen hos din instans, og søk etter API Hvordan søke om tilgang (veileder)Hvordan forholde deg til IntArks bruk av notifikasjoner (se også begrepsoversikten) ","version":"Next","tagName":"h2"},{"title":"Hva er IntArk i praksis, for utviklere","type":0,"sectionRef":"#","url":"/docs/datadeling/malgrupper/utvikler/intro","content":"","keywords":"","version":"Next"},{"title":"Hva er IntArk for meg som utvikler?​","type":1,"pageTitle":"Hva er IntArk i praksis, for utviklere","url":"/docs/datadeling/malgrupper/utvikler/intro#hva-er-intark-for-meg-som-utvikler","content":" IntArk består av en del overordnede føringer for hvordan vi skal dele data i sektoren, og noen tekniske verktøy for å gjøre dette enklere. Meningen med IntArk er å gjøre det enklere å dele data i sektoren, for å enklere kunne digitalisere.  For deg som utvikler finner du det mest praktiske i:  Du må registrere dine API i institusjonens API manager, og styre data via institusjonen API gateway.Du må få tilgang til andre sine API via institusjonens API manager.Du kan få tilgang til notifikasjoner fra kildesystemer du har tilgang til.  Merk at du må også forholde deg til føringene fra IntArk, spesielt hvis du utvikler på en tjeneste som inneholder data som andre vil kunne bruke.  ","version":"Next","tagName":"h2"},{"title":"Hva må jeg gjøre i praksis?​","type":1,"pageTitle":"Hva er IntArk i praksis, for utviklere","url":"/docs/datadeling/malgrupper/utvikler/intro#hva-må-jeg-gjøre-i-praksis","content":" Du som utvikler kildesystemer må:  Tilgjengeliggjøre dine data via et API som følger anbefalingene fra IntArk.Dokumentere ditt API. F.eks. med OpenAPI (swagger).Produsere notifikasjoner som følger anbefalingene fra IntArk.Registrere ditt API i institusjonens API manager.  Som konsument må du:  Finne og søke om tilgang til data fra kildesystemer. Tilganger og data skal gå gjennom institusjonens API manger og API gateway.  ","version":"Next","tagName":"h2"},{"title":"Hva du må tenke på​","type":1,"pageTitle":"Hva er IntArk i praksis, for utviklere","url":"/docs/datadeling/malgrupper/utvikler/intro#hva-du-må-tenke-på","content":" IntArk setter noen føringer for integrasjoner, slik at vi enklere kan samarbeide om integrasjoner og datadeling. Noen føringer vil kunne gjøre det vanskeligere for enkelte, selv om det er til nytte for sektoren som helhet.  Noen eksempler på føringer fra IntArk:  Du må være bevisst på dine data. Hvis ditt system inneholder data, må de defineres et felles sted i din institusjon, så andre kan finne de. Hvis du trenger noen data, må du først sjekke om dette, eller noe tilsvarende, finnes i andre kildesystemer. Prioriter gjenbruk av data. Hvis det finnes tilsvarende data andre steder, men ikke kan brukes for eksempel grunnet for dårlig datakvalitet, plikter du å informere gitt dataeier om dette. Å produsere nye, tilnærmet like data, vil kunne skape forvirring og ekstraarbeid for institusjonen senere. Alle kildesystem må ha konkretisert en dataeier, som har ansvaret for å tilgjengeliggjøre data. Dette kan ofte vere den samme som tjenesteeier.Alle kildesystem er pliktige til å gjøre sine data tilgjengelige via et API. Det finnest føringer og anbefalinger rundt utforming av API, bruk av bransjestandarder, og beste praksis rundt bruk av protokoller.Kildesystem skal ikke utvikle skreddersøm per konsument, men er pliktig til å eksponere sine data i et mest mulig generelt grensesnitt. Konsumerende tjenester er selv ansvarlige for sin forretningslogikk.Som konsument kan du kreve tilgang til data fra andre kildesystemer, så lenge du har et reelt behov, men du kan ikke kreve spesialtilpasninger. ","version":"Next","tagName":"h2"},{"title":"IntArk for leverandører","type":0,"sectionRef":"#","url":"/docs/datadeling/malgrupper/leverandor/","content":"","keywords":"","version":"Next"},{"title":"Hva trenger jeg å vite?​","type":1,"pageTitle":"IntArk for leverandører","url":"/docs/datadeling/malgrupper/leverandor/#hva-trenger-jeg-å-vite","content":" IntArk setter føringer for hvordan systemer og tjenester skal integreres i UH-sektoren. Dette påvirker også anskaffelser av systemer og tjenester for UH-sektoren.  Se Hva er IntArk for en kort innføring.  Se også veileder for anskaffere, som gir deg sektorens forventinger til et systems evne til datadeling. ","version":"Next","tagName":"h2"},{"title":"Mine data​","type":1,"pageTitle":"IntArk for sluttbrukere","url":"/docs/datadeling/malgrupper/sluttbruker/#mine-data","content":" IntArk er bare et verktøy for å gjøre datadeling ryddigere, for eksempel ved å enklere gi oversikt over hvilke data som er hvor. Ingenting er endret, det er fremdeles dine data, men med IntArk er det enklere å finne frem.  Du kan selv se din institusjons API-katalog. Du vil ikke nødvendigvis kunne selv få tilgang til alle dine personopplysninger direkte via alle API, men du kan spørre.  ","version":"Next","tagName":"h2"},{"title":"Mine integrasjoner​","type":1,"pageTitle":"IntArk for sluttbrukere","url":"/docs/datadeling/malgrupper/sluttbruker/#mine-integrasjoner","content":" Du kan søke om tilgang til de forskjellige API-ene hos din institusjon. Noe kan du få tilgang til som sluttbruker, mens annet kan du få tilgang til om du for eksempel er forsker eller student. Dette vurderes utfra hvilke data du ber om tilgang til.  Merk at bruk av enkelte data vil påføre deg et ansvar, for eksempel bruk av personopplysninger. Dette må avtales for hver enkelt tilgang.  Se veileder for å søke om tilgang til et APIFor mer informasjon, se introduksjon til hva IntArk er for noe, inkludert en kort video. ","version":"Next","tagName":"h2"},{"title":"Hva er Fellestjenesten for Datadeling (IntArk)?","type":0,"sectionRef":"#","url":"/docs/datadeling/om/","content":"","keywords":"","version":"Next"},{"title":"Fellestjeneste for Datadeling​","type":1,"pageTitle":"Hva er Fellestjenesten for Datadeling (IntArk)?","url":"/docs/datadeling/om/#fellestjeneste-for-datadeling","content":" Sikt leverer fellestjenesten for Datadeling. Fellestjenesten inkluderer:  Hva\tInneholderFøringer for hvordan dele likt\tReferansearkitektur og styringsregler Hjelp til å dele\tSupport, rådgivning og anbefalinger Verktøy for å dele\tTeknisk plattform  ","version":"Next","tagName":"h2"},{"title":"Hvorfor Fellestjeneste for Datadeling?​","type":1,"pageTitle":"Hva er Fellestjenesten for Datadeling (IntArk)?","url":"/docs/datadeling/om/#hvorfor-fellestjeneste-for-datadeling","content":" Digitaliseringen krever mer datadeling og flere integrasjoner. En felles integrasjonsarkitektur i universitets- og høgskolesektoren gjør det enklere og mer effektivt å dele data, både internt hos en institusjon, mellom institusjoner og med resten av verden.  Fellestjenesten fokuserer på det som gir mest verdi for UH-sektoren som helhet. Løsninger skal kunne samhandle, uavhengig av leverandør og lokasjon. Prinsippene bidrar til at sektoren henger med i utviklingen og kan tilby tidsriktige løsninger av høy kvalitet.  Noen gevinster med bruk av fellestjenesten:  Enklere å samarbeide med andre om datadeling, både internt hos hver institusjon og mellom institusjonene. Enklere å finne og ta i bruk data fra andre tjenester. Enklere å bytte ut tjenester, siden de er løsere koblet. Bruk av anbefalte integrasjonsmønstre gir raskere oppdaterte tjenester, som gjør de mer brukervenlige.  ","version":"Next","tagName":"h2"},{"title":"Føringer​","type":1,"pageTitle":"Hva er Fellestjenesten for Datadeling (IntArk)?","url":"/docs/datadeling/om/#føringer","content":" Fellestjenesten forholder seg til føringer fra:  Digitaliseringsstrategien for offentlig sektor 2019-2025Digitaliseringsdirektoratets overordnede arkitekturprinsipperDigitaliseringsdirektoratets rammeverk for digital samhandlingDigitaliseringsdirektoratets rammeverk for informasjonsforvaltning  ","version":"Next","tagName":"h2"},{"title":"Se også​","type":1,"pageTitle":"Hva er Fellestjenesten for Datadeling (IntArk)?","url":"/docs/datadeling/om/#se-også","content":" Begrepsoversikten ","version":"Next","tagName":"h2"},{"title":"Bakgrunnen for Fellestjenesten for Datadeling","type":0,"sectionRef":"#","url":"/docs/datadeling/om/bakgrunn/","content":"","keywords":"","version":"Next"},{"title":"IT-arkitekturprinsipper for offentlig sektor - 2009​","type":1,"pageTitle":"Bakgrunnen for Fellestjenesten for Datadeling","url":"/docs/datadeling/om/bakgrunn/#it-arkitekturprinsipper-for-offentlig-sektor---2009","content":" IntArk ble bygget utfra de felles arkitekturprinsippene for offentlig sektor som ble lagt frem som en del av St. meld nr. 19 (2008-2009) - Ei forvaltning for demokrati og fellesskap. Her besluttet regjeringen syv overordnede prinsipper som skal fungere som et sett med felles retningslinjer for alt arbeid med IT i offentlig sektor:  TjenesteorienteringInteroperabilitetTilgjengelighetSikkerhetÅpenhetFleksibilitetSkalerbarhet  Se også Beskrivelse av prinsippene og hvordan de skal forstås [PDF]  Etter dette har DigDir kommet med nye, mer overordnede arkitekturprinsipper.  ","version":"Next","tagName":"h2"},{"title":"UiO:IntArk - 2010-2019​","type":1,"pageTitle":"Bakgrunnen for Fellestjenesten for Datadeling","url":"/docs/datadeling/om/bakgrunn/#uio---2010-2019","content":" Universitetet i Oslo fikk i 2010 utarbeidet en ny strategi, og så på nødvendige endringer for å nå denne strategien. En av punktene som ble kartlagt var behovet for en ny arkitektur og integrasjonsrammeverk.  Strategien så fordelene med en heterogen og distribuert organisering, der beslutninger tas mest mulig lokalt. Arkitekturen måtte støtte opp rundt dette, og demme opp for ulempene med denne organiseringen. IT-siden så fort behovet for at det måtte være enklere å dele data på en desentralisert måte.  Flere arbeidsgrupper og prosjekter ble startet, og en ny integrasjonsarkitektur ble mer og mer konkretisert og spisset. Denne arkitekturen fikk etterhvert navnet &quot;UiO:IntArk&quot;.  Integrasjonsarkitekturen inneholdt mange elementer, fra organisatoriske funksjoner til tekniske verktøy, og fra overordnede prinsipper til mer konkrete retningslinjer. Noen av elementene:  Generelle prinsipper som alle parter på UiO måtte forholde seg til. Disse reglene var overordnede og mest mulig uavhengig av dagens teknologi, og var eid av en strategisk koordineringsgruppe som involverte personer fra alle fakultetene. Noen av prinsippene var brukerorientert, tjenesteorientert, og lokal fleksibilitet (etter kost-nytte-vurdering). En definert prosess for eskalering av prioriteringer og beslutninger rundt datadeling. Prosessen gikk fra systemeier, til et sentralt prioriteringsråd, til en sentral strategisk koordineringsgruppe. Sentralt i prioriteringene var en kost-nytte-vurdering, med fokus på gevinstene for universitetet som helhet. Tekniske verktøy for å hjelpe UiO med å oppfylle gevinstene med integrasjonsarkitekturen - Gravitee og RabbitMQ. Produktene ble valgt fordi de løste behovene i arkitekturen best mulig - spesielt prinsippet om å unngå lock in var vesentlig. Det var også noen av få produkter på markedet som støttet en desentralisert organisering av API og konsumenter. Hva som fantes i bransjen av løsninger satte også begrensninger i hva som var mulig å innføre i integrasjonsarkitekturen - det fantes for eksempel ikke gode løsninger for en desentralisert håndtering av gateways, eller utbredte protokoller som unngikk at all dataflyt må gå gjennom en gateway.  IntArk på UiO fokuserte på hvor forbedringspotensialet var størst og mest konkretisert, som var system-til-system-integrasjoner for administrativ IT.  ","version":"Next","tagName":"h2"},{"title":"Uninett sin Dataporten​","type":1,"pageTitle":"Bakgrunnen for Fellestjenesten for Datadeling","url":"/docs/datadeling/om/bakgrunn/#uninett-sin-dataporten","content":" Uninett utviklet en ny tjeneste, kalt Dataporten, for å støtte nye tekniske muligheter som kom med OpenID Connect (OIDC). Dette ga mulighet for å en mye enklere og mer standardisert datadeling. Dataporten ble etterhvert en integrert del av Feide.  Det var noe overlapp av funksjonalitet mellom IntArk og Dataporten, men med ulikt fokus. Dataporten fokuserte på det mer tekniske og praktiske rundt OIDC, spesielt på integrasjoner mellom tjeneste og sluttbruker. UiO:IntArk fokuserte mest på de interne behovene til institusjonen, og system-til-system-integrasjoner.  ","version":"Next","tagName":"h2"},{"title":"Prosjekt Unit Datadeling - 2020-2022​","type":1,"pageTitle":"Bakgrunnen for Fellestjenesten for Datadeling","url":"/docs/datadeling/om/bakgrunn/#prosjekt-unit-datadeling---2020-2022","content":" Prosjekt Unit Datadelingble startet i 2020, med Unit som prosjekteier. Her ble IntArk, HKdirs og Uninetts erfaringer tatt med i opprettelsen av en ny fellestjeneste for Datadeling.  Fellestjenesten var en videreføring av noen elementer fra UiO sin integrasjonsarkitektur, men med nye, mer overordnede elementer fra HKdir. Et resultat fra prosjektet var referansearkitekturen for deling av data i høyere utdanning og forskning.  I 2021 ble fellestjenesten for datadeling besluttet innført for sektoren. Den tekniske plattformen ble rullet ut til alle institusjoner i sektoren i 2022.  Prosjektet hadde også anbefalinger for en neste generasjon av en teknisk plattform, som blant annet så på en mer sentralisert styring av data fra større leverandører, men også en mer desentralisert håndtering av API gateways. ","version":"Next","tagName":"h2"},{"title":"Komponentene i fellestjenesten for datadeling","type":0,"sectionRef":"#","url":"/docs/datadeling/om/komponenter/","content":"","keywords":"","version":"Next"},{"title":"Sentral oversikt over data - API-katalog​","type":1,"pageTitle":"Komponentene i fellestjenesten for datadeling","url":"/docs/datadeling/om/komponenter/#sentral-oversikt-over-data---api-katalog","content":" Institusjonen trenger oversikt over sine API og data, og trenger derfor en API-katalog. Denne skal både hjelpe institusjonen å ha kontroll og oversikt over sine data, men skal også hjelpe konsumenter med å finne frem til data.  En API-katalog må blant annet støtte:  Datatilbyder kan registrere sitt API i en sentral katalogDatatilbyder kan beskrive sitt API og sine data i en sentral katalogAt konsumenter kan selv lete etter relevante API  Å sentralisere forvaltningen av API-er gir noen fordeler:  Ett sted å forvalte bestilling av flere tilganger i flere API-er kun ett stedforvaltning av tilganger i flere kilder kun ett sted Sentral oversikt over dataflyt bedre sikkerhetoversikt over hele virksomheten Ett punkt for integrasjon konsumenter må ikke lete etter ulike API-erkonsumenter kan integrere en gang, ulike kilder gir tilgang  ","version":"Next","tagName":"h2"},{"title":"Sentral kontroll på datadeling - API manager​","type":1,"pageTitle":"Komponentene i fellestjenesten for datadeling","url":"/docs/datadeling/om/komponenter/#sentral-kontroll-på-datadeling---api-manager","content":" Institusjonen må ha kontroll på hvem som har tilgang til hvilke data. Dette gjelder spesielt data med personopplysninger. For å oppfylle dette kravet, har vi behov for en tjeneste der du kan forvalte hvem som har tilganger til dine data. Konsumenter vil også kunne forvalte sine tilganger her.  API manager må støtte:  Sentral oversikt over hvem som har tilgang til hvilke API og dataKonsument kan selv søke om tilgang til data fra et APIDatatilbyder kan godkjenne/avslå søknad om tilgang til sine dataDatatilbyder har oversikt over hvem som har tilgang til sine dataDatatilbyder kan trekke tilbake tilgang til sine dataDatatilbyder kan styre hvilke deler av sitt API konsumenter får tilgang til  ","version":"Next","tagName":"h2"},{"title":"Kontroll over data - API gateway​","type":1,"pageTitle":"Komponentene i fellestjenesten for datadeling","url":"/docs/datadeling/om/komponenter/#kontroll-over-data---api-gateway","content":" Tjenester som tilbyr data må være sikre på at bare autoriserte konsumenter får tilgang til dataene. Dette kan oppfylles av en API gateway, som står mellom datatilbyders API og konsumenten, og som utfører autentisering og tilgangskontroll. Du kan se på en API gateway som en smart proxy.  API gateway må støtte:  Konsumenter må autentiseres. Konsumenters forespørsler må tilgangskontrolleres opp mot hva de er blitt autorisert for i API manager. Datatilbyder må få oversikt over hvem som har hentet ut hvilke data.  ","version":"Next","tagName":"h2"},{"title":"Meldingskø​","type":1,"pageTitle":"Komponentene i fellestjenesten for datadeling","url":"/docs/datadeling/om/komponenter/#meldingskø","content":" Sluttbrukerne har en forventning om at tjenester er oppdaterte med relevante data, og at en ikke trenger å for eksempel &quot;vente til neste morgen&quot; før endringer er trådd i kraft. Dette gir behov for en mer effektiv overføring av kildedata til konsumenter - fellestjenesten anbefaler integrasjonsmønsteret &quot;hendelsesbasert provisjonering&quot; for å dekke dette behovet. Dette krever bruk av en meldingskø.  Produsenten skal ikke trenger å forholde seg til hvilke konsumenter som abonnerer på meldingene. Dette tar meldingskøen seg av.  For å gjøre hendelsesbasert provisjonering enklere, må IntArk tilby en sentralisert meldingskø som datatilbydere kan publisere til, og konsumenter abonnere på meldinger fra.  Meldingskøen må oppfyller behovene:  Datatilbydere kan registere sin tjeneste som produsent av notifikasjoner.Datatilbydere kan sende notifikasjoner - tynne meldinger - til meldingskøen.Konsumenter kan abonnere og lytte på meldinger fra de produsentene de ønsker.Konsumenter må selv kunne lete etter relevante tjenester med meldingerKonsumenter må selv kunne søke om tilgang til meldinger fra en tjenesteDatatilbydere må kunne godkjenne/avslå søknad om tilgang til sine meldinger fra konsumenter.  Meldingskøen er primært ment for integrasjoner som følger fellestjenestens anbefalte integrasjonsmønstre. Fellestjenesten legger ikke føringer på hva institusjonen gjør med eventuelt andre meldingskøer. Institusjonene kan likevel også bruke fellestjenestens meldingskøer for andre formål. ","version":"Next","tagName":"h2"},{"title":"Konsekvenser med fellestjenesten for Datadeling","type":0,"sectionRef":"#","url":"/docs/datadeling/om/konsekvenser","content":"","keywords":"","version":"Next"},{"title":"Økonomiske konsekvenser​","type":1,"pageTitle":"Konsekvenser med fellestjenesten for Datadeling","url":"/docs/datadeling/om/konsekvenser#økonomiske-konsekvenser","content":" Fellestjenesten inneholder føringer som setter andre krav til IT-tjenestene. Dette vil kunne føre til kostnader både ved tilpasning av eksisterende systemer, og nye systemer får krav til mer funksjonalitet.  Kostnadene vil være større i innføringsfasen, men vil på sikt føre til at integrasjoner blir enklere, og dermed billigere, å implementere. Det bør påregnes noe kostnad til opplæring ved innføring.  Fellestjenesten krever ikke at alle systemer må følge arkitekturen fullt ut fra starten av - kost/nytte-prinsippet er viktig. Noen systemer vil kanskje aldri bli oppgradert for å følge ny arkitektur.  Det vil også være en fordeling av kostnaden ved drift og forvaltning av Datadelingsplattformen.  Vi forventer mer digitalisering av kunnskapssektoren, og et behov for mye mer datadeling. Den totale kostnaden rundt datadeling vil derfor gå opp, men med fellestjenesten blir utgiftene brukt mer effektivt.  ","version":"Next","tagName":"h2"},{"title":"Organisatoriske konsekvenser​","type":1,"pageTitle":"Konsekvenser med fellestjenesten for Datadeling","url":"/docs/datadeling/om/konsekvenser#organisatoriske-konsekvenser","content":" IntArk inneholder noen prosesser og roller som hver institusjon må ta til seg. Det er spesielt rollene rundt informasjonsforvaltningen som vil kunne føre til endringer hos institusjonen. Institusjonene bestemmer selv hvordan de innfører IntArk i sin organisasjon, men det er enklare å få ut gevinstene fra IntArk ved å innføre det slik det er anbefalt.  Opplæring vil også kunne være nødvendig.  ","version":"Next","tagName":"h2"},{"title":"Konsekvenser for tjenester​","type":1,"pageTitle":"Konsekvenser med fellestjenesten for Datadeling","url":"/docs/datadeling/om/konsekvenser#konsekvenser-for-tjenester","content":" Hvis en tjeneste inneholder data som er brukbare for andre, blir den som er ansvarlige for tjenesten eller dataene i tjenestene også ansvarlig for at dataene gjøres tilgjengelige.  Dette vil kunne ha økonomiske konsekvenser, og påvirker prioriteringene for videreutvikling av tjenesten.  ","version":"Next","tagName":"h2"},{"title":"Konsekvenser for utvikling​","type":1,"pageTitle":"Konsekvenser med fellestjenesten for Datadeling","url":"/docs/datadeling/om/konsekvenser#konsekvenser-for-utvikling","content":" Utviklere av tjenester må følge IntArks føringer. Hvis du utvikler en tjeneste med data som er brukbare for andre, er føringen at du må:  Implementere et API for å tilgjengeliggjøre de data som systemet er kildesystem for, og publisere dette i API manager. API-et bør følge bransjestandarder der det finnes, eventuelt designes generelt og så uavhengig av systemtekniske detaljer som mulig. Implementere utsending av notifikasjoner ved endringer i data i systemet, og sende disse til en meldingskø. Dette er viktigst for data som det forventes at er oppdaterte.  Kildesystemet er ikke ansvarlig for hvordan konsumenter tar i bruk API-et, og skal i utgangspunktet ikke lage konsumentspesifikke integrasjoner. Dette er konsumentens ansvar.  Hvis du utvikler en tjeneste som konsumerer data fra andre kildesystem:  Den konsumerende tjenesten må selv integrere mot API-et, og eventuelt meldingskøen. Den konsumerende tjenesten må selv ta seg av forretningslogikk som er spesifikk i egen tjeneste. Dette er ikke kildeystemets ansvar. For &quot;brukernære tjenester&quot; kan kildesystemet ta seg av forretningslogikk tilknyttet prosessen, men ikke tilpasset din tjeneste.  ","version":"Next","tagName":"h2"},{"title":"Konsekvenser for anskaffelser/innkjøp​","type":1,"pageTitle":"Konsekvenser med fellestjenesten for Datadeling","url":"/docs/datadeling/om/konsekvenser#konsekvenser-for-anskaffelserinnkjøp","content":" Du som anskaffer tjenester må være klar over føringene for å bruke fellestjenesten best mulig. I hovedsak:  Sikre at IT-tjenester som kjøpes inn kan dele sine data. Det må være enkelt å få tilgang til kildedataene, spesielt uten at du er låst til en leverandør. Vi ønsker spesielt å unngå &quot;lock in&quot;-situasjoner der en innkjøpt tjeneste blir kostbar å bytte ut eller endre på senere. Føringene fra fellestjenesten bør beskrives i anskaffelser. Føringene fra fellestjenesten bør vektlegges i valget av løsning.  Til hjelp i vurderingene er det laget enanskaffelsesveiledning. ","version":"Next","tagName":"h2"},{"title":"Integrasjonsprinsippene for IntArk","type":0,"sectionRef":"#","url":"/docs/datadeling/prinsippene","content":"","keywords":"","version":"Next"},{"title":"Brukerorientert arkitektur​","type":1,"pageTitle":"Integrasjonsprinsippene for IntArk","url":"/docs/datadeling/prinsippene#brukerorientert-arkitektur","content":" Arkitekturen er formgivende for tjeneste- og systemlandskapet, som igjen skal gjenspeile hva brukerne trenger. Stadige endringer er normaltilstanden. Derfor må arkitekturen være fleksibel, slik at den kontinuerlig kan tilpasses brukermassens skiftende behov.  Se også Digitaliseringsdirektoratets arkitekturprinsipp 1: Ta utgangspunkt i brukernes behov og arkitekturprinsipp og 5.3: Sørg for arkitektur som gir systemer og tjenester evne til endring og vedlikehold over tid.  ","version":"Next","tagName":"h2"},{"title":"Tjenesteorientert arkitektur​","type":1,"pageTitle":"Integrasjonsprinsippene for IntArk","url":"/docs/datadeling/prinsippene#tjenesteorientert-arkitektur","content":" Integrasjonsgrensesnitt skal utformes slik at tjenester og bakenforliggende systemer kan flyttes og byttes ut uten at konsumenter av tjenesten må gjøre endringer i sin ende, og omvendt. Dette prinsippet legger føringer på hvilken programvare vi kan anskaffe, hvilke grensesnitt som tilbys av egenutviklede applikasjoner, og hvordan vi kobler sammen egenutviklede applikasjoner.  Se også Digitaliseringsdirektoratets arkitekturprinsipp 5.7: Ta hensyn til anerkjente designprinsipper for tjenesteorientert arkitektur, slik som løse koplinger, modularisering, standardiserte tjenestekontrakter med videre.  ","version":"Next","tagName":"h2"},{"title":"Tilgjengelige data​","type":1,"pageTitle":"Integrasjonsprinsippene for IntArk","url":"/docs/datadeling/prinsippene#tilgjengelige-data","content":" Data skal være tilgjengelig for konsumenter. Tilgjengelighet manifesterer seg på flere plan:  Teknisk.Forståelsesmessig.Oppdagbare.  For at kravet om teknisk tilgjengelighet skal være oppfylt, må data tilbys gjennom åpne og robuste grensesnitt. For at data skal være tilgjengelige forståelsesmessig, må de være dokumentert. Oppdagbarhet forutsetter at definisjoner av grensesnitt og tilhørende teknisk og semantisk dokumentasjon er publisert.  Se gjerne:  Digitaliseringsdirektoratets veileder for orden i eget hus.Digitaliseringsdirektoratets arkitekturprinsipp 4: Del og gjenbruk data, spesielt: Prinsipp 4.2: Tilby data i tråd med regjeringens «Retningslinjer ved tilgjengeliggjøring av offentlige data».Prinsipp 4.3: Gjenbruk data fra autoritative kilder. Bruk kopier kun der det er nødvendig, og sørg for at disse er oppdaterte.Prinsipp 4.5: Unngå innlåsing av data i systemer. FAIR prinsippene  ","version":"Next","tagName":"h2"},{"title":"Gjenbruk av løsninger​","type":1,"pageTitle":"Integrasjonsprinsippene for IntArk","url":"/docs/datadeling/prinsippene#gjenbruk-av-løsninger","content":" Gjenbruk av løsninger forutsetter at det samarbeides i fagmiljøer på tvers av institusjoner om å homogenisere forretningsprosesser.  Se gjerne Digitaliseringsdirektoratets arkitekturprinsipp 5: Del og gjenbruk løsninger, spesielt:  Prinsipp 5.1: Kartlegg eksisterende og planlagte løsninger som kan være aktuelle å gjenbruke.Prinsipp 5.8: Tilgjengeliggjør informasjon om, og tilby gjenbruk av egne løsninger som kan være interessante for andre.  ","version":"Next","tagName":"h2"},{"title":"Etterrettelig bruk av data​","type":1,"pageTitle":"Integrasjonsprinsippene for IntArk","url":"/docs/datadeling/prinsippene#etterrettelig-bruk-av-data","content":" Konsum av API-er skal skje gjennom API Manager. Dette medfører at institusjonen har oversikt over hvem som konsumerer hvilke data.  Se også Digitaliseringsdirektoratets arkitekturprinsipp 7.3: Virksomhetene må ha styring og kontroll som sørger for at informasjonssikkerhet og personvern er ivaretatt i tjenestene.  ","version":"Next","tagName":"h2"},{"title":"Avvik må begrunnes​","type":1,"pageTitle":"Integrasjonsprinsippene for IntArk","url":"/docs/datadeling/prinsippene#avvik-må-begrunnes","content":" Avvik fra prinsippene om Tjenesteorientert arkitektur og Tilgjengelige data er lov, så lenge det kan begrunnes at avviket er hensiktsmessig for sektoren.  Et eksempel er at det kan være hensiktsmessig å bruke en leverandørspesifikk integrasjon, hvis kostnadene ved å innføre en løsere kobling blir høyere enn konsekvensene og risikoen for institusjonen ved å låse seg til en leverandør. ","version":"Next","tagName":"h2"},{"title":"Styringsmodellen til UiO:IntArk","type":0,"sectionRef":"#","url":"/docs/datadeling/om/styringsmodellen/","content":"","keywords":"","version":"Next"},{"title":"Formålet med styringsmodellen​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"/docs/datadeling/om/styringsmodellen/#formålet-med-styringsmodellen","content":" Arkitekturen skal gjøre integrasjonsarbeidet ryddigere og enklere å forholde seg til, med tydelige ansvarslinjer, samtidig som at rammeverket skal være fleksibelt å bruke.  Det er viktig å se forholdet mellom IT-løsning og organisasjon, og IT-løsning og menneskene som skal benytte løsningen.  Rammeverket skal gi produsenter og konsumenter autonomitet og selvstyre, men sette føringer der det er hensiktsmessig for institusjonen som helhet. Du kan sammenligne det med trafikkreglene: Du er for eksempel pålagt å kjøre på riktig side av veien, slik at alle kan komme seg trygt og effektivt til sitt mål, men ellers står du fritt til å kjøre hvor du vil og velge den bilen som passer deg.  Et av UiO:IntArks prinsipper er kost/nytte. Kost/nytte skal vurderes for hele virksomhetens systemlandskap under ett med et langsiktig perspektiv. Integrasjonsarbeidet ved UiO skal med andre ord gi en helhetlig verdi for virksomheten, der prioriteringsrådets oppgave er å og anbefale rekkefølge og bemidling der det er interesse- eller ressurskonflikter. Dette er tatt med i styringsmodellen.  ","version":"Next","tagName":"h2"},{"title":"Styringsmodellen​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"/docs/datadeling/om/styringsmodellen/#styringsmodellen","content":" Modellen er en kombinasjon av:  Internettmodellen, der alle bestemmer for seg selv i et nettverk. Alt ansvar plasseres lokalt, og du snakker med den du selv vil i nettverket. Nærhetsmodellen, som er en desentral modell som plasserer ansvar og myndighet både sentralt og lokalt nivå i en organisasjon. Modellen brukes for beslutningslinjene på Universitetet i Oslo.  En illustrasjon av modellen:    Hver aktør er autonom, og bestemmer selv hvem de skal kommunisere med. Kommunikasjonen går direkte, og ikke via tredjepart eller en sentral aktør. Der det er hensiktsmessig for organisasjonen som helhet, dvs. der det er stordriftsfordeler, lages det sentraliserte fellesløsninger. Sentraliserte løsninger er i utgangspunktet valgfrie for alle aktørene å bruke.  ","version":"Next","tagName":"h2"},{"title":"Bakgrunn for styringsmodellen​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"/docs/datadeling/om/styringsmodellen/#bakgrunn-for-styringsmodellen","content":" Modellen for UiO:IntArk ble laget for å fungere i heterogene organisasjoner, der beslutninger tas mest mulig lokalt (distribuert). Mange universiteter og høgskoler er organisert på denne måten, for eksempel i hva fakultetene selv bestemmer. Modellen bestemmer både hvordan beslutninger og ansvar plasseres, og hvordan tekniske komponenter spiller sammen. Modellen prøver også si noe om samspillet mellom IT og virksomhet. Alt dette må fungere sammen.  I utarbeidingen av UiO:IntArk var et viktig poeng at det er mennesker som skal bruke arkitekturen. Det ble gjennomført workshops med systemeiere og utviklere der de viktigste og mest samstemte tilbakemeldingene fra samlingene var at forutsigbarhet, handlingsrom og autonomi var sterkt ønsket. De ville også ha ett kontaktpunkt man kunne henvende seg til for å få veiledning og hjelp. Menneskets produktivitet motiveres av autonomi, følelsen av tilhørighet og at man har rett kompetanse.1  Organisatorisk springer arbeidet med integrasjonsarkitektur ut av, og er forankret i, Universitetsstyrets vedtak om “Organisering og standardisering av universitetets IT-virksomhet”:  “Universitetsdirektøren skal i samarbeid med ledelsen ved fakulteter og institutter utarbeide forslag til arkitektur og integrasjonsrammeverk.”  ","version":"Next","tagName":"h2"},{"title":"Horisontal og vertikal koordinering​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"/docs/datadeling/om/styringsmodellen/#horisontal-og-vertikal-koordinering","content":" For å ivareta helheten i tjenestelandskapet, samtidig med å tilby systemeiere et handlingsrom, ble det laget prinsipper og anbefalinger. Ved å følge anbefalingene kan to fakultet lage hver sine IT-løsninger uten å snakke sammen, men løsningene deres kan fortsatt utveksle informasjon. De er interoperatible. Vi kaller dette horisontal koordinering. Dette i kontrast til vertikal koordinering, som omhandler eskalering og beslutningskjeder.  For UiO:IntArk ble det besluttet at eskalering og beslutningskjeden er:  Systemeier -&gt; Prioriteringsråd -&gt; Strategisk koordineringsråd  Beslutningskjeden ble først innført for administrative IT-tjenester, og ikke IT i forskning og IT i utdannning.  Prioriteringsrådets oppgave er å ta forretningsbeslutninger rundt integrasjon. Det har en proaktiv rolle med tanke på hva som kommer av oppdrag samt organisasjonens endringskapasitet og gjennomføringsevne. Hvordan UiO gjør IT, ligger ennå til IT-Direktør iht. Universitetsdirektørens delegering. Systemeier løfter typisk en sak til prioriteringsråd hvis det reises uenighet. Hvis saken er utenfor mandat, eller det ikke oppnås en enighet, kan saken løftes til Strategisk koordineringsråd, som inneholder deltagere fra fakultetene og sentrale interessenter.  Noen scenarier for beslutningskjeden:  Scenario 1: Flere har behov for de samme ressursene. Behov må prioriteres opp mot hverandre og planlegges for å få komplekse integrasjoner på plass, eller det må vurderes å kjøpe ekstern arbeidskraft. Prioriteringsrådet kan anbefale prioritering av ressurs-søknader til SKAIT. Scenario 2: System-/dataeiere ønsker å integrere, men har ikke mulighet til å finansiere (hele) integrasjonen over egne budsjetter. Det må fremskaffes midler og behovet må vurderes i lys av andre integrasjonsbehov. Scenario 3: En systemeiere har tilbyr ikke sine data i tråd med integrasjonsarkitekturen, og uenighet med andre systemeiere medfører en eskalering.  ","version":"Next","tagName":"h2"},{"title":"Nærhetsmodellen​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"/docs/datadeling/om/styringsmodellen/#nærhetsmodellen","content":" Det viktigste beslutningen og leveransen som kom ut av “Organisering og standardisering av universitetets IT-virksomhet” varNærhetsmodellen. Nærhetsmodellen var den sterkeste føringen for å tilpasse arkitekturen til organisasjonen.  Nærhetsmodellen slår fast at:  &quot;Organiseringen av de administrative tjenester skal følge en desentral modell som innebærer økt ansvar og myndighet på lokalt nivå.&quot;  I UiO:IntArk bruker vi ordet &quot;distribuert&quot; i stedet for &quot;desentral&quot;. I all hovedsak betyr det det samme, med unntak av at en distribuert løsning består av komponenter som utveksler informasjon. En desentral løsning har ikke dette kravet.  Illustrasjon for en distribuert løsning, som viser at alle aktører snakker direkte med hverandre:    Aktørene utgjør et nettverk av autonome enheter.  ","version":"Next","tagName":"h2"},{"title":"Internettmodellen – ansvarliggjøring av systemeier​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"/docs/datadeling/om/styringsmodellen/#internettmodellen--ansvarliggjøring-av-systemeier","content":" Å ansvarliggjøre systemeier er også en føring integrasjonsarkitekturen har arvet fra føringer på høyere nivå, fra Organisering og styring av IT:  Når det gjelder administrativ IT er det bestemt at denne skal fullfinansieres over systemeiernes budsjetter. Sammen med veikartene vil dette gi langt bedre oversikt over kostnadene knyttet til denne virksomheten og gi tilsvarende bedre grunnlag for styring og prioritering.  Modellen med autonome aktører kalles ofte &quot;Internettmodellen&quot;, da det er slik internettet er bygget: Alle holder kontroll på seg selv. Det er ingen kontrollmekanismer (sentralt) i nettverket som godkjenner hvem som snakker med hvem.  De vanlige fordelene med modellen:  den er innovasjonsdrivendedet er kort vei til beslutningsmyndighet, beslutninger tas lokaltansvaret er tydeligeventuelle flaskehalser lager bare forsinkelser for de involverte, ikke for nettverket som sådan  De vanlige ulempene:  den er uoversiktlig, vanskelig å finne fremdet er ingen kontrollmekanismer i nettverket, svak etterrettelighetden fordrer redundant kompetansedet kan kreve høy kompetanse å sette sammen data fra flere kilder  &quot;Internettmodellen&quot; ligger til grunn for UiOs integrasjonsarkitektur. I virkeligheten fungerer internettet på grunn av ekstrem standardisering, for eksempel rundt internettadresser, protokoller (som http) og språk (som html). På samme måte har integrasjonsarkitekturen standardisert på bransjestandard mekanismer og format. Dette gjør at man ikke lenger er avhengig av IT-spesialister fra en spesifikk leverandør for å integrere. Man kan gjøre det selv, eller kjøpe hjelp fra en valgfri tredjepart - dette styrer hver enkelt systemeier selv.  Internettet byr også på sentraliserte komponenter, enten de er per design (som DNS/SSL) eller de facto (som søketjenesten Google). Dette gir brukervennlighet, oversikt og sikkerhet. UiOs integrasjonsarkitektur har derfor også sentraliserte tjenester som tilbyr nettopp dette. Vi har standardisert rundt noen felles komponenter for at informasjonsutveksling skal skje brukervennlig, effektivt og for å bedre kontroll og etterrettelighet, herunder oppfylle lovgivning og forskrifter. API-katalogen er et eksempel på en komponent som skal gjøre det enklere for både produsenter og konsumenter.  ","version":"Next","tagName":"h2"},{"title":"Telefonsentralmodellen​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"/docs/datadeling/om/styringsmodellen/#telefonsentralmodellen","content":" Den diamentrale arketypen til Internettmodellen kalles gjerneTelefonsentralmodellen. I denne modellen går all trafikk gjennom en sentral før den når mottager, slik illustrasjonen viser:    I UiO:IntArk går vi bort fra denne modellen, både fordi den ikke passer med UiOs desentraliserte styringsmodell, og fordi sentralen blir en flaskehals for endringsdyktighet.  Tidligere måtte man kontakte en gruppe spesialister og data ble fraktet gjennom store komponenter som FS, SAP, OA og IGA (Cerebrum). Kompleksiteten i disse sentralene gjorde det vanskelig og dyrt å hente hjelp fra tredjepart. Gruppene sto ofte selv for å prioritere oppdrag og diktere løsninger. Dette var en modell som passet bedre da IT kun var for de innvidde og ikke skjedde overalt i organisasjonen.  Modellen har også gode sider. Sentralen tilbyr funksjonalitet som hjelper aktørene i nettverket. For eksempel kan den, ut fra hvilken informasjon som sendes, vite hvilken aktør som skal ha pakken, eller den kan sette sammen data fra forskjellige aktører før den sender den samlede informasjonen til mottager på det foretrukne formatet.  Modellens kjerneegenskaper er:  innovasjon skjer i sentralen, innovasjonshemmende på enkeltaktørerkompleksitet flyttes fra aktør til sentral, krever mindre redundant spesialkompetansefordrer mer ressurser sentralt i nettverketgir kontroll og etterrettelighetkan ved ressursmangel fungere som en flaskehals for hele nettverketeffektive beslutninger fordrer tydelig mandat og delegasjon  Nærhetsmodellen tilsier at denne modellen skal benyttes under gitte omstendigheter:  &quot;Ved stordriftsfordeler, eller der oppgavene krever særlig kompetanse, skal det velges sentraliserte løsninger.&quot;  Det burde kanskje vært tilføyd: Når behovene er statiske og endres sjelden.  ","version":"Next","tagName":"h2"},{"title":"Gode kombinasjonsmodeller​","type":1,"pageTitle":"Styringsmodellen til UiO:IntArk","url":"/docs/datadeling/om/styringsmodellen/#gode-kombinasjonsmodeller","content":" Til tross for modellene er diamentralt motsatte, kan de to metodene med hell benyttes i kombinasjon: De er to forskjellige verktøy, som kniv og gaffel. Teknisk og administrativt kan altså UiOs integrasjonsarkitektur illustreres slik:    Illustrasjonen viser at aktørene er autonome, men at der det er stordriftsfordeler (som mye brukte data) eller kreves spesialkompetanse (som kompliserte uttrekk satt sammen fra flere datakilder) kan man lage sentraliserte løsninger.  Tegningen viser arkitekturen suppleres med støttetjenester. Eksempler på støttetjenestene:  Felles tjenesteregister, som viser hvilke data som tilbys og hvor de er å finne. En API-katalog er et subsett av dette. Sikker Datadeling, for sikker datautveksling mellom IT-tjenester. Også kaltAPI gateway. Meldingskø-håndtering, hvilket er en tjeneste for umiddelbar datasynkronisering mellom tjenester som støtter og trenger det. Det vil si tjenester som benytter seg av å selv å lagre replikerte data om rom, brukere, grupper eller annet, såkalt provisjonering. Felles kontaktpunkt. Dette har primært til hensikt å måle resultatene av arkitekturen. Dette for å kunne lære og videreutvikle arkitekturen. For å kunne gjøre denne læringen, må kontaktpunktet vite hvem som har integrert hvordan, og erfaringen de har trukket av dette. Kontaktpunktet kan også ta seg av andre henvendelser, som fra de som ønsker støtte til å integrere eller til å lage et godt design Sentraliserte uttrekk og kontrollmekanismer. Et eksempel kan være at mange konsumenter trenger tilgang til data sammensatt fra flere kilder, som da kan tilbys i en sentralisert tjeneste. Eskalering- og beslutningskjeden som går fra systemeier, gjennom prioriteringsrådet, til strategisk koordineringsråd.  Footnotes​ A general theory of human motivation applicable to leadership. Deci and Ryan (1989) Self-Determination Theory (SDT). ↩ ","version":"Next","tagName":"h2"},{"title":"DFØ SAP","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/api/dfo-sap","content":"","keywords":"","version":"Next"},{"title":"Om API-ene​","type":1,"pageTitle":"DFØ SAP","url":"/docs/datadeling/teknisk-plattform/api/dfo-sap#om-api-ene","content":" DFØs løsninger for økonomi og lønn brukes av mange i sektoren. DFØ tilbyr API som er felles for sektoren, men der hver institusjon får ut sine data.  DFØ tilbyr flere ulike API-er for ulike data, som ansattinformasjon, stillingsdata og organisasjonsdata. Se DFØs API-portal for mer informasjon.  For å kunne bruke DFØs API må din institusjon bli &quot;oppgradert&quot; hos DFØ. Mange institusjoner må i dag forholde seg til CSV-filer fra DFØ. Dette må gjøres i dialog med DFØ, og dette vil kunne ta tid.  DFØ krever autentisering viaMaskinporten i sin kommunikasjon, så institusjonen må registrere seg der før integrasjonen kan påbegynnes. Maskinporten benytter Public Key Authentication for autentisering. Oppsettet innebærer at institusjonen genererer en hemmelig privat nøkkel til seg selv og en korresponderende offentlig nøkkel til Maskinporten. Den private nøkkelen brukes for å bekrefte identiteten til innehaveren, i dette tilfellet institusjonen. Den offentlige nøkkelen brukes av Maskinporten for å autentisere institusjonen og til å autorisere tilgang.  Som de fleste andre APIene settes APIet opp med autentisering mot vår API gateway, og deretter sendes requesten videre til backend-APIet. I API gatewayen legger vi på token og evt. API-nøkkel som brukes mot DFØs APIer. Tjenesten som utsteder token kan enten settes opp i Gravitee (se bruksanvisning her) eller hos den enkelte institusjon  ","version":"Next","tagName":"h2"},{"title":"Standardoppsett​","type":1,"pageTitle":"DFØ SAP","url":"/docs/datadeling/teknisk-plattform/api/dfo-sap#standardoppsett","content":" DFØ er en fellestjeneste, og må/bør derfor settes opp likt hos alle institusjoner. Du kan sette dette opp ved å laste inn fil med standardoppsett:  Lonnssystem-api-template.json  ","version":"Next","tagName":"h2"},{"title":"Hvordan sette opp API-ene​","type":1,"pageTitle":"DFØ SAP","url":"/docs/datadeling/teknisk-plattform/api/dfo-sap#hvordan-sette-opp-api-ene","content":" Registrer din institusjon hos Maskinporten, se planleggingsaktiviteten her. Registrer deretter en integrasjon i maskinporten, se veiledning her(https://docs.digdir.no/docs/Maskinporten/maskinporten_sjolvbetjening_web.html) Sluttresultatet er at du har en integrasjon hvor du kan autentisere vha. virksomhetssertifikat eller et sertifikat du har laget selv (og som bare brukes mot denne integrasjonen) Integrasjonen må ha blitt tildelt de nødvendige scopes og du må ha issuer-ID tilgjengelig Opprett tokentjeneste om du ikke har gjort det tidligere og gi APIet tilgang. Om du vil lage en i gravitee se veiledning her Gi deretter SAP-APIet tilgang ved å opprette en applikasjon for dette og søk om tilgang til maskinporten-APIet. Når tilgangen er gitt får du en API-nøkkel som vi bruker i neste steg Last ned standardoppsettet over, og opprett tjenesten i API manager. Se veileder for å registrere en tjeneste i API manager via fil. Gå inn i APIet og endre på Navn og beskrivelseGå til proxy -&gt; Entrypoint og evt. endre detteHvis prod: gå inn på proxy -&gt; backend services. Fjern &quot;-test&quot; fra URLen slik at det står https://api.dfo.noKlikk på Design og policy-en HTTP Callout. Endre URL til den til tokentjenesten. Endre headeren X-Gravitee-Api-Key til nøkkelen fra punkt 2 om du har satt opp maskinporten-API i API Manager. Under headeren iss legger du inn ISSUER-ID for maskinporten-integrasjonen. Om du kjører token-tjenesten selv, konfigurer sikker autentisering og evt. headere/parametre etter behov. Registrer DFØ SAP som tjeneste i Selvbetjeningsportalen for RabbitMQ (se veileder for å registrere tjenesten). Hent ut tilkoblingsdetaljene som det blir opplyst om. Om DFØ skal publisere meldinger direkte til deres RabbitMQ, send en forespørsel om etablering av notifikasjonsoverføring til it-support@dfo.no. Legg ved tilkoblingsdetaljene som du finner i selvbetjeningsportalen. Passordet bør sendes via en sikker tredje kanal (ikke via e-post). Om dere heller vil hente meldinger fra rabbitmq hos DFØ (eller en annen rabbitmq-installasjon) gjøres det vel å sette opp en shovel i rabbitMQ. Det finnes flere oppskrifter på hvordan man setter opp shovel. Her er oppskrift på en måte man kan sette det opp i rabbitMQ, mens man fremdeles gjør tilgangsstyring i BROM. Dette krever ekstra tilganger i rabbitMQ for å gjøre nødvendig oppsett. Registrer applikasjon i BROM. Velg at den skal publisere meldinger. Velg et godt navn og beskrivelse, dette er applikasjonen som utviklere abonnerer på om de vil ha meldinger fra deres SAP-installasjon (Valgfritt) For å lett kunne se om shovel-en fungerer kan du opprette en applikasjon som abonnerer på meldinger fra applikasjonen du opprettet i forrige punkt. Godkjenn denne. Når shovelen fungerer vil det komme meldinger inn i meldingskøen for denne applikasjonen. Merk: denne bør slettes i ettertid. Om IntArk-koordinator ikke har nødvendige rettigheter i rabbitMQ fra før, kontakt support som oppretter bruker med nødvendinge rettigheter. Sørg for å ha tilkoblingsinformasjon (brukernavn, passord, vhost, kø-navn, hostnavn) tilgjengelig Logg inn i rabbitMQ med bruker som har rettigheter til å opprette shovel. I BROM er det link til innloggingsiden her: Naviger til siden &quot;Admin&quot; og undemenyen &quot;Shovel Management&quot; Under Add shovel, fyll ut: Velg vhost med samme navn som applikasjonen i punkt 1 (ikke nødvendig, men gjør det lettere å holde oversikt senere)Gi et godt navnUnder source så er protocol nesten alltid AMQP 0.9.1, så det kan ståsource URI: adresse for å koble seg på DFØs rabbitmq riktig. Denne er litt komplisert. Den skal være amqps://BRUKERNAVN:PASSORD@mq.dfo.no/VHOST TIPS: lag denne i notepad eller annen tekstbehandler og bruk klipp og lim for å fylle inn i rabbitMQ. Feltet for dette i RabbitMQ er for kort til å se evt. feil source queue: navn på kødestination URI: her er det samme rabbimtmq som vi er logget inn på, så denne er lettere Fyll inn amqp:///VHOST (hvor vhost er navnet på applikasjonen fra punkt 1) OBS: merk at det er 3 skråstreker!Endre fra queue til exchangefyll inn navn på exchange. Det er outgoing_APPLIKASJONSNAVN (altså outgoing + underscore + navn på appliasjon. Du kan og se det under tilkoblingsdetaljer på publiseringsiden i brom)routing key: La denne være blank. (Da vil meldingene beholde routing key som de har i kilden. Om du setter en verdi her til denne verdien overskrive eksisterende routing key)Til sist trykk på &quot;add shovel&quot; Gå til siden &quot;Shovel status&quot; og se at shovlen du har laget endrer status til Started. Om den ikke endrer seg fra Starting til Started ila. et par minutter: sjekk tilkoblingsdetaljene, slett shovelen og opprett på nytt  API-et og meldingshåndtering er nå satt opp.  ","version":"Next","tagName":"h2"},{"title":"Hvordan verifisere at API-et fungerer:​","type":1,"pageTitle":"DFØ SAP","url":"/docs/datadeling/teknisk-plattform/api/dfo-sap#hvordan-verifisere-at-api-et-fungerer","content":" Opprett din egen klient (applikasjon) i API manager, om du ikke har dette allerede. Be om tilgang til API-et. Godkjenn tilgangen til API-et. Du har nå fått en egen API-nøkkel for din klient. Bruk klientens API-nøkkel, og sjekk at du får hentet ut data: Med curl (husk å endre det som står i uthevet tekst): curl --include -H &quot;X-Gravitee-Api-Key: **API-nøkkel**&quot; https://gw-**INSTANS**.intark.uh-it.no/**lonn**/v1/organisasjoner/v1/ Med Powershell (husk å endre det som står i uthevet tekst): $headers = @{ 'Accept' = 'application/json' 'X-Gravitee-Api-Key' = **API-nøkkel** } Invoke-WebRequest -Headers $headers -Uri &quot;https://gw-**INSTANS**.intark.uh-it.no/**lonn**/v1/organisasjoner/v1&quot; Hvis alt er ok kan du forvente å få tilbake noe som starter med &quot;HTTP 200&quot; og JSON-data. ","version":"Next","tagName":"h3"},{"title":"Styringsreglene til IntArk","type":0,"sectionRef":"#","url":"/docs/datadeling/styringsregler","content":"","keywords":"","version":"Next"},{"title":"Om styringsreglene​","type":1,"pageTitle":"Styringsreglene til IntArk","url":"/docs/datadeling/styringsregler#om-styringsreglene","content":" Formålet med styringsreglene for IntArk er å oppsummere de viktigste implikasjonene og kravene fra formålet til IntArk,integrasjonsprinsippene ogreferansearkitekturen for datadeling. Styringsreglene er altså minimumskravene institusjoner som bruker IntArk må oppfylle for å etterleve IntArk. Det forventes likevel at institusjoner som bruker IntArk setter seg inn i alle relevante dokumenter på dette området.  Gevinstene med styringsreglene er mer kostnadseffektiv og endringsdyktig datadeling hos hver institusjon, og sektoren som helhet, ved at alle aktører følger de samme kjørereglene for datadeling.  Styringsreglene forvaltes av Sikt i henhold til sektorens tjenestestyringsmodell, med involvering av institusjonene i sektoren. Det må forventes at styringsreglene endres over tid basert på erfaringer fra bruk av IntArk, utviklingen i teknologiplattformen for fellestjenesten, endringer i nasjonale føringer for datadeling, utviklingen i beste praksis for integrasjoner, endringer i markedet, osv.  Styringsreglene gjelder for datadeling mellom tjenester lokalt hos institusjonene, mellom institusjoner i sektoren, og med andre aktører utenfor sektoren. Styringsreglene er ikke gjeldende for hva du gjør internt i en IT-tjeneste.  ","version":"Next","tagName":"h2"},{"title":"Styringsregler for​","type":1,"pageTitle":"Styringsreglene til IntArk","url":"/docs/datadeling/styringsregler#styringsregler-for","content":" ","version":"Next","tagName":"h2"},{"title":"1 Tilgjengeliggjøring av data​","type":1,"pageTitle":"Styringsreglene til IntArk","url":"/docs/datadeling/styringsregler#1-tilgjengeliggjøring-av-data","content":" Data skal være lett å finne og ta i bruk, for å enkelt kunne gjenbrukes. Sektoren har en teknisk datadelingsplattform som hjelper deg med dette, men du må også overholde styringsreglene nedenfor for en enklere datadeling for alle. Dette gjelder primært for datatilbydere.  Nr\tStyringsregel\tBegrunnelse1.1 Kildedata skal tilgjengeliggjøres gjennom et API, hvis datakonsumenter har behov og hjemmel for dem. Skal vi bli bedre på digitalisering må data være lett tilgjengelig, både for interne og eksterne datakonsumenter. 1.2 Kildedata skal tilgjengeliggjøres gjennom API som følger prinsippene for løse koblinger, og være konsument-uavhengig. Verden endrer seg, og det må være enkelt å kunne bytte ut enkelttjenester og -systemer fortløpende. Løse koblinger reduserer lock-in til spesifikke leverandører eller tjenester. Dette følger DigDirs prinsipp 5 Opplysningene som de er 1.3 API skal publiseres i institusjonens API-katalog. En samlet oversikt gjør det enklere for datakonsumenter å finne frem til institusjonens data, og for institusjonen gir det bedre oversikt over hvilke data som deles med hvem. 1.4 API og notifikasjoner skal være dokumenterte og ha publiserte kontaktpunkter. Dokumentasjonen skal være lesbar både for maskiner og mennesker, der minimumskravet er bruk av OpenAPI (swagger) for API, og for notifikasjonerCloudEvents og IntArks videre føringer. Det må være enkelt for datakonsumenter og utviklere å ta i bruk et API. 1.5 API som tilbyr kildedata skal ha tilstrekkelig oppetid og responstid til å støtte forventet anvendelse og last. Institusjonen vurderer hva som er godt nok. Datakonsumenter må kunne stole på at data er tilgjengelige, skal de kunne brukes. 1.6 Like kildedata - på tvers av institusjoner - skal struktureres og tilgjengeliggjøres for konsumenter på lik måte, enten gjennom et felles API eller identiske API-er. Datakonsumenter må kunne hente tilsvarende data fra sektoren med minst mulig spesialtilpasninger per institusjon. Hvert avvik gir flere kostnader. 1.7 Det skal tilbys notifikasjoner om endringer i kildedataene hvis rask provisjonering gir bedre brukeropplevelse i de konsumerende tjenestene. Sluttbrukere forventer at IT-tjenester bare fungerer, umiddelbart, og ønsker ikke å &quot;vente til neste morgen&quot;. I tillegg er dette en mindre systemkrevende integrasjon for store datasett, sammenlignet med komplette overføringer av alle data. 1.8 API skal bare tilby data de er autoritative for. Å tilby data som andre er ansvarlige for gjør det vanskeligere for konsumenter å finne frem til riktig kilde, og vil risikere å bruke utdaterte data. Du bør heller referere eller henvise til autoritativt kildesystem. 1.9 Forretningslogikken til en integrasjon bør i utgangspunktet ligge hos konsumenten, eventuelt i mikrotjenesten mellom datatilbyder og konsument. IntArk synliggjør kostnaden med forretningslogikk, spesielt ulikhetene ved gjenbruk. Ved å plassere forretningslogikk i integrasjonen, unngår du at kompleksitet lekker inn til datatilbyders løsning. Dette følger også DigDirs prinsipp 5 Opplysningene som de er.  ","version":"Next","tagName":"h3"},{"title":"2 Informasjonsforvaltning​","type":1,"pageTitle":"Styringsreglene til IntArk","url":"/docs/datadeling/styringsregler#2-informasjonsforvaltning","content":" Det holder ikke bare å gjøre data tilgjengelige for å oppnå gevinstene med god datadeling. Du trenger også god datakvalitet for å oppnå gjenbruk, og at dette forvaltes fortløpende.  For mer informasjon, se blant annet Veileder for orden i eget hus, anbefalinger for god datakvalitet, sektorens API-kataloger, Felles datakatalog, og anbefalte roller og ansvar i IntArk (spesielt rollen «dataforvalter»).  Nr\tStyringsregel\tBegrunnelse2.1 Kildedata skal beskrives semantisk iht. DCAT-AP-NOog IntArks videre føringer Beskrivelsen skal publiseres i institusjonens API-katalog. Bruk begreper og semantikk som er definert innen kildedataenes domene. En samlet oversikt over alle kildedata gjør det enklere for datakonsumenter å finne frem til riktige data, og institusjonen unngår duplisering av data. En sektoriell datakatalog er under planlegging, så beskrivelser av datasett vil på sikt flyttes. 2.2 Kildedata skal ha god datakvalitet, altså at de er korrekte, komplette, oppdaterte, og konsistente, og har evnen til å støtte de informasjonsformål de brukes til (se definisjon fra datakatalogen). Data med dårlig kvalitet vil føre til mindre gjenbruk, og mer lokale avvik. 2.3 Kildedata skal rettes av tilbyder, i kildesystemet, og ikke i konsumerende tjeneste eller underveis i mellomvare. Feil i data skal meldes til tilbyder. Det er en mer effektiv ressursbruk å rette feil i kilden, enn at hver enkelt datakonsument skal gjøre samme rettingene. Hvis en konsument retter på kildedata, har du i praksis skapt et nytt, uoffisielt kildesystem. Det er tillatt å endre på kildedata for å støtte spesifikke bruksområder, for eksempel i «ytre API», men rettinger av feil skal fremdeles gjøres hos kilden.  ","version":"Next","tagName":"h3"},{"title":"3 Bruk av data​","type":1,"pageTitle":"Styringsreglene til IntArk","url":"/docs/datadeling/styringsregler#3-bruk-av-data","content":" IntArk legger til rette for datakonsumenter, men det er også noen regler disse konsumentene må følge.  Nr\tStyringsregel\tBegrunnelse3.1 Datakonsumenter skal hente data fra kildesystemet, og ikke gjennom andre tjenester. Unntaket er fellestjenester for sammenstilte data , og mellomvare som caching- og proxy-tjenester. Institusjonen har bedre oversikt og kontroll over egne data hvis alle henter data fra kilden, og ikke via andre konsumenter. For eksempel når det er viktig at data slettes. Et annet eksempel er at en konsument kan ha gjennomført egen datavask, og filtrert bort data som ikke er interessant for denne konsumenten.  ","version":"Next","tagName":"h3"},{"title":"4 IT-sikkerhet og tilgangsstyring​","type":1,"pageTitle":"Styringsreglene til IntArk","url":"/docs/datadeling/styringsregler#4-it-sikkerhet-og-tilgangsstyring","content":" Institusjonene trenger å ha oversikt og kontroll over hvem som har tilgang til deres data.  Se også de tekniske retningslinjene for mer detaljer om sikring av tjenester og integrasjoner.  Nr\tStyringsregel\tBegrunnelse4.1 Tilganger til kildedata skal registreres og kontrolleres i institusjonens API manager Institusjonen har bedre oversikt og kontroll på hvem som har tilgang til hvilke av deres data, hvis alle tilganger er samlet ett sted. API manager gir verktøy for oversikt og innsikt.  ","version":"Next","tagName":"h3"},{"title":"5 Organisering​","type":1,"pageTitle":"Styringsreglene til IntArk","url":"/docs/datadeling/styringsregler#5-organisering","content":" Institusjonene styrer selv hvordan de organiserer seg relatert til datadeling, men de må oppfylle noen funksjonelle behov for å overholde IntArk. Vianbefaler likevel at institusjonene tar i bruk de anbefalte rollene fra referansearkitekturen for deling av data i høyere utdanning og forsking. Se også IntArk sin anbefaling relatert til rollene.  Nr\tStyringsregel\tBegrunnelse5.1 Deltakende institusjoner skal ha et kontaktpunkt, for bistand til institusjonens integrasjoner. Kontaktpunktet må også være tilgjengelig for aktører fra utenfor institusjonen. Det må være enkelt å integrere, og datatilbydere og konsumenter må kunne få hjelp om de trenger det. Ofte handler bistanden om å kunne henvise til riktig person eller rolle i organisasjonen. 5.2 Ansvaret for konkrete kildedata skal være tydelig definert. Alle kildedata må eies av noen ved institusjonen. Vi trenger en ryddig håndtering av kildedata. Bruk gjerne referansearkitekturen sin anbefalte rolle: «dataforvalter». 5.3 Integrasjoner bør eies og finansieres av den som ønsker å integrere; altså den tjeneste som vil bedre sin kvalitet og/eller tilby rikere funksjonalitet. Dette følger DigDirs føringer ved deling av data der «Tilbyder deler opplysningene slik de forvalter dem». Et feilplassert eierskap vil kunne føre til feil prioriteringer av integrasjonen.  ","version":"Next","tagName":"h3"},{"title":"6 Annet​","type":1,"pageTitle":"Styringsreglene til IntArk","url":"/docs/datadeling/styringsregler#6-annet","content":" Nr\tStyringsregel\tBegrunnelse6.1 IT-tjenester som anskaffes eller utvikles skal følge IntArk, inkludert tjenester levert av eksterne leverandører. Hvis en tjeneste i utgangspunktet ikke følger IntArk må kostnadene for å gjøre den IntArk-kompatibel tas med i evalueringen. Alle kildedata trenger å enkelt kunne tilgjengeliggjøres, hvis vi skal oppnå gevinster ved deling og gjenbruk av data. Verden og behovene endrer seg, så selv om du ikke ser behovet for deling i dag, vil det fort bli et behov senere. Vi trenger ikke flere siloer og lock-in-situasjoner. 6.2 Integrasjoner skal bruke nasjonale og sektorielle felleskomponenter, der det finnes. Hvis felleskomponenten ikke dekker behovet, skal du ha dialog med eieren av denne komponenten før alternative løsninger vurderes. Det er mer effektiv bruk av ressurser å gjenbruke det som allerede er implementert. Vår sektor har enkelte behov som ikke nødvendigvis kan løses nasjonalt, men det er hensiktsmessig å i alle fall gi fellestjenesten en sjanse før du eventuelt finner opp nye hjul selv. 6.3 Unntak fra arkitekturen må besluttes basert på kost/nytte-vurderinger i et livsløpsperspektiv. Beslutningen må være sporbar. Unntaket må ivareta IntArks formål og kan ikke bryte med kravet om å tilgjengeliggjøre kildedata, jf. styringsregel nr. 1.1. Unntak bør meldes tilbake til Sikt, for å gi lærdom for videreutvikling av arkitekturen. Hensikten med IntArk er å gjøre det enklere å integrere i sektoren, men sektoren er veldig heterogen, og verden er ikke perfekt. I enkeltsituasjoner vil det være mer hensiktsmessig å godta et unntak, typisk i prioriteringen av kostnader, men det er viktig da å tenke på kostnadene i et større perspektiv – hvilke ulemper vil det gi for institusjonen senere? ","version":"Next","tagName":"h3"},{"title":"IntArk sin tekniske plattform","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/","content":"","keywords":"","version":"Next"},{"title":"API manager​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"/docs/datadeling/teknisk-plattform/#api-manager","content":"   ","version":"Next","tagName":"h2"},{"title":"Administrasjon av dine API og tilganger​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"/docs/datadeling/teknisk-plattform/#administrasjon-av-dine-api-og-tilganger","content":" Vi bruker Gravitee som API Manager, og hver institusjon får sin egen, isolerte Gravitee-instans.  Mer detaljer om API manager:  Hvordan vi bruker GraviteeTekniske detaljer  Veiledere for API manager:  Veileder for å komme i gang med IntArkVeileder for å registrere et APIVeileder for å søke om tilgang til API  ","version":"Next","tagName":"h3"},{"title":"API Gateway​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"/docs/datadeling/teknisk-plattform/#api-gateway","content":"   ","version":"Next","tagName":"h2"},{"title":"Tilgangskontroll for dine API​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"/docs/datadeling/teknisk-plattform/#tilgangskontroll-for-dine-api","content":" API gateway er en proxy for ditt API, som brukes for tilgangskontroll og logging. API gateway styres av API manager. Teknisk sett er dette to separate komponenter i samme produkt.  Vi bruker Gravitee som API Gateway.  Tilkoblingsdetaljer  ","version":"Next","tagName":"h3"},{"title":"Selvbetjeningsportal for RabbitMQ​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"/docs/datadeling/teknisk-plattform/#selvbetjeningsportal-for-rabbitmq","content":"   ","version":"Next","tagName":"h2"},{"title":"Administrasjon av tilgang til dine meldinger​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"/docs/datadeling/teknisk-plattform/#administrasjon-av-tilgang-til-dine-meldinger","content":" En enkel selvbetjening foran RabbitMQ, så datatilbydere og konsumenter kan selv forvalte sine tilganger til notifikasjoner.  Mer detaljer om Selvbetjeningsportalen for RabbitMQVeileder for å registrere din tjeneste i selvbetjeningsportalen  ","version":"Next","tagName":"h3"},{"title":"Meldingskø​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"/docs/datadeling/teknisk-plattform/#meldingskø","content":"   ","version":"Next","tagName":"h2"},{"title":"Håndtering av dine meldinger​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"/docs/datadeling/teknisk-plattform/#håndtering-av-dine-meldinger","content":" RabbitMQ ser til at meldinger, spesieltnotifikasjoner, leveres mellom tjenester. Dette brukes blant annet i integrasjonsmønsteret hendelsesbasert provisjonering.  Bruk helst Selvbetjeningsportalen for RabbitMQ for å administrere dine tjenester og tilganger. RabbitMQ krever mer teknisk innsikt å bruke, og i tillegg hjelper Selvbetjeningsportalen deg å sette opp meldingskøer på en standard måte.  Tilkoblingsdetaljer  ","version":"Next","tagName":"h3"},{"title":"Konnektorer​","type":1,"pageTitle":"IntArk sin tekniske plattform","url":"/docs/datadeling/teknisk-plattform/#konnektorer","content":" Jo flere som følger IntArk for sine integrasjoner, jo mer IntArk-kompatible konnektorer kan gjenbrukes av andre. Se kodeeksemplerog erfaringsdelingen. ","version":"Next","tagName":"h2"},{"title":"Digdir API'er mot Folkeregisteret og KRR","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/api/digdir","content":"","keywords":"","version":"Next"},{"title":"Om API-ene​","type":1,"pageTitle":"Digdir API'er mot Folkeregisteret og KRR","url":"/docs/datadeling/teknisk-plattform/api/digdir#om-api-ene","content":" Folkeregisteret API gir tilgang til å hente ut opplysninger om persondata fra Folkeregisteret. Se Folkeregisteret API-portal for mer informasjon.  KRR API gir tilgang til å hente ut kontakt- og reservasjonsopplysninger fra kontakt- og reservasjonsregisteret. Se KRR API-portal for mer informasjon.  API'ene krever autentisering via Maskinporten, så institusjonen må registrere seg der før integrasjonen kan opprettes. Maskinporten bruker virksomhetssertifikater eller selvsignerte nøkler for autentisering.  ","version":"Next","tagName":"h2"},{"title":"Standardoppsett​","type":1,"pageTitle":"Digdir API'er mot Folkeregisteret og KRR","url":"/docs/datadeling/teknisk-plattform/api/digdir#standardoppsett","content":" Folkeregisteret API og KRR API er statlige fellestjenester, og må/bør derfor settes opp likt hos alle institusjoner. Du kan sette dette opp ved å laste inn fil med standardoppsett:  digdir-freg-api-template.json  digdir-krr-api-template.json  Standardoppsettene er satt opp med et utgående kall mot Maskinporten for å få utstedt et token for autentisering. Tjenesten som utsteder token kan enten settes opp i Gravitee (se bruksanvisning her) eller hos den enkelte institusjon. Oppsettfilene er i utgangspunktet satt opp til å gå mot en slik intern tjeneste.  ","version":"Next","tagName":"h2"},{"title":"Hvordan sette opp API-ene​","type":1,"pageTitle":"Digdir API'er mot Folkeregisteret og KRR","url":"/docs/datadeling/teknisk-plattform/api/digdir#hvordan-sette-opp-api-ene","content":" Registrer din institusjon hos Maskinporten, se planleggingsaktiviteten her. Registrer deretter en integrasjon i maskinporten, se veiledning her(https://docs.digdir.no/docs/Maskinporten/maskinporten_sjolvbetjening_web.html) Sluttresultatet er at du har en integrasjon hvor du kan autentisere vha. virksomhetssertifikat eller selvsignerte nøkler (og som bare brukes mot denne integrasjonen). Integrasjonen må ha blitt tildelt de nødvendige scopes (se Oppsett detaljer) og du må ha issuer-ID tilgjengeligOpprett tokentjeneste om du ikke har gjort det tidligere og gi APIet tilgang. Om du vil lage en i gravitee se veiledning her Gi deretter APIet tilgang ved å opprette en applikasjon for dette og søk om tilgang til maskinporten-APIet. Når tilgangen er gitt får du en API-nøkkel som vi bruker i neste steg Last ned standardoppsettet over, og opprett tjenesten i API manager. Se veileder for å registrere en tjeneste i API manager via fil. Inne på API'et du nettop importerte, gå til DesignKlikk på [ALL] /** under API Flows og så på HTTP CalloutEndre URL til den interne tokentjenestenGå videre til Properties (oppe til høyre)Legg inn property med key maskinporten_api_key og value er API-nøkkel du ble tildelt i punkt 2 overLegg inn property med key maskinporten_api_iss og value er Integrasjons-ID til integrasjonen du satte opp i Maskinporten i punkt 1 overmaskinporten-integrasjonen Andre verdier du eventuelt kan endre: Hvis du skal sette opp mot prod: gå inn på Proxy -&gt; Endpoints under Backend services og endre URL til produksjonsmiljøet (se Oppsett detaljer)Gateway context path under EntrypointsNavn og beskrivelse  API-et er nå satt opp.  ","version":"Next","tagName":"h2"},{"title":"Oppsett detaljer​","type":1,"pageTitle":"Digdir API'er mot Folkeregisteret og KRR","url":"/docs/datadeling/teknisk-plattform/api/digdir#oppsett-detaljer","content":" Folkeregisteret API​  Endpoint: Prod: https://folkeregisteret.api.skatteetaten.no/Test: https://folkeregisteret-api-konsument.sits.no/ Scope: folkeregister:deling/offentligutenhjemmel og/eller folkeregister:deling/offentligmedhjemmel  KRR​  Enpoint Prod: https://kontaktregisteret.no/rest/v1/personerTest: https://test.kontaktregisteret.no/rest/v1/personer Scope: krr:global/kontaktinformasjon.read  ","version":"Next","tagName":"h3"},{"title":"Hvordan verifisere at API-et fungerer:​","type":1,"pageTitle":"Digdir API'er mot Folkeregisteret og KRR","url":"/docs/datadeling/teknisk-plattform/api/digdir#hvordan-verifisere-at-api-et-fungerer","content":" Opprett din egen klient (applikasjon) i API manager, om du ikke har dette allerede. Be om tilgang til API-et. Godkjenn tilgangen til API-et. Du har nå fått en egen API-nøkkel for din klient. Bruk klientens API-nøkkel, og sjekk at du får hentet ut data: Test av Folkeregisteret API med curl (husk å endre det som står i uthevet tekst): curl --include -H &quot;X-Gravitee-Api-Key: **API-nøkkel**&quot; https://gw-**INSTANS**.intark.uh-it.no/test/digidir/freg/personer/18906299204 Test av KRR API (husk å endre det som står i uthevet tekst): curl --include -H &quot;X-Gravitee-Api-Key: **API-nøkkel**&quot; -H &quot;Content-Type: application/json&quot; -d '{&quot;personidentifikatorer&quot;:[&quot;23079422568&quot;]}' -X POST https://gw-**INSTANS**.intark.uh-it.no/test/digdir/krr/personer Hvis alt er ok kan du forvente å få tilbake noe som starter med &quot;HTTP 200&quot; og JSON-data. ","version":"Next","tagName":"h3"},{"title":"Felles Studentsystem - FS-API","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/api/fs","content":"","keywords":"","version":"Next"},{"title":"Om API-et​","type":1,"pageTitle":"Felles Studentsystem - FS-API","url":"/docs/datadeling/teknisk-plattform/api/fs#om-api-et","content":" Felles Studentsystem er en fellestjeneste i sektoren. Hver institusjon har sin instans, men FS leverer et felles REST API for alle institusjoner, der hver institusjon får ut sine studiedata.  Se fellesstudentsystem.no for mer informasjon om tjenesten. Se mer detaljer om FS API.  ","version":"Next","tagName":"h2"},{"title":"Miljøer​","type":1,"pageTitle":"Felles Studentsystem - FS-API","url":"/docs/datadeling/teknisk-plattform/api/fs#miljøer","content":" Det finnes tre varianter av FS-API:  Miljø\tURLProduksjon\thttps://api.fellesstudentsystem.no/ Test/Demo\thttps://api-test.fellesstudentsystem.no/ Utvikling\thttps://api-utv.fellesstudentsystem.no/  Besøk /version for å se hvilken versjon miljøet kjører.  ","version":"Next","tagName":"h2"},{"title":"Oppsett av FS-API​","type":1,"pageTitle":"Felles Studentsystem - FS-API","url":"/docs/datadeling/teknisk-plattform/api/fs#oppsett-av-fs-api","content":" ","version":"Next","tagName":"h2"},{"title":"Tilgang til FS-API​","type":1,"pageTitle":"Felles Studentsystem - FS-API","url":"/docs/datadeling/teknisk-plattform/api/fs#tilgang-til-fs-api","content":" Du som er lokal tjenesteeier for FS må be FS sentralt om tilgang til FS-API for din institusjon.  Ta kontakt med fs-support@sikt.no med ønske om å få opprettet et brukernavn og passord til FS-API for databasen det er aktuelt å sette opp tilgang til (prod/demo). apigateway er et forslag til et beskrivende brukernavn. Denne bør ha lesetilgang til alle ressurser. Ved behov kan skrivetilganger legges på senere.  ","version":"Next","tagName":"h3"},{"title":"Konfigurasjon av FS-API i Gravitee​","type":1,"pageTitle":"Felles Studentsystem - FS-API","url":"/docs/datadeling/teknisk-plattform/api/fs#konfigurasjon-av-fs-api-i-gravitee","content":" Se den generelle veilederen.  General: Sørg for at context-path tydelig peker på miljøet du setter opp API-et for, f.eks. /fs-api-test eller /fs-api-prodGeneral: Sett navn og beskrivelseGeneral: Sett version til 1Gateway: Finn URL i miljøoversikten og fyll den inn under backendPlan: Vi lager en plan som gir full lesetilgang. Senere kan det lages mer nedlåste planer.Plan: Sett f.eks. navnet til Full lesetilgangPlan: Velg Security type: API keyPlan: Auto validate subscription skal IKKE være påPlan: La Characteristics, rate limit og quota være tommePlan: Legg til Ant pattern /** og method GETDoc: Hopp over dette steget. Dokumentasjon kan lastes opp senere.Deployment: Velg Create and start the APIKonfigurer API-et til å autentisere med brukernavnet og passordet fra steg 1Følg veiledningen for konfigurering av backendFS-API forventer basic access authentication, altså skal det settes en Authorization-header med en verdi som vil minne om Basic YnJ1a2VybmF2bjpoZWlwYWFkZWc  ","version":"Next","tagName":"h3"},{"title":"Test av API-et​","type":1,"pageTitle":"Felles Studentsystem - FS-API","url":"/docs/datadeling/teknisk-plattform/api/fs#test-av-api-et","content":" Følg veiledningen for å få tilgang til et API og godkjenn selv tilgangenFinn API-nøkkelen som gir tilgang til FS-API og riktig context-pathSjekk at du får hentet ut en liste over emner: curl --include -H &quot;X-Gravitee-Api-Key: DIN-NØKKEL&quot; https://gw-INSTANS.intark.uh-it.no/CONTEXT-PATH/emner/ Bytt ut DIN-NØKKEL, INSTANS og CONTEXT-PATH. Om du får tilbake noe som starter med &quot;HTTP 200&quot; og en JSON-formatert liste med ulike emner, fungerer alt som det skal.Sjekk at API-et krever autentisering: curl --include -H &quot;X-Gravitee-Api-Key: DIN-NØKKEL&quot; https://gw-INSTANS.intark.uh-it.no/CONTEXT-PATH/emner/ Dette burde gi HTTP 401 og {&quot;message&quot;:&quot;Unauthorized&quot;,&quot;http_status_code&quot;:401}.  ","version":"Next","tagName":"h3"},{"title":"Grunnoppsett for FS Gemini API​","type":1,"pageTitle":"Felles Studentsystem - FS-API","url":"/docs/datadeling/teknisk-plattform/api/fs#grunnoppsett-for-fs-gemini-api","content":" Dette er et grunnoppsett mot FS Gemini API'et. Oppsettet kommer med en plan til bruk sammen med ServiceNow. Det er et oppsett satt opp mot produksjonsmiljøet, samt et oppsett satt opp mot utviklingsmiljøet.  Før import:Context path er satt til /fs/gemini og /preview/fs/gemini. Endre eventuelt denne om man benytter en annen context path struktur.  Etter import:Oppsettet bruker API properties til å hente brukernavn og passord, og dette må derfor settes etter import av oppsettet:  Gå til Design på API-menyenGå videre til PROPERTIES i menyen oppe til høyreLegg inn bas64 encoded string av bruker:passord i verdifeltet til fs_fsapi_api_keyEndre til encryptedHusk å lagre  ","version":"Next","tagName":"h3"},{"title":"Konfigurasjon av meldingskø​","type":1,"pageTitle":"Felles Studentsystem - FS-API","url":"/docs/datadeling/teknisk-plattform/api/fs#konfigurasjon-av-meldingskø","content":" Les først om RabbitMQ og (selvbetjeningsløsningen for RabbitMQ)[/docs/datadeling/teknisk-plattform/brom].  FS har mer teknisk informasjon om sin støtte for meldingskøer. Spesielt relevant er avsnittet om Integrasjonspunkter.  ","version":"Next","tagName":"h2"},{"title":"Opprette applikasjonen i selvbetjeningsportalen​","type":1,"pageTitle":"Felles Studentsystem - FS-API","url":"/docs/datadeling/teknisk-plattform/api/fs#opprette-applikasjonen-i-selvbetjeningsportalen","content":" Se veiledningen for å opprette en applikasjon i selvbetjeningsløsningen ved behov.Bruk FS som navn uansett hvilket miljø (prod/test) du skal sette opp. Miljøtypen blir uansett automatisk lagt på som en del av navnet. Et testmiljø med navn FS får f.eks. identifikatoren system-test-fs.Under Publisering, velg Registrering notfikikasjonskilde Som Lenke til side med dokumentasjon, bruk f.eks. denne lenkaOppgi en sentral e-postadresse til IT hos egen institusjonAlle andre felt kan stå tomme Under fanen Applikasjonsinfo finnes nå brukernavn og passord  ","version":"Next","tagName":"h3"},{"title":"Konfigurasjon av meldingskø i FS​","type":1,"pageTitle":"Felles Studentsystem - FS-API","url":"/docs/datadeling/teknisk-plattform/api/fs#konfigurasjon-av-meldingskø-i-fs","content":" Åpne FS-klienten mot miljøet det skal settes opp meldingskø mot Finn menyvalget WS Tjeneste Opprett en tjenestekode kalt MQ med: URL: amqps:mq-INSTANS.intark.uh-it.no port:5671 vh:system-MILJØ-fs ex:outgoing_system-test-fs INSTANS erstattes med din institusjonskode og system-MILJØ-fs matcher navnet på tjenesten som er opprettet i selvbetjeningsportalen. Brukernavn og passord fra selvbetjeningsportalen Opprett en tjenestekode kalt WSINTERN med: URL: https://api.fellesstudentsystem.no for produksjon, ellerURL: https://fsapi-test.uio.no for test Denne er lik URL-en til API-et hos FS, uten skråstrek på slutten. Ta kontakt med fs-support@sikt.no for videre konfigurasjon på FS sin side.  ","version":"Next","tagName":"h3"},{"title":"Test av meldingskøoppsett​","type":1,"pageTitle":"Felles Studentsystem - FS-API","url":"/docs/datadeling/teknisk-plattform/api/fs#test-av-meldingskøoppsett","content":" For å sjekke at meldinger kommer gjennom, bør det eksisterende en applikasjon som abonnerer på FS sine meldinger via selvbetjeningsløsningen. Abonnentet må være godkjent av en av de som står som eiere av FS i selvbetjeningsløsningen.  Gå til applikasjonen som har abonnert på FS-meldingerVerifiser at system-MILJØ-fs ligger under Godkjente abonnement under AbonnereFølg lenka til RabbitMQ sitt brukergrensesnitt under ApplikasjonsinfoLogg på med applikasjonens brukernavn og passordVed nedtrekksmenyen Virtual host øverst til høyre, velg system-MILJØ-fsFinn køen med navn from_system-MILJØ-fs. Under Messages kan man se antall meldinger som ligger i kø. Denne skal øke om det gjøres endringer i FS, med noe forsinkelse (0-5 minutter). ","version":"Next","tagName":"h3"},{"title":"Inspera","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/api/inspera","content":"","keywords":"","version":"Next"},{"title":"Om API-ene​","type":1,"pageTitle":"Inspera","url":"/docs/datadeling/teknisk-plattform/api/inspera#om-api-ene","content":" DFØs løsninger for økonomi og lønn brukes av mange i sektoren. DFØ tilbyr API som er felles for sektoren, men der hver institusjon får ut sine data.  DFØ tilbyr flere ulike API-er for ulike data, som ansattinformasjon, stillingsdata og organisasjonsdata. Se DFØs API-portal for mer informasjon.  For å kunne bruke DFØs API må din institusjon bli &quot;oppgradert&quot; hos DFØ. Mange institusjoner må i dag forholde seg til CSV-filer fra DFØ. Dette må gjøres i dialog med DFØ, og dette vil kunne ta tid.  ","version":"Next","tagName":"h2"},{"title":"Standardoppsett​","type":1,"pageTitle":"Inspera","url":"/docs/datadeling/teknisk-plattform/api/inspera#standardoppsett","content":" Last ned template for API-definisjonen for Inspera.  ","version":"Next","tagName":"h2"},{"title":"Hvordan sette opp API-ene​","type":1,"pageTitle":"Inspera","url":"/docs/datadeling/teknisk-plattform/api/inspera#hvordan-sette-opp-api-ene","content":" Last ned standardoppsettet over, og opprett tjenesten i API manager. Se veileder for å registrere en tjeneste i API manager via fil.Opprett client-id og client-secret i Inspera med riktige rettigheterclient-id og client-secret laget som properties. Endre disse ved å navigere til design og properties (link til properties er oppe til høyre) og endre derhvis test endre entrypoint fra /inspera til /test/inspera . Endre navn på properties. Husk at dette må endres i callout-policy slik at det blir liktSett riktig URL backend (under proxy og backend endpoint) og i callout-policy (Design - policy -&gt; klikke på policy som heter Callout) Husk i lagreNår alt er endret, klikk på redeploy (gul linje øverst) og start APIet  API-et er nå satt opp.  ","version":"Next","tagName":"h2"},{"title":"Hvordan verifisere at API-et fungerer:​","type":1,"pageTitle":"Inspera","url":"/docs/datadeling/teknisk-plattform/api/inspera#hvordan-verifisere-at-api-et-fungerer","content":" Opprett din egen klient (applikasjon) i API manager, om du ikke har dette allerede. Be om tilgang til API-et. Godkjenn tilgangen til API-et. Du har nå fått en egen API-nøkkel for din klient. Bruk klientens API-nøkkel, og sjekk at du får hentet ut data: Med curl (husk å endre det som står i uthevet tekst): curl --include -H &quot;X-Gravitee-Api-Key: **API-nøkkel**&quot; https://gw-**INSTANS**.intark.uh-it.no/**inspera**/v1/ Med Powershell (husk å endre det som står i uthevet tekst): $headers = @{ 'Accept' = 'application/json' 'X-Gravitee-Api-Key' = **API-nøkkel** } Invoke-WebRequest -Headers $headers -Uri &quot;https://gw-**INSTANS**.intark.uh-it.no/**inspera**/v1&quot; Hvis alt er ok kan du forvente å få tilbake noe som starter med &quot;HTTP 200&quot; og JSON-data. ","version":"Next","tagName":"h3"},{"title":"Integra","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/api/integra","content":"","keywords":"","version":"Next"},{"title":"Om API-et​","type":1,"pageTitle":"Integra","url":"/docs/datadeling/teknisk-plattform/api/integra#om-api-et","content":" DFØs løsninger for økonomi og lønn brukes av mange i sektoren. DFØ tilbyr API som er felles for sektoren, men der hver institusjon får ut sine data.  DFØ tilbyr flere ulike API-er for ulike data, som ansattinformasjon, stillingsdata og organisasjonsdata. Se DFØs API-portal for mer informasjon.  For å kunne bruke DFØs API må din institusjon bli &quot;oppgradert&quot; hos DFØ. Mange institusjoner må i dag forholde seg til CSV-filer fra DFØ. Dette må gjøres i dialog med DFØ, og dette vil kunne ta tid.  ","version":"Next","tagName":"h2"},{"title":"Standardoppsett​","type":1,"pageTitle":"Integra","url":"/docs/datadeling/teknisk-plattform/api/integra#standardoppsett","content":" DFØ er en fellestjeneste, og må/bør derfor settes opp likt hos alle institusjoner. Du kan sette dette opp ved å laste inn fil med standardoppsett.  ","version":"Next","tagName":"h2"},{"title":"Hvordan sette opp API-ene​","type":1,"pageTitle":"Integra","url":"/docs/datadeling/teknisk-plattform/api/integra#hvordan-sette-opp-api-ene","content":" Last ned standardoppsettet over, og opprett tjenesten i API manager. Se veileder for å registrere en tjeneste i API manager via fil.Registrer DFØ SAP som tjeneste i Selvbetjeningsportalen for RabbitMQ (se veileder for å registrere tjenesten). Hent ut tilkoblingsdetaljene som det blir opplyst om.Du som er lokal tjenesteier for DFØ må kontakte DFØ om API-et. Vanligvis gjøres dette ved å sende en e-post til integrasjon@dfo.no med: Be om å få API-nøkkel som gir full tilgang til din institusjons data i DFØs API-er.Send med tilkoblingsdetaljene for publisering av notifikasjoner fra selvbetjeningsportalen. Passordet bør sendes på andre måter enn via e-post. Når du har fått API-nøkler, må du legge de inn i API manager. Logg på API managerGå til ditt DFØ-APIGå til siden &quot;meta&quot;Legg inn API-nøklene i feltet value, der name-feltet heter &quot;DFØ ansatt&quot;, &quot;DFØ stilling&quot;, og &quot;DFØ organisasjon&quot;, etc.  API-et og meldingshåndtering er nå satt opp.  ","version":"Next","tagName":"h2"},{"title":"Hvordan verifisere at API-et fungerer:​","type":1,"pageTitle":"Integra","url":"/docs/datadeling/teknisk-plattform/api/integra#hvordan-verifisere-at-api-et-fungerer","content":" Opprett din egen klient (applikasjon) i API manager, om du ikke har dette allerede. Be om tilgang til API-et. Godkjenn tilgangen til API-et. Du har nå fått en egen API-nøkkel for din klient. Bruk klientens API-nøkkel, og sjekk at du får hentet ut data: Med curl (husk å endre det som står i uthevet tekst): curl --include -H &quot;SOAPACtion: **TODO**&quot; -H &quot;X-Gravitee-Api-Key: **API-nøkkel**&quot; https://gw-**INSTANS**.intark.uh-it.no/**lonn**/v1/organisasjoner/v1/ Med Powershell (husk å endre det som står i uthevet tekst): $headers = @{ 'Accept' = 'application/json' 'X-Gravitee-Api-Key' = **API-nøkkel** 'SOAPAction' = 'TODO' } Invoke-WebRequest -Headers $headers -Uri &quot;https://gw-**INSTANS**.intark.uh-it.no/**lonn**/v1/organisasjoner/v1&quot; Hvis alt er ok kan du forvente å få tilbake noe som starter med &quot;HTTP 200&quot; og JSON-data. ","version":"Next","tagName":"h3"},{"title":"Selvbetjening for RabbitMQ","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/brom","content":"","keywords":"","version":"Next"},{"title":"Kom i gang​","type":1,"pageTitle":"Selvbetjening for RabbitMQ","url":"/docs/datadeling/teknisk-plattform/brom#kom-i-gang","content":" For de utålmodige:  Logg på Selvbetjeningsportalen med din Feide-bruker. Se instans-oversikten for lenke hos din institusjons.Registrer din applikasjon. Dette gjelder både datatilbydere og konsumenter.Konsumenter må søke om tilgang til meldinger fra datatilbydere.Hent ut tilkoblingsdetaljer for din tjeneste fra selvbetjeningsportalen, og sett det opp i din tjeneste.  I selvbetjeningsportalen kalles både datatilbydere og konsumenter for &quot;applikasjoner&quot;. En applikasjon kan både tilby meldinger og konsumere meldinger fra andre. Dette må naturligvis settes opp i selvbetjeningsportalen.  Anbefalt meldingsprotokoll: AMQP 0.9.1 på port 5671 (TLS).  Se kode-eksempler:  Hvordan sende notifikasjoner (datatilbyder): publisering_simpel.pyHvordan motta notifikasjoner (konsument): konsument_simpel.py  ","version":"Next","tagName":"h2"},{"title":"Hva gjør Selvbetjeningsportalen for RabbitMQ?​","type":1,"pageTitle":"Selvbetjening for RabbitMQ","url":"/docs/datadeling/teknisk-plattform/brom#hva-gjør-selvbetjeningsportalen-for-rabbitmq","content":" Oppsett av meldingskøer i RabbitMQ krever ofte god teknisk innsikt. Selvbetjeningsportalen for RabbitMQ er utviklet for IntArk, og forenkler arbeidet med meldingskøer så datatilbydere og konsumenter selv kan forvalte sine tilganger. Alt som gjøres i Selvbetjeningsportalen for RabbitMQ blir synkronisert med RabbitMQ fortløpende.  Det er to fordeler med å bruke Selvbetjeningsportalen for RabbitMQ:  Enklere å administrere, uten teknisk innsikt.Standardisert oppsett. Alle tjenester og tilganger settes opp på en standard måte. Dette er mer nyttig dess flere tjenester en institusjon har.  Meldinger brukes blant annet i integrasjonsmønsteret hendelsbasert provisjonering, da det er en rask og effektiv måte å oppdatere andre når noe skjer. Det er likevel ikke begrenset til dette integrasjonsmønsteret.  ","version":"Next","tagName":"h2"},{"title":"Hva støtter Selvbetjeningsportalen for RabbitMQ?​","type":1,"pageTitle":"Selvbetjening for RabbitMQ","url":"/docs/datadeling/teknisk-plattform/brom#hva-støtter-selvbetjeningsportalen-for-rabbitmq","content":" Selvbetjeningsportalen støtter Datadelingsprosessene i IntArk:  Datatilbyder kan registrere sin tjeneste i løsningen. Selvbetjeningsportalen oppretter da alt som trengs i RabbitMQ. Datatilbyder får listet ut tilkoblingsdetaljer.Datatilbyder kan akseptere og avslå konsumenters søknad om tilgang til sine notifikasjoner. Selvbetjeningsportalen sikrer at RabbitMQ følger dette.Datatilbyder får oversikt over hvem som har tilgang til sin tjenestes notifikasjoner.Konsumenter kan søke etter tilgjengelige tjenester som produserer notifikasjoner.Konsumenter kan søke om tilgang til en tjenestes notifikasjoner.Konsumenter får listet ut tilkoblingsdetaljer når tilgang er gitt.  ","version":"Next","tagName":"h2"},{"title":"Tilganger​","type":1,"pageTitle":"Selvbetjening for RabbitMQ","url":"/docs/datadeling/teknisk-plattform/brom#tilganger","content":" Den som oppretter en tjeneste i Selvbetjeningsportalen for RabbitMQ kan gi andre tilgang til å administrere tjenesten. Dette gjøres enten ved å legge inn deres Feide-id, eller legge inn navnet på en Dataporten-gruppe. Selvbetjeningsportalen støtter både ad hoc- og entitlements-grupper fra Feide.  ","version":"Next","tagName":"h3"},{"title":"Bakgrunnen for selvbetjeningsløsningen for RabbitMQ​","type":1,"pageTitle":"Selvbetjening for RabbitMQ","url":"/docs/datadeling/teknisk-plattform/brom#bakgrunnen-for-selvbetjeningsløsningen-for-rabbitmq","content":" RabbitMQ er valgt løsning for å håndtere notifikasjoner i IntArk. Dette er en teknisk avansert, men komplisert tjeneste, som krever en del teknisk innsikt hos sluttbruker. RabbitMQ gir deg mer innsikt, og større muligheter for å gjøre ting annerledes. I de fleste tilfeller er ikke dette nødvendig, da selvbetjeningsløsninger håndterer dette med et standardisert oppsett.  Selvbetjeningsløsningen ble utviklet av BOTT, for å gjøre det mulig for datatilbydere og konsumenter å selv forvalte tilgangene til notifikasjoner. Tjenesten videreutvikles for å støtte mer funksjonalitet etterhvert som det bes om av sektoren.  ","version":"Next","tagName":"h2"},{"title":"Tekniske detaljer​","type":1,"pageTitle":"Selvbetjening for RabbitMQ","url":"/docs/datadeling/teknisk-plattform/brom#tekniske-detaljer","content":" Selvbetjeningsportalen for RabbitMQ er kildesystem for tilgangene til tjenesters notifikasjoner. Selvbetjeningsportalen har tilganger i RabbitMQ til å opprette vhosts, køer og exchange per tjeneste. I Selvbetjeningsportalen for RabbitMQ kalles tjenester for &quot;applikasjon&quot;, og hver applikasjon får sin egen vhost. En applikasjon kan både vere datatilbyder og konsument, samtidig.  Når en applikasjon får tilgang til en annen applikasjons notifikasjoner, setter Selvbetjeningsportalen opp en egen kø i konsumentens vhost, og en fast kopiering av notifikasjoner fra produsenten. Se figur som illustrerer dette:    Selvbetjeningsportalen for RabbitMQ konfigureres også opp til å vere autentiserings- og autorisasjonskilde for RabbitMQ. Det betyr at applikasjoner i selvbetjeningsportalen også kan brukes til å logge på i RabbitMQ sitt managementgrensesnitt. Navnet og passordet til applikasjonen benyttes for å logge inn i managementgrensesnittet. Man får bare tilgang til data og oppsett til den relaterte applikasjonen.  Selvbetjeningsportalen kjører i IntArks tekniske plattform. Se oversikt over den tekniske plattformen for URL.  ","version":"Next","tagName":"h2"},{"title":"Endringer i RabbitMQ​","type":1,"pageTitle":"Selvbetjening for RabbitMQ","url":"/docs/datadeling/teknisk-plattform/brom#endringer-i-rabbitmq","content":" Hva som skjer i RabbitMQ når noe skjer i Selvbetjeningsportalen for RabbitMQ. Endringer i selvbetjeningsportalen står med fet skrift.  Applikasjon opprettes i selvbetjeningsportalen.  Det opprettes en vhost i RabbitMQ med samme navn som applikasjonen. Applikasjonen får full tilgang til denne vhosten. I tillegg opprettes det en exchange som man kan publisere meldinger til.    Applikasjon markeres til å være datatilbyder.  Det skjer ingen endringer i RabbitMQ, men applikasjonen vises som meldingstilbyder på Selvbetjeningsportalen sin oversikt. Dermed kan konsumenter lese dokumentasjon om meldingene som tilbys og søke om tilgang.  Konsument søker om tilgang til en tilbyder.  Det opprettes en kø og en exchange på konsumenten sin vhost. Disse er dedikert til å motta meldinger fra tilbyderen, og får navn som gjenspeiler det. I dette tilfellet har Applikasjon B søkt om tilgang til Applikasjon A sine meldinger.    Datatilbyder gir en konsument tilgang til sine meldinger.  Det settes opp en kø på tilbyderen sin vhost, og en kopi av fremtidige meldinger fra tilbyderens exchange vil bli sendt til denne køen. Meldingene i denne køen skal videresendes til konsumenten, så køen får et navn som gjenspeiler det. RabbitMQ får en &quot;shovel&quot; som videresender alle meldinger fra den nylig opprettede køen på tilbyderen sin vhost til en exchange på konsumenten sin vhost.    Datatilbyder fjerner tilgang for en konsument.  RabbitMQ sletter &quot;shovel&quot; som kopierer tilbyderens meldinger over til konsumentens vhost. Køen på tilbyderen sin vhost blir også slettet.  Datatilbyder gir en gruppe eller andre brukere tilgang til sin applikasjon.  Gruppen/brukerne får full tilgang til å administrere applikasjonen i Selvbetjeningsportalen. Dette inkluderer også tilgang til applikasjonens passord i RabbitMQ, som betyr at gruppen/brukerne også får tilgang til å administrere vhosten i RabbitMQ.  Flere applikasjoner kan abonnere på hverandre sine meldinger.    ","version":"Next","tagName":"h3"},{"title":"Lenker​","type":1,"pageTitle":"Selvbetjening for RabbitMQ","url":"/docs/datadeling/teknisk-plattform/brom#lenker","content":" Teknisk designdokument. Merk at Selvbetjeningsportalen for RabbitMQ har arbeidsnavnet BROM (BRukervennlig Oppsett av Meldinger).Veileder for å registrere en applikasjon i selvbetjeningsløsningenIntegrasjonsmønsteret Hendelsbasert provisjonering, som er det mest brukte integrasjonsmønsteret som bruker notifikasjoner.Mer detaljer om RabbitMQ i IntArk. ","version":"Next","tagName":"h2"},{"title":"Maskinporten som token-tjeneste i Gravitee","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/api/maskinporten","content":"","keywords":"","version":"Next"},{"title":"1 Få tilgang i Samarbeidsportalen​","type":1,"pageTitle":"Maskinporten som token-tjeneste i Gravitee","url":"/docs/datadeling/teknisk-plattform/api/maskinporten#1-få-tilgang-i-samarbeidsportalen","content":" Opprett en bruker i Samarbeidsportalen til Digdir. Hvis du vil kan du nå sette opp en integrasjon mot test-miljøet til Maskinporten. Få delegert rollen Selvbetjening av integrasjoner i ID-porten/Maskinporten. Dette gjør at du kan sette opp integrasjoner for produksjonsmiljøet for Maskinporten, for din virksomhet. Dette må delegeres av hovedadministratoren til virksomheten - vanligvis universitetsdirektør eller høgskoledirektør. Se siden Digdir: Tilgang i produksjonsmiljøfor hvordan dette gjøres.  Hvis du ikke kan få denne tilgangen må noen andre som har tilgang utføre punktene nedenfor som gjøres i Samarbeidsportalen.  ","version":"Next","tagName":"h2"},{"title":"2 Generer nøkler lokalt​","type":1,"pageTitle":"Maskinporten som token-tjeneste i Gravitee","url":"/docs/datadeling/teknisk-plattform/api/maskinporten#2-generer-nøkler-lokalt","content":" Lag en egen nøkkel for å bruke i Maskinporten:  Generer en nøkkel med ssh:  $ ssh-keygen -t rsa -b 4096 -m PEM -f maskinporten-rs256.key   Generer en offentlig nøkkel i PEM-format, med OpenSSL:  $ openssl rsa -in maskinporten-rs256.key -pubout -outform PEM -out maskinporten-rs256.key.pub.pem   Konverter nøkkelen til JWK-format (Java Web Key), siden det er dette Maskinporten krever. Dette kan gjøres på flere måter, men vi foreslårpem_to_jwks.py:  $ git clone git@github.com:oyviaase/okta-jwks-to-pem.git $ cd okta-jwks-to-pem $ python3 pem_to_jwks.py --kid maskinporten-uio ../maskinporten.key.pub.pem   Husk å notere parameteret du satt som --kid. Du vil trenge dette når du setter opp Maskinporten-API-et i Gravitee senere.  ","version":"Next","tagName":"h2"},{"title":"3 Sett opp i Samarbeidsportalen​","type":1,"pageTitle":"Maskinporten som token-tjeneste i Gravitee","url":"/docs/datadeling/teknisk-plattform/api/maskinporten#3-sett-opp-i-samarbeidsportalen","content":" Hvis du allerede har satt opp Maskinporten i Samarbeidsportalen som du ønsker gjenbruke, kan du hoppe til steg 4:  Logg inn i Samarbeidsportalen og velg INTEGRASJONER Trykk på +Ny integrasjon. Pass på at det står PRODUKSJON eller VER2(for testmiljøet til maskinporten) i knappen ved siden av: Fyll ut skjemaet: Difi-tjeneste: MaskinportenScopes: De du trenger. Ta eventuelt kontakt med leverandørene av API-et for å vite hvilke scopes de krever.Navn på integrasjonen: Vårt eksempel: uio-gravitee-(prod|test).Tillatte grant types: urn:ietf:params:oauth:grant-type:jwt-bearerKlientautentiseringsmetode: private_key_jwtApplikasjonstype: webAuthorization levetid (sekunder): 0Access token levetid (sekunder): 0Refresh token levetid (sekunder): 0Refresh token type: Engangs Last opp JWT-nøkkel Velg integrasjonen du nettopp laget og velg Egne public nøkler. I dialog-vinduet kopierer du inn output fra kommandoen i steg 3 i Lokale forberedelser, men med hakeparentes rundt innholdet. Et eksempel:  [{&quot;alg&quot;: &quot;RS256&quot;, &quot;e&quot;: &quot;AQAB&quot;, &quot;n&quot;: &quot;XXXXXXXXXXXXXX...XXXXXXXXXXXXX&quot;, &quot;kid&quot;: &quot;uio-gravitee-test&quot;, &quot;kty&quot;: &quot;RSA&quot;, &quot;use&quot;: &quot;sig&quot;}]     ","version":"Next","tagName":"h2"},{"title":"4 Konfigurasjons steg i Gravitee​","type":1,"pageTitle":"Maskinporten som token-tjeneste i Gravitee","url":"/docs/datadeling/teknisk-plattform/api/maskinporten#4-konfigurasjons-steg-i-gravitee","content":" Last ned template for API-definisjonen for maskinporten. og last den opp i graviteee. Se veileder for å registrere en tjeneste i API manager via fil.Om dette er mot produksjonsystem i stedet for test, naviger til proxy og endpoint (under backend services) . Klikk på tannhjulet for PROD, fjern haken for backup endpoint. Slett TEST eller huk av for at test skal være backup endpint. Husk å lagreGå på design. Klikk på policy &quot;Generate JWT&quot; Fyll inn: _Key ID: det samme parameteren man satte som --kid i steg 3 i Lokale forberedelseraudiences: Settes tilhttps://maskinporten.no/hvis det er produksjon eller https://ver2.maskinporten.no/ hvis det er test miljøet man skal brukePrivate key Den private nøkkelen laget i steg 1 i Lokale forberedelserHusk å lagre Gå til Portal og details. Klikk på START THE API og PUBLISH THE API. Vi anbefaler at du for dette APIet ikke klikker på MAKE PUBLIC  ","version":"Next","tagName":"h3"},{"title":"5 Alternative oppsett​","type":1,"pageTitle":"Maskinporten som token-tjeneste i Gravitee","url":"/docs/datadeling/teknisk-plattform/api/maskinporten#5-alternative-oppsett","content":" Det som er beskrevet over er anbefalt måte å sette opp autentisering mot Maskinporten. Det finnes noen andre alternativ, men som vi ikke anbefaler:  Den første er å bruke virksomhetssertifikatet direkte. Virksomhetssertifikatet lastes da opp i API manager, slik at det brukes av token-tjenesten. Dette anbefales ikke siden virksomhetssertifikatet generelt ikke bør deles utenfor egen institusjon.  Det andre alternativet er å sette opp en mikrotjeneste som kjører lokalt hos institusjonen, som håndterer tokens når API manager gjør API-kall mot Maskinporten. Dette er noe mer komplisert enn anbefalingen, siden det krever at du setter opp og drifter en lokal tjeneste. ","version":"Next","tagName":"h2"},{"title":"Rolf - rolleregister","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/api/rolf-api","content":"","keywords":"","version":"Next"},{"title":"Kom i gang​","type":1,"pageTitle":"Rolf - rolleregister","url":"/docs/datadeling/teknisk-plattform/api/rolf-api#kom-i-gang","content":" Kortversjon:  Bestill oppsett av Rolf fra UiO, se Bestill Rolf. Du vil få tilsendt en JSON-fil du kan bruke videre for oppsettet.Log inn i Gravitee som administrator.Opprett et nytt API ved å trykke på pluss-knappen nede til høyre.Trykk på &quot;IMPORT&quot;-knappenVelg tilsendt .json filTrykk på &quot;API out of sync, deploy your API&quot; langs toppen. Her kan du også gjøre evtuelle tilpasninger som skulle samsvare med din organisasjon. Trykk Start API under General - DetailsNår du er klar, trykk, Publish The API, under General - Details  ","version":"Next","tagName":"h2"},{"title":"Hvordan importere API fra tilsendt json fil​","type":1,"pageTitle":"Rolf - rolleregister","url":"/docs/datadeling/teknisk-plattform/api/rolf-api#hvordan-importere-api-fra-tilsendt-json-fil","content":" Opprett et nytt API ved å trykke på pluss-knappen nede til høyre. Trykk på &quot;IMPORT&quot;-knappen Trykk på &quot;API out of sync, deploy your API&quot; langs toppen. Trykk Start API under General - Details Når du er klar, trykk, Publish The API, under General - Details  ","version":"Next","tagName":"h2"},{"title":"Opprette en API Application​","type":1,"pageTitle":"Rolf - rolleregister","url":"/docs/datadeling/teknisk-plattform/api/rolf-api#opprette-en-api-application","content":" .::.TODO ","version":"Next","tagName":"h2"},{"title":"Gravitee","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/gravitee","content":"","keywords":"","version":"Next"},{"title":"Hva er Gravitee?​","type":1,"pageTitle":"Gravitee","url":"/docs/datadeling/teknisk-plattform/gravitee#hva-er-gravitee","content":" Gravitee er en open source plattform for å håndtere dine API. Den inneholder brukergrensesnitt som kan brukes av både datatilbydere og konsumenter, og endepunt for integrasjoner. Gravitee var det produktet som var best egnet til å dekke IntArk sine behov for en enklere og bedre datadeling.  Gravitee kan deles i to komponenter: API manager er brukergrensesnittet der institusjonen forvalter API og tilganger til data, mens API gateway håndterer tilgangskontrollen til API. Alle tjenester må hente data via API gateway.  Brukergrensesnittet til Gravitee kan igjen deles i to komponenter:  En API-katalog som gir oversikt over alle API-er. Du kan her sette opp applikasjoner som kan abonnere på disse. En administrasjonsside hvor du setter opp og kan overvåke dine API. Du må ha riktige rettigheter i Gravitee for å få tilgang til denne siden.  ","version":"Next","tagName":"h2"},{"title":"Gravitee som API manager​","type":1,"pageTitle":"Gravitee","url":"/docs/datadeling/teknisk-plattform/gravitee#gravitee-som-api-manager","content":" Gravitee sin API manager er brukergrensesnittet der du administrerer både dine API og dine tilganger til andres API. Som datatilbyder setter du opp ditt API i Gravitee. Når dette er gjort, blir ditt API publisert i en API-katalog. Som konsument kan du da lete etter API og søke om tilgang til det. Hvis datatilbyder godkjenner din søknad, vil du kunne hente ut dataene.  Noen funksjoner Gravitee sin API manager gir deg:  Datatilbydere kan publisere sine APIDatatilbydere kan sette opp egne innstillinger for sine API, for eksempel cachingDatatilbydere kan behandle søknader om tilgang til sine dataDatatilbydere får oversikt over hvem som har tilgang til hvilke av sine dataDatatilbydere kan se aktiviteten til sitt API, for eksempel hvem som belaster det mest, og på hvilke tidspunktDatatilbydere kan avslutte en konsuments tilgang, for eksempel ved misbrukKonsumenter kan se tilgjengelige API i institusjonens API-katalogKonsumenter kan se dokumentasjonen til et APIKonsumenter kan søke om tilgang til data i et APIKonsumenter kan, etter godkjent tilgang, hente ut en API-nøkkel for å hente ut dataeneKonsumenter kan få oversikt over sin aktivitet hos de ulike API-ene, for eksempel på hvilke tidspunkt det ble sendt feilmeldinger  ","version":"Next","tagName":"h2"},{"title":"Gravitee som API gateway​","type":1,"pageTitle":"Gravitee","url":"/docs/datadeling/teknisk-plattform/gravitee#gravitee-som-api-gateway","content":" Gravitee har egne komponenter som brukes som gateways. Disse styres av hva som er satt opp i API manager, men gateways kjører uavhengig av API manager. All datadeling må gå gjennom Gravitee sin API gateway.  Som oftest brukes samme gateway foran flere API. En API Gateway er rent teknisk en smart HTTP-proxy: Gateway mottar en request, sjekker om du har lov til å kontakte dette API-et og sender requesten videre til riktig API.  Gravitee sin API gateway har også annen funksjonalitet, for eksempel caching. Dette styres av hva du stiller inn i API manager. Selv om Gravitee sin API gateway støtter avanserte omskrivninger av data som overføres, så anbefaler vi at dette styres mest mulig av API-et selv, for å redusere avhengigheten til Gravitee.  En fordel med å bruke en API gateway, er at API-et selv kan overlate en del av tilgangskontrollen til Gravitee. Gravitee gis en bred tilgang til API-et, og så blir det API gateway som autentiserer hver konsument og sjekker at de skal ha tilgang, før gatewayen ber om data fra API-et på vegne av konsumenten.  API gateway har noen begrensninger i sin tilgangskontroll: den kan bare sjekke hva som er satt opp i API manager, og styrer primært etter path i RESTfulle API. Tjenester som trenger mer fingranulert tilgangskontroll må håndtere dette selv, men kan la API gateway håndtere autentiseringen og den mer grovkornete tilgangskontrollen.  ","version":"Next","tagName":"h2"},{"title":"Konsepter i Gravitee​","type":1,"pageTitle":"Gravitee","url":"/docs/datadeling/teknisk-plattform/gravitee#konsepter-i-gravitee","content":" Gravitee bruker noen konsepter som er nyttige å forklare:  Et API er en datatilbyders tjeneste.En Application er en konsuments tjeneste. Når du søker om tilgang til et API, må du registrere din application som tilgangen knyttes til.En Plan er et sett rettigheter og innstillinger (policies) for et API. For eksempel kan et API ha en plan som bare gir lesetilgang til enkelte data (styrt av path), og en annen plan som også gir skrivetilgang. En plan kan også sette på ekstra headers eller rate-limiting.  Et API kan ha en eller flere planer, og en applikasjon abonnerer på planer. En applikasjon kan abonnere på flere planer, fra ett eller flere API, som er det som styrer hva konsumenten får tilgang til.    ","version":"Next","tagName":"h2"},{"title":"Eksempel på bruk av Plans​","type":1,"pageTitle":"Gravitee","url":"/docs/datadeling/teknisk-plattform/gravitee#eksempel-på-bruk-av-plans","content":" En datatilbyder kan være Felles Studentsystem. Tjenesteier hos institusjonen registrerer FS som et API, og oppretter noen Plans:  Lesetilgang til EVULesetilgang til studenterLesetilgang til undervisningSkrivetilgang til personer  Tjenesteeier for en eksamenstjeneste ser dette, og søker om tilgang til planen som gir lesetilgang til studentene. Tjenesteeier for institusjonens IAM-løsning (IGA) ønsker tilgang til å oppdatere personer i FS, og søker om skrivetilgang til personer.  Hvis en ny tjeneste dukker opp, som trenger andre tilganger enn det som er satt opp, kan API-et utvides med flere planer. Hvis en ekstern leverandør ønsker tilgang til personopplysninger, må tjenesteeier vurdere om lesetilgangen til studenter gir tilgang til for mye data, og kan opprette en ny Plan som bare gir tilgang til akkurat de dataene leverandøren trenger. Det siste er riktignok avhengig av hvor godt API-et er designet.  ","version":"Next","tagName":"h3"},{"title":"Mer teknisk om Gravitee​","type":1,"pageTitle":"Gravitee","url":"/docs/datadeling/teknisk-plattform/gravitee#mer-teknisk-om-gravitee","content":" IntArk bruker open source versjonen av Gravitee API management. Vi kjører kun komponenten som heter API management, ikke Access Management eller Alert Engine. Vi leverer versjon 3 av gravitee.  Versjon 3 av Gravitee splitter opp administrasjonen av API-er og konsumenter på to forskjellige adresser. For å abonnere på et API bruker duapi-INSTITUSJON.intark.uh-it.no. For å opprette API må du først ha fått riktige rettigheter i din institusjons Gravitee, og deretter gå tilapi-mgmt-INSTITUSJON.intark.uh-it.no.  Ved hjelp av rolling upgrades vil Gravitee oppgraderes uten nedetid for API gateway. Det betyr at integrasjoner ikke vil merke noe til oppgraderingene, selv om brukergrensesnittet vil kunne trenge noe nedetid.  For redundans kjører vi 2 eller 3 av alle containere som Gravitee bruker.  Gravitee ble valgt som API manager og API gateway i IntArk fordi det er en av få systemer som støtter distribuert tilgangsstyring av API-er, slik at du kan bestemme hvem som skal kunne administrere og hat tilgang til ditt API, og ikke alle hos institusjonen. I tillegg er den open source og har mindre lock in enn andre produkter.  Det er per i dag ikke støtte for å sette opp lokale API gateways. Dette vil kunne komme i fremtiden, etter målbildet i referansearkitekturen som IntArk baserer seg på.  ","version":"Next","tagName":"h2"},{"title":"Se også​","type":1,"pageTitle":"Gravitee","url":"/docs/datadeling/teknisk-plattform/gravitee#se-også","content":" Gravitee sine egne nettsiderGravitee sin dokumentasjonIntArk sin definisjon av API manager og API gatewayVeileder for å registrere et APIVeileder for å opprette en PlanAlle veiledere ","version":"Next","tagName":"h2"},{"title":"Oversikt over den tekniske plattformen","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/oversikt","content":"","keywords":"","version":"Next"},{"title":"Lenker per institusjon​","type":1,"pageTitle":"Oversikt over den tekniske plattformen","url":"/docs/datadeling/teknisk-plattform/oversikt#lenker-per-institusjon","content":" Hver institusjon har sin egen instans av verktøyene, med egen URL. Adressene er like mellom institusjonene, bare med institusjonens forkortelse som forskjell.  Institusjon\tAPI manager\tAPI gateway\tMeldingskø\tSelvbetjening for meldingerNTNU\thttps://api-ntnu.intark.uh-it.no\thttps://gw-ntnu.intark.uh-it.no\tamqps://mq-ntnu.intark.uh-it.no\thttps://brom-ntnu.intark.uh-it.no Universitetet i Bergen\thttps://api-uib.intark.uh-it.no\thttps://gw-uib.intark.uh-it.no\tamqps://mq-uib.intark.uh-it.no\thttps://brom-uib.intark.uh-it.no Universitetet i Oslo\thttps://api-uio.intark.uh-it.no\thttps://gw-uio.intark.uh-it.no\tamqps://mq-uio.intark.uh-it.no\thttps://brom-uio.intark.uh-it.no Universitetet i Tromø\thttps://api-uit.intark.uh-it.no\thttps://gw-uit.intark.uh-it.no\tamqps://mq-uit.intark.uh-it.no\thttps://brom-uit.intark.uh-it.no OsloMet\thttps://api-oslomet.intark.uh-it.no\thttps://gw-oslomet.intark.uh-it.no\tamqps://mq-oslomet.intark.uh-it.no\thttps://brom-oslomet.intark.uh-it.no HiMolde\thttps://api-himolde.intark.uh-it.no\thttps://gw-himolde.intark.uh-it.no\tamqps://mq-himolde.intark.uh-it.no\thttps://brom-himolde.intark.uh-it.no  ","version":"Next","tagName":"h2"},{"title":"Gravitee​","type":1,"pageTitle":"Oversikt over den tekniske plattformen","url":"/docs/datadeling/teknisk-plattform/oversikt#gravitee","content":" API-katalog (brukergrensesnittet for å finne API og søke om tilgang) har adressen: https://api-INSTITUSJON.intark.uh-it.noAPI manager (brukergrensesnittet for å administrere API og tilganger) har adressen: https://api-mgmt-INSTITUSJON.intark.uh-it.noAPI gateway (der konsumentene henter data fra) har adressen:https://gw-INSTITUSJON.intark.uh-it.noHTTPS er alltid påkrevdHver institusjon er isolert fra hverandre. Trenger du data fra en annen institusjon må du søke om tilgang i deres API manager, og koble deg til deres API gateway.  ","version":"Next","tagName":"h2"},{"title":"Selvbetjeningsportalen for RabbitMQ​","type":1,"pageTitle":"Oversikt over den tekniske plattformen","url":"/docs/datadeling/teknisk-plattform/oversikt#selvbetjeningsportalen-for-rabbitmq","content":" Brukergrensesnittet har adressen: https://brom-INSTANS.intark.uh-it.noSelvbetjeningsportalen administrerer RabbitMQ for deg. Applikasjoner snakker med RabbitMQ direkte.  ","version":"Next","tagName":"h2"},{"title":"RabbitMQ​","type":1,"pageTitle":"Oversikt over den tekniske plattformen","url":"/docs/datadeling/teknisk-plattform/oversikt#rabbitmq","content":" Protokoll: AMQPS (AMQP med kryptering)Port: 5671TLS med SNI er påkrevdMeldingskøene er tilgjengelig på adressen: mq-INSTANS.intark.uh-it.noBrukergrensesnittet har adressenhttps://mg-mgmt-INSTITUSJON.apps.CLUSTERFARGE.intark.uh-it.no, derCLUSTERFARGE varierer, og kan for eksempel være &quot;green&quot; eller &quot;blue&quot;. Instansen bytter cluster ved oppgraderinger. Du anbefales å heller bruke selvbetjeningsportalen.  ","version":"Next","tagName":"h2"},{"title":"Annet​","type":1,"pageTitle":"Oversikt over den tekniske plattformen","url":"/docs/datadeling/teknisk-plattform/oversikt#annet","content":" Teknisk plattform kjører i NREC. For IP-detaljer, se de tekniske detaljene om IntArk-plattformen, og NREC sin oversikt over subnett. ","version":"Next","tagName":"h2"},{"title":"Prosessene for teknisk plattform","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/prosessene","content":"","keywords":"","version":"Next"},{"title":"Prosessene​","type":1,"pageTitle":"Prosessene for teknisk plattform","url":"/docs/datadeling/teknisk-plattform/prosessene#prosessene","content":" Use case: IAM-prosjektet skal sette opp integrasjon mellom FS og RI for HiMolde.  ","version":"Next","tagName":"h2"},{"title":"API manager​","type":1,"pageTitle":"Prosessene for teknisk plattform","url":"/docs/datadeling/teknisk-plattform/prosessene#api-manager","content":" Sette opp FS API:  Dataeier må sikre at det juridiske er på plass. Uninett kan bistå med maler og rådgiving.Registrere API Studieadministrasjonen (tjenesteeier/datatilbyder/dataeier/dataforvalter) får tilkoblingsinformasjon fra FS (Unit). Treng evt dialog om oppsett. Generelt: Dataeier har dialog med leverandør av tjenesten, og får tilkoblingsinformasjon fra tenesteleverandøren.Kven: Dataeier bør gjøre dette (kan delegeres internt), men USIT/Uninett kan bistå med det tekniske, så lenge dataeier har dialog med FS (Unit) om å godkjenne at vi får tilgang til passord etc. HiMolde sin Studieadm (dataeier) registrerer FS API i Gravitee. Generelt: Dataeier konfigurerer og publiserer API-et i Gravitee.Kven: Dataeier kan gjøre det (kan delegeres internt), men USIT/Uninett kan gjøre det på vegne.Kommentar: Vi ønsker at planer settes opp likest mulig mellom institusjonene, for å sikre at integrasjoner trenger minst mulig tilpasninger. Homogenisering av planer for kjente API, slik som FS. Kan enten gjøres ved bistand, eventuelt legge ut maler/templates for kjente API som institusjonen kan bruke, inkl. veileder. Registrere datakonsument (application) Tjenesteeier for RI hos HiMolde registrerer application i Gravitee. Hvem: Teknisk sett kan alle med Feide-konto logge på og registrere, om institusjonen har tillatt det. Kan trolig gjøres av RI selv, men det er praktiske ulemper med det. Er trolig også uryddig ansvar? Kunne hende at Uninett kunne registrert applikasjonen, som tjenesteleverandør av RI. Bør diskuteres. Hos UiO sier vi at det er tjenesteeier som skal registrere og eie applikasjonen, da det virker ryddigst. Fordeler og ulemper - gir td. tilgang til å feilsøke. Tjenesteeier for RI hos HiMolde ber om tilgang tli FS API Generelt: Tjenesteeier/datakonsument ber om tilgang til APIHvem: Dataeier (kan delegeres internt). Se punktet over, tilsvarende.Kommentar: Søknad bør ha god beskrivelse eller referanse. HiMolde sin Studieadm (dataeier) godkjenner tilgangen i Gravitee. Generelt:Hvem: Dette bør/må vere dataeier, i alle fall ansvaret. Juridisk sett. Ønsker ikke delegere, for å tvinge et eierskap til tilgangsoversikt.Kommentar: Avtaler må på plass først, og evt. ROS-analyse og andre formaliteter. TODO: Lenk til dokumentasjonen/veileder. HiMolde sender API-nøkkel til Uninett IAM. Generelt:Hvem: Hvis delegert til Uninett faller det bort, siden det går internt.Kommentar: Nøkkel må sendes på sikker måte.  (Mulig Gravitee Cockpit kan forenkle oppsettet av FS-API, men tilganger må fremdeles styres hos institusjonen)  ","version":"Next","tagName":"h3"},{"title":"RabbitMQ​","type":1,"pageTitle":"Prosessene for teknisk plattform","url":"/docs/datadeling/teknisk-plattform/prosessene#rabbitmq","content":" BROM er på samme måte som API manager.  Tjenesteeier må registrere datatilbyders system i BROM (kalles applikasjon i BROM) Fyll inn dokumentasjon etc(Dette påvirker RabbitMQ direkte - setter opp en vhost ferdig satt opp) Tjenesteeier/datatilbyder registrerer i BROM at systemet sitt publiserer notifikasjoner.Delegere tilgang til application i BROM til teknikere, så de kan hente hemmeligheter(?) etc. og sette opp notifikasjonsutsendinger mot riktig punkt.Teknikere må sette opp tjenesten til å koble til rabbitmqKonsumenter må opprette sin applikasjon i BROMKonsumenter må abonnere (søke) på applikasjonen til datatilbyder (fra punkt 1)Tjenesteeier må akseptere abonnementet til konsument, i BROM. (Dette setter opp overføringen fra datatilbyder til konsument) Konsument henter ut tilkoblingsdetaljer i BROM for applikasjonstilgangen Må sendes på sikker måte.  BROM bruker dataporten-grupper for tilgang (ad hoc). Ikke så optimalt.  Bør trolig ikke gi noen tilgang til RabbitMQ direkte. Bruk BROM. Tvinger folk til riktig oppsett. ","version":"Next","tagName":"h3"},{"title":"Infrastrukturen til IntArks tekniske plattform","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/infrastruktur","content":"","keywords":"","version":"Next"},{"title":"OKD OpenShift Kubernetes​","type":1,"pageTitle":"Infrastrukturen til IntArks tekniske plattform","url":"/docs/datadeling/teknisk-plattform/infrastruktur#okd-openshift-kubernetes","content":" OKD er &quot;The Community Distribution of Kubernetes that powersRed Hat OpenShift&quot;, og er upstream-versjonen av OpenShift. Det blir i dagligtale ofte omtalt som OpenShift.  IntArk-plattformen har egne clustre som kjører på NREC i osl-sonen. De er installert med ovs-multitenant SDN plugin, og hvert prosjekt (namespace) er nettverksmessig isolert.  Hver institusjon som bruker IntArk-plattformen har hvert sitt prosjekt hvor Gravitee, RabbitMQ og BROM kjører.  Oppgraderinger av OKD er basert på blue-green-metodikk. Det vil si at oppgraderinger skjer ved å installere nytt cluster med nyeste versjon av alle komponenter, og deretter flytte applikasjonene fra et cluster til et annet. Dette betyr at alle tjenester vil bytte IP-adresse ved oppgraderinger.  ","version":"Next","tagName":"h3"},{"title":"Lastbalanserer​","type":1,"pageTitle":"Infrastrukturen til IntArks tekniske plattform","url":"/docs/datadeling/teknisk-plattform/infrastruktur#lastbalanserer","content":" Det står en lastbalanserer i forkant som sender trafikk til riktig cluster. Denne har samme IP-adresse for alle, og bruker Server Name Indication (SNI) for å route trafikken til riktig sted. I web-verdenen har dette vært standard lenge og man behøver vanligvis ikke tenke på dette. Når man skal koble til en meldingskø må man derimot ofte spesifisere at man skal bruke SNI.    ","version":"Next","tagName":"h3"},{"title":"IP-ranges​","type":1,"pageTitle":"Infrastrukturen til IntArks tekniske plattform","url":"/docs/datadeling/teknisk-plattform/infrastruktur#ip-ranges","content":" IntArk sin tekniske plattform kjører i regionen osl til NREC. Hvis du ønsker å lage brannmurregler som ikke trenger hyppige oppdateringer anbefaler vi å åpne for alle subnettene til NREC. Se NREC sin oversikt hvilke nettverk de bruker.  Vi anbefaler ikke å sperre ned til spesifikke IP-adresser, fordi:  IntArk-installasjonene bytter cluster ved oppgraderingerTjenester kan bytte IP-adresseCluster utvides fortløpende med nye servere  Ulempen ved å åpne for alle subnettene til NREC, eller til et spesifikt cluster, er at de deles av andre institusjoner. Hvis du har API med strenge krav til brannmurregler anbefaler vi at du kjører dette via en http-proxy-server som krever brukernavn og passord. ","version":"Next","tagName":"h3"},{"title":"RabbitMQ","type":0,"sectionRef":"#","url":"/docs/datadeling/teknisk-plattform/rabbitmq","content":"","keywords":"","version":"Next"},{"title":"Kom i gang​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#kom-i-gang","content":" For de utålmodige:  Bruk Selvbetjeningsportalen for RabbitMQ for å sette opp meldingshåndteringen for din tjeneste.Hent ut tilkoblingsdetaljer for din tjeneste fra selvbetjeningsportalen. Bruk dette i din tjeneste for å både publisere og motta meldinger.  Anbefalt meldingsprotokoll: AMQP 0.9.1 på port 5671 (TLS).  Se kode-eksempler:  Hvordan sende notifikasjoner (datatilbyder): publisering_simpel.pyHvordan motta notifikasjoner (konsument): konsument_simpel.py  ","version":"Next","tagName":"h2"},{"title":"Hva er RabbitMQ?​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#hva-er-rabbitmq","content":" RabbitMQ er en tjeneste for å håndtere meldinger og meldingskøer. Systemet ble valgt i IntArk fordi det følger IntArk sine integrasjonsprinsipper, spesielt med god støtte for åpne standarder i stedet for sine egne, proprietære løsninger.  De fleste trenger ikke tilgang til RabbitMQ direkte, men bruker det viaSelvbetjeningsportalen for RabbitMQ. RabbitMQ krever en del teknisk innsikt for å brukes riktig.  Datatilbydere kan sende inn meldinger fra sin tjeneste til RabbitMQ. RabbitMQ tar seg av å fordele disse meldingene videre til alle konsumenter som abonnerer på meldingene. Datatilbyder trenger da ikke å måtte forholde seg til hvor mange konsumenter det er, eller for eksempel å måtte sende ut meldinger på nytt fordi en konsument har mistet sin melding. Alt dette håndteres av RabbitMQ.    Vi bruker protokollen AMQP for notifikasjoner, men RabbitMQ støtter også andre protokoller for meldingsutveksling.  RabbitMQ er primært satt opp for å støtte integrasjonsmønsterethendelsesbasert provisjonering, med notifikasjoner (tynne meldinger), men kan også brukes for andre typer meldinger og integrasjoner.  ","version":"Next","tagName":"h2"},{"title":"Hvordan bruker jeg RabbitMQ?​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#hvordan-bruker-jeg-rabbitmq","content":" Vi anbefaler å bruke Selvbetjeningsportalen for RabbitMQ heller enn å bruke RabbitMQ direkte. RabbitMQ krever god teknisk innsikt, så vi har utviklet et eget grensesnitt i IntArk for å gjøre forvaltningen av meldinger mye enklere.  RabbitMQ har et eget grensesnitt, som primært brukes av teknikere og driftere. Se oversikt over teknisk plattform for URL. Hver tjeneste får påloggingsdetaljer til RabbitMQ, som er tilgjengelig i selvbetjeningsportalen. I RabbitMQ kan du blant annet se aktiviteten for dine køer, sende og hente ut meldinger, og gjøre mer avanserte endringer på oppsettet av meldingskøer og exchanges.  RabbitMQ gir deg et kraftig verktøy, med mange muligheter og innstillinger. Dette øker også sjansen for å sette opp meldingshåndteringen ulikt for tjenester. Selvbetjeningsportalen sikrer at oppsettet blir mer standardisert mellom tjenestene.  ","version":"Next","tagName":"h2"},{"title":"Tekniske detaljer​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#tekniske-detaljer","content":" Litt mer tekniske detaljer om hva vi bruker i RabbitMQ. Selvbetjeningsportalen håndterer mye av dette for deg, så du ikke skal kunne ha dyp innsikt i dette.  Kort om noen begreper: En tjeneste publiserer sine meldinger i en exchange, som du kan se på som et postmottak. RabbitMQ ser på hvem som skal ha hvilke av meldinger fra exchangen, og kopierer disse over til riktige meldingskøer. Tjenester som abonnerer på meldinger henter disse fra en meldingskø. Når en tjeneste henter ut en melding, må den &quot;ack&quot;-es for å slettes fra meldingskøen.  ","version":"Next","tagName":"h2"},{"title":"AMQP​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#amqp","content":" I IntArk bruker vi primært meldingsprotokollen AMQP 0.9.1. Se RabbitMQ sin beskrivelse av begrepene for mer utdypende informasjon.  ","version":"Next","tagName":"h3"},{"title":"Vhosts​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#vhosts","content":" En virtuell host, eller vhost, er RabbitMQ sin måte å skille prosjekt eller tjenester fra hverandre. Alle entiteter - kø, binding og exchange - vil ligge ién vhost.  I IntArk setter vi opp hver tjeneste i sin egen vhost, for å isolere dem fra andre tjenester. Når noen blir gitt tilgang til meldinger fra en tjeneste, blir disse kopiert mellom vhosts. Selvbetjeningsportalen tar seg av dette.  ","version":"Next","tagName":"h3"},{"title":"Brukere​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#brukere","content":" For å skrive inn til en exchange og lese fra meldingskøen, trenger du enbruker med de rette tilgangene. Hver bruker har tilgang til sin vhost.  Du kan hente ut påloggingsdetaljer for din tjeneste fra selvbetjeningsportalen, så du kan logge på i RabbitMQ og se hva du har tilgang til.  ","version":"Next","tagName":"h3"},{"title":"Exchange​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#exchange","content":" En exchange er et &quot;postkontor&quot; som en avsender sender notifikasjoner til. Notifikasjonene distribueres (routes) videre derfra, til de forskjelligekøene som vil ha den relevante notifikasjonen.  I IntArk har vi en exchange per tjeneste. Meldinger distribueres videre med metoden Topic Exchange.  ","version":"Next","tagName":"h3"},{"title":"Kø​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#kø","content":" En kø (queue) er én konsuments samling av meldinger, eller hvilke typer notifikasjonar den vil ha (se Binding). RabbitMQ videredistribuerer (router) de notifikasjonene køen vil ha. Konsumenten abonnerer da på denne køen.  ","version":"Next","tagName":"h3"},{"title":"Binding​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#binding","content":" Hver kø settes opp med hvilke typer notifikasjoner den vil ha - køen må være bundet (bound) til en exchange med en eller flere nøkler. For topic exchange, går knytningen mot topic.  Selvbetjeningsportalen setter opp bindings når søknader om tilganger blir akseptert.  ","version":"Next","tagName":"h3"},{"title":"Topic​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#topic","content":" Når topic exchange brukes for å distribuere (route) notifikasjoner fraexchange til riktig kø, må avsender markere hver notifikasjon med en message routing key (topic). RabbitMQ vil se på topic og videresende (route) notifikasjonen til de køene som har binding mot samme topic.  Strukturen til message routing key (topic):  kilde.type.objekt.hendelse   der:  kilde: Navnet til avsenderen, for eksempel &quot;cerebrum&quot;type: Typen melding, for eksempel &quot;event&quot;objekt: Vanligvis hva entitetstype notifikasjonen/hendelsen gjelder for, for eksempel &quot;account&quot;, &quot;person&quot;, &quot;group&quot; eller &quot;employee&quot;hendelse: Hva har skjedd, for eksempel &quot;add&quot;, &quot;delete&quot; eller &quot;modify&quot;  Datatilbyder skal vanligvis dokumentere hvilke verdier de bruker. Dette gjør det enklere for konsumenter å ignorere meldinger som ikke er relevante for de.  ","version":"Next","tagName":"h3"},{"title":"Om RabbitMQ​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#om-rabbitmq","content":" IntArk bruker RabbitMQ for å håndtere meldingskøer.  Hver applikasjon opprettet i selvbetjeningsportalen blir registrert som en bruker i RabbitMQ, som du også kan logge på med. Brukernavn og passord finner du i selvbetjeningsportalen. Ta kontakt hvis din institusjon trenger egne brukere med andre rettigheter.  RabbitMQ kjører som et cluster med 3 noder. Du må ta høyde for at en av nodene kan være nede. Det anbefales å bruke køer av typen Quorum i produksjon.  RabbitMQ har ingen direkte kobling med Gravitee, annet enn at de kjører på den samme infrastrukturen, og brukes av de samme datatilbydere og konsumenter. Dette er to helt uavhengige produkter, og blir blant annet oppgradert uavhengig av hverandre.  ","version":"Next","tagName":"h3"},{"title":"Notifikasjoner​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#notifikasjoner","content":" I IntArk bruker vi RabbitMQ primært for det vi kaller tynne meldinger, eller notifikasjoner. Notifikasjonene brukes primært til å informere om atnoe har skjedd med en bestemt entitet, men en konsument må selv spørre kildesystemet om mer detaljer. Dette brukes i integrasjonsmønsterethendelsesbasert provisjonering.  Datatilbyder må dokumentere sine notifikasjoner i sin institusjons API-katalog.  For nyutviklede system, bør du vurdere å bruke standariserte format, for eksempel CloudEvents.  For eksempel bruker Cerebrum og SAPUiO et notifikasjonsformat som er inspirert av SCIM sitt utkast til standard på et meldingsformat, der vi bruker versjonen med minimalt med informasjon. Et eksempel på hvordan ei melding vil se ut, omtrent:  { // token identifier (unik id for meldingen) &quot;jti&quot;: &quot;4d3559ec67504aaba65d40b0363faad8&quot;, // endringer &quot;eventUris&quot;: [&quot;urn:ietf:params:event:SCIM:create&quot;], // timestamp &quot;iat&quot;: 1458496404, // issuer &quot;iss&quot;: &quot;https://cerebrum-uio.uio.no&quot;, // audience (spreads/kontekst) - gjør det enklere å forkaste meldinger du ikke er interessert i &quot;aud&quot;: [&quot;AD_account&quot;, &quot;exchange_acc@uio.no&quot;, &quot;LDAP_account&quot;], // URL til entitet (GET) &quot;sub&quot;: &quot;https://cerebrum-ws.uio.no/v1/accounts/1234&quot;, // Parametre til event - her: hvilke attributter hos objektet som er påviret - gjør det enklere å forkaste meldinger du ikke er interessert i &quot;urn:ietf:params:event:SCIM:create&quot;: { &quot;attributes&quot;: [&quot;id&quot;, &quot;name&quot;, &quot;userName&quot;, &quot;password&quot;, &quot;emails&quot;] } }   Andre system, som FS og TP, bruker et format som er avledet fra JWT-standarden. Et eksempel på en notifikasjon fra FS om at en person er oppdatert (routing key er i dette tilfelle no.uio.fs.FS-prod.personer.update)  { &quot;sub&quot;: &quot;personer/56154&quot;, &quot;iss&quot;: &quot;FS-prod&quot;, &quot;iat&quot;: &quot;1582344412462&quot;, &quot;operation&quot;: &quot;update&quot;, &quot;jti&quot;: &quot;35380ac0-247d-44b3-9be3-2f2dded049ee&quot;, &quot;person_id&quot;: &quot;56154&quot; }   Det kan og være lurt å ta en avgjørelse om hvordan du skal referere til ressurser i kildesystem. For eksempel er vi bundet til et spesielt domene i dette tilfellet:  { &quot;sub&quot;: &quot;https://api-waygate.uio.no/eksempeltjeneste/5&quot; }   Mens følgende ikke er bundet til en spesifikk maskin:  { &quot;sub&quot;: &quot;/5&quot;, &quot;iss&quot;: &quot;eksempeltjeneste&quot; }   Det samme kan du oppnå med en mer formalisert URN:  { &quot;sub&quot;: &quot;urn:eksempeltjeneste:5&quot; }   I de to siste eksemplene har vi ikke inkludert informasjon om hvor en ressurs er lokalisert. Når du henter ressursen må du da velge å slå opp maskinnavnet. Erfaringsmessig letter dette arbeidet med å flytte tjenester mellom forskjellige miljø.  ","version":"Next","tagName":"h2"},{"title":"Se også​","type":1,"pageTitle":"RabbitMQ","url":"/docs/datadeling/teknisk-plattform/rabbitmq#se-også","content":" Selvbetjeningsportalen for RabbitMQ - vi anbefaler at du bruker denne, og ikke RabbitMQ direkte.RabbitMQ sine egne nettsiderRabbitMQ sine tutorials for publisering og konsumering av meldingerRabbitMQ sin beskrivelse av begrepene i AMQPBeskrivelse av meldingsprotokollen AMQP 0.9.1Integrasjonsmønsteret hendelsebasert provisjonering ","version":"Next","tagName":"h2"},{"title":"Unntakshåndtering","type":0,"sectionRef":"#","url":"/docs/datadeling/unntak","content":"","keywords":"","version":"Next"},{"title":"Unntak må dokumenteres og begrunnes​","type":1,"pageTitle":"Unntakshåndtering","url":"/docs/datadeling/unntak#unntak-må-dokumenteres-og-begrunnes","content":" Fellestjenesten anbefaler at datatilbyder, eller tjenesteier, er ansvarlig for unntak. Disse skal begrunnes og dokumenteres. Sikt må informeres om slike unntak, for å kunne vurdere videre tilpasninger av fellestejenesten.  ","version":"Next","tagName":"h2"},{"title":"Typiske unntakssituasjoner​","type":1,"pageTitle":"Unntakshåndtering","url":"/docs/datadeling/unntak#typiske-unntakssituasjoner","content":" Det vil være situasjoner hvor det ikke synes hensiktsmessig å integrere gjennom integrasjonsarkitekturens komponenter. Eksempler på unntak:  Der en systemeier overfører data mellom egne tjenester fordi dette er effektivt eller en ferdig levert integrasjon fra leverandør. Eksempelvis fra fagsystem til datavarehus. Der tjenestene er laget for å hente fra gitte veletablerte katalogtjenester, som LDAP, AD eller Azure, og ikke lar seg mate med data gjennom API. Der systemeier integrerer punkt mot punkt med en tredjepart der overføringer er leverandørtilpasset eller på et spesialisert format. Eksempelsiv AltInn eller Lånekassen. ","version":"Next","tagName":"h2"},{"title":"Veiledere i IntArk","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/","content":"","keywords":"","version":"Next"},{"title":"API manager​","type":1,"pageTitle":"Veiledere i IntArk","url":"/docs/datadeling/veiledere/#api-manager","content":" Utvalg av veiledere for IntArks API manager, Gravitee.  Få tilgang til et API.Hvordan du som konsument kan søke om tilgang til et API i Gravitee. Registrere et enkelt API.Veiledning for hvordan man registrerer et enkelt API i Gravitee. I tillegg til å registrere API må man opprette en eller flere planer. Forvaltning av tilganger til API.  ","version":"Next","tagName":"h2"},{"title":"Meldingskø​","type":1,"pageTitle":"Veiledere i IntArk","url":"/docs/datadeling/veiledere/#meldingskø","content":" Utvalg av veiledere for IntArks meldingskø, RabbitMQ.  Registrer din tjeneste for meldingsutsendingHvordan du registrerer din tjeneste i Selvbetjeningsportalen for RabbitMQ for meldingsutsending.  ","version":"Next","tagName":"h2"},{"title":"Andre veiledere​","type":1,"pageTitle":"Veiledere i IntArk","url":"/docs/datadeling/veiledere/#andre-veiledere","content":" Anskaffelse av IT-tjenester ","version":"Next","tagName":"h2"},{"title":"Veileder for anskaffelser av IT-tjenester","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/annet/anskaffelse/","content":"","keywords":"","version":"Next"},{"title":"Hvorfor følge fellestjenesten sine anbefalinger?​","type":1,"pageTitle":"Veileder for anskaffelser av IT-tjenester","url":"/docs/datadeling/veiledere/annet/anskaffelse/#hvorfor-følge-fellestjenesten-sine-anbefalinger","content":" Med fellestjenesten for Datadeling prøver vi å gjøre det enklere å dele data, men også heve kvaliteten på datadelingen. Et av fokusområdene er å gjøre integrasjoner endringsdyktige. IT-tjenester som kjøpes inn påvirker også institusjonens evne til å dele data.  Ved å kjøpe inn en billig IT-tjenester som ikke kan dele sine data, mister du muligheter. Vil besparelsen ved å kjøpe en dyrere IT-tjeneste veie opp for mulighetene og gevinstene ved gjenbruk av dataene? Ved å kjøpe en IT-tjeneste som bare kan integreres med andre tjenester fra samme leverandør, låser du deg fort til å bruke leverandøren sine produkter - en såkalt lock in-situasjon. Dette går spesielt utover institusjonens endringsdyktighet - hva blir kostnaden av å innføre en ny tjeneste, når du ikke kan gjenbruke data, eller må samtidig bytte ut mange andre tjenester?  Anskaffede IT-tjenester må også kunne integreres og samarbeide med andre IT-tjenester. Vi prøver hjelpe med dette.  ","version":"Next","tagName":"h2"},{"title":"Hva bør følges?​","type":1,"pageTitle":"Veileder for anskaffelser av IT-tjenester","url":"/docs/datadeling/veiledere/annet/anskaffelse/#hva-bør-følges","content":" Alle IT-tjenester med data vil potensielt kunne være nyttig å integrere med. Anbefalingene fra fellestjenesten bør derfor vektlegges selv om IT-tjenesten ikke har behov for integrasjoner fra starten av.  Integrasjonsprinsippene er overordnede føringer som ligger til grunn for fellestjenesten. Disse er nyttige å kjenne til, selv om de er mindre konkrete. Referansearkitekturen for deling av data i kunnskapssektoren er et målbilde for hvor vi ønsker at sektoren skal være om noen år. Styringsreglene for fellestjenesten er hva institusjonen må følge for å bruke fellestjenesten. Også anskaffede IT-tjenester må følge disse.  En utfordring er at det er få konkrete krav, men elementer som bør med i helhetsvurderinger. For eksempel er et krav at IT-tjenesten må tilby data via et API med et åpent grensesnitt, men hvor godt er API-et? Anbefalte gode praksiser inneholder også anbefalinger som kan tas med.  Krav og behov fra fellestjenesten bør vektlegges i anskaffelser likt med mye annet. Bare husk på kravet til sektoren om mer digitalisering, som igjen setter høyere krav til IT-tjenesters evne til datadeling.  ","version":"Next","tagName":"h2"},{"title":"Hvordan kommer jeg i gang som innkjøper?​","type":1,"pageTitle":"Veileder for anskaffelser av IT-tjenester","url":"/docs/datadeling/veiledere/annet/anskaffelse/#hvordan-kommer-jeg-i-gang-som-innkjøper","content":" Se oversikt over vurderinger ved anskaffelse av IT-tjenester og -systemer som du kan ta med dei i din anskaffelse. Dette gir deg ikke konkrete svar, men betrakninger fra tidligere erfaringer.  Se også hjelpespørsmål ved anskaffelser som kan hjelpe deg i anskaffelsen, både i utlysninger og i evalueringer.  ","version":"Next","tagName":"h2"},{"title":"Mer informasjon​","type":1,"pageTitle":"Veileder for anskaffelser av IT-tjenester","url":"/docs/datadeling/veiledere/annet/anskaffelse/#mer-informasjon","content":" Hva er Fellestjenesten for Datadeling (IntArk)?Veileder for orden i eget hus (digir.no) ","version":"Next","tagName":"h2"},{"title":"Masterdata og verdikjeder","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/annet/anskaffelse/masterdata-verdikjeder","content":"Masterdata og verdikjeder Essensen i budskapet er at når man anskaffer et system, så må man tenke på at: Kanskje noen allerede har registrert data (om brukere f.eks.) og dette blir mer konsistent og enklere forvaltet (mht endringer i data) dersom disse dataene integreres, fremfor registreres på nytt i hvert system. Resultatet av prosesseringen av data gjort i dette systemet er en verdiskapning, men det kan gjøres ytterligere verdiskapning ved å bruke disse dataene til input i en ny prosess. Hvordan data kan tilgjengeliggjøres for andre er derfor viktig å ta i betraktning allerede ved anskaffelser av programvare.Valg av åpne format, datadrevne modeller og bransjestandard protokoller gjør at flere andre har mulighet til å bruke dine data som input uten en stor integrasjonskostnad.Bare datakilden som er autoritativ skal sende beskjeder om endringer til meldingskøen. Illustrasjonen under viser stikkord for prosessen med begrep man må tenke på i forbindelse med anskaffelser. Vi håper å komme tilbake med mer detaljerte oppskrifter etter hvert. Se også Veileder for orden i eget hus (digir.no).","keywords":"","version":"Next"},{"title":"Web Services for Dummies","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/annet/anskaffelse/webservicefordummies","content":"Web Services for Dummies Vi vet ikke hvilke tjenester vi trenger i fremtiden, men både endringstakten og kravene til digitalisering øker. Det er derfor viktig å tenke på fremtidige kostnader, dvs. at i ROS- og kost/nytte-analyser bør man legge inn et godt slingringsmonn for at IT-tjenesten skal ha endringsevne. Man skal kunne endre, sågar skifte ut, enhver programvare uten at dette utløser store kostnader, heller ikke i andre deler av virksomheten. Tidligere har vi gjort programvarevalg som har gjort bytte av programvare veldig kostbart, f.eks. programvare for arkiv, lønn, regnskap, integrasjon, og studentsystem. I noen IT-tjenester med mange integrasjoner knyttet til seg, har vi vært i en lock in situasjon (Synkroniseringseffekt). I praksis betyr dette at programvaren ikke kan skiftes ut fordi kostnadene ved skiftet blir for store. Illustrasjonen under viser hvordan programvaren BAS leverer data til åtte forskjellige konsumenter, d.v.s. mottagere av data. Hvis man byttet ut programvaren BAS, ville det utløse endringer, og dermed kostnader, i alle disse konsumentene. Og alle må skifte til samme tid. I realiteten har vi gjerne ikke åtte konsumenter, som i tegningen, men 50+. Hvis alle disse har egne spesialtilpassede uttrekk (datasett) kan ingenting gjenbrukes, og alt blir påvirket av et bytte. Hvis det derimot hadde vært et API mellom BAS og konsumentene, slik at hver konsument hentet dataene de trengte og selv tilpasset den til sitt format, kunne man endret eller skiftet ut hele BAS uten at dette skapte store endringer for noen av konsumentene. Så lenge API-et til ny og gammel BAS følger samme API. I praksis vil det alltids bli mindre endringer. For eksempel kunne det hende at nytt BAS ville måtte endre intern id for alle sine entiteter. Dette er likevel mye mindre kostbart å endre på, enn å måtte bytte ut hele integrasjonen. Mellom BAS (produsent/kildesystem) ser vi at det er kommet et API. Dette er tegnet inn med en hvit og en svart side. Den hvite siden, den konsumentene snakker med (de vet ikke om den svarte siden), behøver ikke endres. Den svarte siden kan hente eller levere data til flere kildesystemer. Hvilke kildesystemer som kommuniseres med behøver ikke konsumenten vite om. Heller ikke om den svarte siden benytter SQL, snakker med leverandørens egen (prorietære) WS, eller annet. Slik kan man sømløst og over en tidsperiode bytte ut BAS-programvaren, uten at dette medfører planlegging, prioritering og koordinering med konsumentene. Det er ikke alltid leverandørens WS tilbyr de data man ønsker seg, og opp mot store skyleverandører kan det være umulig å få dette implementert som en liten kunde. Derfor er det mange vurderinger som må gjøres mht. API når IT-tjenester anskaffes. Den aller viktigste er: Skal man bygge, eller ha muligheten til å bygge, en egen WS? Dette virker kanskje som en uoverkommelig stor oppgave, men det finnes mange rammeverk i dag som gjør dette arbeidet veldig overkommelig. Det avhenger naturligvis om man bare skal tilby data, eller hvor rik funksjonalitet man ønsker å tilby. Man kan kombinere: Lage en selvutviklet WS for dataene mange konsumenter benytter, og benytte leverandørens for de få konsumentene med spesielle behov. Dette er vist i illustrasjonen under. Videre: Dersom IT-tjenesten kommer fra en leverandør med et WS API som tilfredsstiller de ønsker vi har til utforming, kan man vurdere noen andre muligheter: Kan man lisens- og utviklingsmessig beholde og endre leverandørens API, selv om man bytter ut leverandørens bakenforliggende programvare? Skal man vente med å bygge en egen WS til man er i en situasjon hvor man skal skifte bakenforliggende programvare, og da bygge den selvlagde slik at det på den hvite siden ser ut som leverandørens? Altså slik at konsumentene ikke merker at man skifter API?","keywords":"","version":"Next"},{"title":"Sanntidsoppdatering","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/annet/anskaffelse/sanntidsoppdatering","content":"Sanntidsoppdatering Meldingskøer kan benyttes til forskjellige formål, men i utgangspunktet skiller vi mellom tynne og tykke meldinger. Det vil si om innholdet i meldingen er informasjonsbærende, eller om innholdet i meldingen bare er en peker til der informasjonen er å finne. I IntArk har vi valgt å gå for tynne meldinger, slik at mange typer meldinger kan gå til samme kø. Granulert tilgangskontroll gjøres i WS. Alternativet (litt satt på spissen) er en kø per meldingstype, per konsument, noe som vil øke kompleksiteten. Akkurat som med WS, er det aspekter rundt sanntidsoppdatering og meldingskø man må ta i betraktning når man skal anskaffe eller integrere. Sanntidsoppdatering er ikke synonymt med meldingskø. Begrepet brukes om andre teknologier (som RSS, SOAP og Web push), om tjenester som deler datalager eller benytter katalogtjenester i bakgrunn.Det er på ingen måte selvsagt at programvare man anskaffer kommer med støtte for verken å sende eller hente meldinger til MQ. Dessuten er det vanligste (når funksjonaliteten tilbys) at systemet sender tykke meldinger.For å selv bygge noe som sender ut meldinger ved endring, bør applikasjonen være hendelsesbasert. Dvs. at data sendes (fra bruker/presentasjonslag) gjennom standardiserte API som gjør at man har kontroll på akkurat hvor i databasen/datalageret endring av data skjer henger sammen med hverandre, og ikke må gjøres med logiske valideringer (gjetninger) i database/-lager ut fra tidspunkt eller annet.Sanntidsoppdatering av skytjenester skjer som oftest gjennom at man må dytte data til dem gjennom deres WS. Dvs. at konsumentens MQ-klient (som oftest må være egenutviklet) må hente meldingen fra MQ og poste den til skytjenesten i stedet for å poste til eget API eller database. Vi har laget meldingskøagenter for Linux og Windows. Dette er kode som i stor grad kan gjenbrukes, slik at det å utvikle en egen meldingskøagent er en overkommelig oppgave. Videre er det mulig å lage tjenester som konverterer fra det leverandøren tilbyr (f.eks. RSS) til vår meldingskø. Videre kan det være hindre som i hvilken grad det i utgangspunktet tilbys, om hvor enkelt det er å hente meldinger, og lisensmessige aspekter for i hvilken grad man har lov til å lage egne integrasjoner. For skytjenester er man ofte helt begrenset til data tilbudt i deres standard API.","keywords":"","version":"Next"},{"title":"Vurderinger ved anskaffelse av IT-tjenester og -systemer","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/annet/anskaffelse/vurderinger","content":"","keywords":"","version":"Next"},{"title":"Moderne og gammeldags programvare​","type":1,"pageTitle":"Vurderinger ved anskaffelse av IT-tjenester og -systemer","url":"/docs/datadeling/veiledere/annet/anskaffelse/vurderinger#moderne-og-gammeldags-programvare","content":" Det viktigste først: Når du kjøper ferdig programvare, såkalt hyllevare, må du ikke falle for fristelsen til å kjøpe tjenester for å tilpasse programvaren til organisasjonen. Dette er som oftest det dyreste valget, siden tilpasninger av hyllevare ofte gire store merkostnader. Tilpass heller organisasjonens prosesser etter programvaren, med mindre det er del av primærvirksomheten eller et strategisk valg å følge egne prosesser. For administrative prosesser er det ofte bedre å tilpasse seg tjenesten, mens det innen forskning og utdanning er en vanskeligere vurdering.  Når du som systemeier anskaffer programvare, så er det gjerne programvare en bruker, et menneske, skal sitte å jobbe i. Med integrasjonsøyne er det da i hovedsak fire forhold som må vurderes:  ","version":"Next","tagName":"h2"},{"title":"1. Provisjonering​","type":1,"pageTitle":"Vurderinger ved anskaffelse av IT-tjenester og -systemer","url":"/docs/datadeling/veiledere/annet/anskaffelse/vurderinger#1-provisjonering","content":" Det er vanlig at tjenester trengerprovisjonering av informasjon, som brukerkontoer. Nesten alle kjøpte webapplikasjoner med brukerinnlogging havner i denne kategorien.  Eldre typer teknologi benytter gjerne katalogtjenester, som AD eller LDAP. Dette er ofte rimelig å implementere, siden tjenesten har dette ferdig satt opp, og katalogen er allerede på plass. Ulempene er blant annet at du er tvungen til å bruke de dataene som er tilgjengelige i katalogen, og det er vanskeligere å ha oversikt over hvem som har tilgang. Det er heller ikke så mange begrensninger på hvem som kan se informasjonen i katalogen - spesielt i AD har alle tilgang til alle data - så du ønsker ikke eksponere beskyttelsesverdige data i katalogen.  Vi er opptatt av om tjenesten kan oppdateres i sanntid eller ikke. Her snakker vi da om den kan få eller avgi informasjon fra/til andre IT-tjenester kontinuerlig eller periodisk (for eksempel en gang i døgnet). Provisjonering kan også skje manuelt ved at man taster inn navn, adresse eller lignende.  Programvare som bygger en brukerkonto/-profil under første innlogging kalles &quot;Just in Time provisjonering&quot; (JIT). Disse henter ofte data om brukeren gjennom Feide-påloggingen (OpenID Connect (OIDC) eller SAML), men kan også få utfyllende detaljer fra et API i påloggingsprosessen (for eksempel ved bruk av OAuth).  Integrasjonsmessig kan JIT virke fordelaktig over vanlig provisjonering, men også her er det fallgruver. JIT-tjenester bygger gjerne en tynn profil, og forventer at brukeren registerer resten av sine data selv.  ","version":"Next","tagName":"h3"},{"title":"2. Integrasjonsteknologi​","type":1,"pageTitle":"Vurderinger ved anskaffelse av IT-tjenester og -systemer","url":"/docs/datadeling/veiledere/annet/anskaffelse/vurderinger#2-integrasjonsteknologi","content":" Filoverføringer og spørringer direkte mot databasen (SQL) regnes som gammeldags (&quot;legacy&quot;), men også integrasjon via Web Services (WS) kan gjøres på avleggs måter. Vanligvis foretrekker vi en retning innen Web services som kalles RESTful. Denne retningen har sin styrke i å være intuitiv, man kan lete seg frem til data man trenger, og behøver liten eller ingen kunnskap om kommandoord eller argumenter. Se design av APIfor mer detaljer.  I dag er det ofte REST som er bransjestandarden i bruk av WS, da den er enkel å bruke. Eldre WS-varianter er SOAP, men den er lite intuitiv, ofte proprietær, har høy inngangsterskel og liten gjenbruksverdi, og er derfor ikke anbefalt å bruke mellom tjenester.  Det kommer også nye WS-varianter, for eksempel GraphQL og gRPC, som kan ha sine styrker og fordeler. De må likevel vurderes før de akspeteres - er de utbredte nok til å være en ny bransjestandard, eller er det fare for lock in? Mister du noen av fordelen som den eldre varianten har? Blir det enklere eller mer komplisert å integrere? Ofte ønsker vi å prioritere at det er enkelt å integrere mot WS-varianten, enn at WS-varianten er rask og effektiv.  Heller ikke REST er uten ulemper, og dette har vi samlet i et eget dokument.  Sanntidsoppdateringer er i dag ikke godt nok støttet i WS i seg selv, så i fellestjenesten for datadeling tilbyr vi å bruke en meldingskø (MQ) for dette. Dette håndteres då uavhengig av API-et. Det kan godt komme sanntidsoppdateringer gjennom WS i fremtiden som kan dekke bruksmønster godt nok.  ","version":"Next","tagName":"h3"},{"title":"3. Galvanisk skille​","type":1,"pageTitle":"Vurderinger ved anskaffelse av IT-tjenester og -systemer","url":"/docs/datadeling/veiledere/annet/anskaffelse/vurderinger#3-galvanisk-skille","content":" Et tredje kriterie man kan rette seg etter for å bedømme hvor moderne en IT-tjeneste/programvare er, er om man gjør innlogging i operativsystemet, eller i applikasjonen. Om operativsystemet vet hvem du er eller ikke, kaller vi et galvanisk skille.  Forenklet sagt: Styr unna tjenester som gjør innlogging i operativsystemet.  Les mer om galvanisk skille.  ","version":"Next","tagName":"h3"},{"title":"4. Trelagsarkitektur​","type":1,"pageTitle":"Vurderinger ved anskaffelse av IT-tjenester og -systemer","url":"/docs/datadeling/veiledere/annet/anskaffelse/vurderinger#4-trelagsarkitektur","content":" Trelagsarkitektur innebærer at man kan benytte (helst valgfri) funksjonalitet fra en IT-tjeneste i en annen. Som regel er det ønskelig med API mellom lagene/funksjonaliteten.  Et eksempel er at en portal for studenter kan hente data fra ett API for å hente hvilke emner studenten tar, og ett API for å vise dagens forelesninger. I tillegg kan portalen gi mulighet for å reservere et kollokvierom. Alt dette kan gjøres direkte i portalen, uten å måtte gå innom andre tjenester/nettsider, fordi portalen kan gjøre dette gjennom de andre tjenestenes API.  Les mer om trelagsarkitektur.  ","version":"Next","tagName":"h3"},{"title":"Oppsummering​","type":1,"pageTitle":"Vurderinger ved anskaffelse av IT-tjenester og -systemer","url":"/docs/datadeling/veiledere/annet/anskaffelse/vurderinger#oppsummering","content":" Kort oppsummert gir dette en matrise med noen stikkord som kan si oss noe om hvor moderne en applikasjon er, spesielt med henhold til om den er tiltenkt store brukermasser med homogene behov. De fleste applikasjoner har trekk fra både raden 'Moderne' og raden 'Gammeldags'.  \tProvisjonert\tAPI\tAutentisering\tApplikasjons-oppbygningModerne\tSanntidsoppdatering\tREST og meldingskø\tSAML, OIDC, Oauth\tLøst koblet trelagsarkitektur (med hendelser) Gammeldags\tBatch (eller manuell)\tSOAP, filoverføring, systembruker, SQL, RSS, &quot;REST-rpc&quot;\tKatalogtjenester, som AD og LDAP, til autentisering og/eller autorisasjon\tTolagsarkitektur, eller programvare med tette koblinger  ","version":"Next","tagName":"h3"},{"title":"Web Services​","type":1,"pageTitle":"Vurderinger ved anskaffelse av IT-tjenester og -systemer","url":"/docs/datadeling/veiledere/annet/anskaffelse/vurderinger#web-services","content":" Web Services (WS) er en type API (integrasjonsgrensesnitt). Det er noe programvare benytter for å sende informasjon mellom seg, og ikke direkte mellom bruker og programvare. Vi som driver med integrasjonsarkitektur liker altså WS. WS er de facto standard for utveksling av informasjon på internett i dag.  Web service er riktignok en sekkebetegnelse. Når man vurderer programvare er det ikke nok at leverandøren forsikrer om at programvaren har web services. Det kan ennå være mange hindringer i veien: Lisenser, dokumentasjon, spesialkompetanse, proprietære formater osv. Kan API-et faktisk brukes av konsumenter?  Les mer om Web Services  ","version":"Next","tagName":"h2"},{"title":"Sanntidsoppdatering​","type":1,"pageTitle":"Vurderinger ved anskaffelse av IT-tjenester og -systemer","url":"/docs/datadeling/veiledere/annet/anskaffelse/vurderinger#sanntidsoppdatering","content":" Det finnes flere sanntidsteknologier, men den vi har valgt i fellestjenesten for datadeling (IntArk) bruker Meldingskø (MQ). Illustrasjonen under viser informasjonsflyten. Teknisk implementasjon krever langt flere komponenter.    Hver gang det skjer en endring i kildedataene hos datatilbyder (produsent), sender datatilbyder en notifikasjon til meldingskøen, men lenke til informasjonen som har blitt endret (vanligvis tjenestens API). Meldingskøen tar seg av å sende denne notifikasjonen videre til alle konsumenter som er interesserte. Konsumenten leser notifikasjonen, vurderer om det er relevant, henter data fra API-et, og gjør nødvendige oppdateringer hos seg.  Med meldingskø kan mange konsumenter få den samme meldingen. Alle som har en meldingskø kan få oppdatert sine data umiddelbart, når data endres i datakilden. Meldingskøen holder (for hver kø) på meldingen til køens konsument har hentet meldingen. Verdien til meldingskøer er altså lett å se: Alle IT-tjenester (som benytter tjenesten) vil ha konsistente data umiddelbart.  Les mer om sanntidsoppdatering  ","version":"Next","tagName":"h2"},{"title":"Masterdata, delte data og verdikjeder​","type":1,"pageTitle":"Vurderinger ved anskaffelse av IT-tjenester og -systemer","url":"/docs/datadeling/veiledere/annet/anskaffelse/vurderinger#masterdata-delte-data-og-verdikjeder","content":" Et spørsmål som reises når man forteller om meldingskø er om man da kan skifte sine data i et hvilket som helst system, og så vil dette reflekteres i alle system. Svaret er at dette er kompleksitet vi ikke klarer å håndtere. Derimot kan man gjøre det fra et hvilket som helst presentasjonslag, som mobil-app eller nettleser, så lenge de benytter samme datalager i bakgrunnen. For å håndtere kompleksiteten må en og bare en IT-tjeneste være autoritativt kildesystem hos institusjonen. Det er en bestemmelse som gjøres utenfor IT. Man bestemmer at dersom data ikke er like i to datakilder, er det den ene kilden som gjelder, uavhengig av hvor data ble endret sist.  Hvilke datakilder som er autoritative for hvilke data kan variere, men det må være bestemt på forhånd. De data en IT-tjeneste er autoritative for, kalles autoritative data, eller kildedata. Man skal helst hente data fra autoritativ kilde, men dersom dette ikke er hensiktsmessig, skal dataene ikke endres på veien. Typiske eksempler er programvare som henter data fra katalogtjenester som AD og LDAP.  Ved anskaffelser må det være tydelig på forhånd hvilke data tjenesten som anskaffes skal være autoritativ for, og hvilke data som skal hentes fra andre kilder. De fleste IT-tjenester har langt mer autoritative data enn det de andre konsumentene har behov for. Ofte benyttes derfor begrepet masterdata om dataen tjenesten er autoritativ for og deler med andre tjenester. Men hva man deler fra dag én, og hva som skal deles i fremtiden, er ikke alltid lett å forutsi.  Les mer om masterdata og verdikjeder  ","version":"Next","tagName":"h2"},{"title":"Retrofit​","type":1,"pageTitle":"Vurderinger ved anskaffelse av IT-tjenester og -systemer","url":"/docs/datadeling/veiledere/annet/anskaffelse/vurderinger#retrofit","content":" Hva om min foretrukne skytjeneste eller programvare ikke har MQ og RESTful web services? Hva om den snakker SOAP og RSS? Benytter systembruker?  Vi gjør iblant grep for å få gammel teknologi til å fungere med ny teknologi. Et slikt grep kalles en retrofit. Ofte gjøres det ved at noen implementerer en mikrotjeneste som oversetter. Dette gjør at vi har et større utvalg av IT-tjenester å velge mellom.  En retrofit har en kostnad, både i utvikling og videre drift og forvaltning. Dette må med i vurderingen av tjenester.  For mange større tjenester finnes det allerede mikrotjenester som kanskje kan gjenbrukes. For eksempel foran Canvas, Zoom og Exchange. ","version":"Next","tagName":"h2"},{"title":"Hjelpespørsmål ved anskaffelser av IT-tjenester","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/annet/anskaffelse/hjelpesporsmal","content":"Hjelpespørsmål ved anskaffelser av IT-tjenester Punkt til hjelp i vurderingen av IT-tjenester som enten vil inneholde data som har potensiale for gjenbruk, eller som trenger data. IT-tjenesten bør ha et API for å tilgjengeliggjøre sine data: Har systemet et åpent grensesnitt?Er grensesnittet godt nok dokumentert?Integrasjonen må kunne utvikles av hvem som helst, og ikke bare av leverandøren av IT-tjenesten. Kan institusjonen styre hvem som får tilgang til API-et, eller setter leverandøren begrensninger?Støtter tjenesten moderne teknologier og bransjestandarder?Er det praktisk mulig å hente ut data fra API-et? Har du brukere av API-et, dvs. konsumenter, som kan vurdere dette?Er alle kildedata tilgjengelige gjennom API-et?Har institusjonen tilgang til å skrive alle kildedata? Er noe bare tilgjengelig gjennom et grafisk grensesnitt (GUI)?Hvordan er ytelsen til API-et? Oppetid, responstid?Kan systemet gi ut data til alle mulige konsumenter, eller har leverandøren begrensinger? For eksempel maks antall spørringer over en periode eller maks antall konsumenter.Hvis sanntidsoppdateringer er ønskelig: Støtter systemet å sende ut notifikasjoner eller andre former for meldinger ved endringer i kildedata? Hvis sluttbrukere skal logge på tjenesten: Støtter tjenesten pålogging med Feide?Støtter tjenestens API bruker-integrasjoner eller system-til-system-integrasjoner? Hvis systemet skal provisjoneres: Støtter systemet provisjonering via API, eller må data skrives inn manuelt? Manuelle dobbelregistreringer må vektlegges tungt negativt, siden det skaper ekstraarbeid og dårligere datakvalitet. Har systemet egen provisjonering, som kan hente fra andre API, eller må vi utvikle dette selv? Hvis ikke bør vurderingen legge på ekstrakostnad ved utvikling av kobling for dette. Har API-et begrensinger ved skrivetilgang? Noen skytjenester har for eksempel rate-limiting, som kan være et hinder ved f. eks. studiestart, når tusenvis av studenter vil måtte registreres på kort tid. Har systemet noen form for opprydding i gamle data? Hvis systemet skal brukes som datalager for andre presentasjonslag: Støtter API-et OAuth2 mot Feide?Kan systemet knytte endringer opp mot riktig bruker?Hva er responstiden til API-et? Å bruke et API mot et presentasjonslag setter høye krav til ytelsen, siden sluttbrukerne forventer rask respons.","keywords":"","version":"Next"},{"title":"Få tilgang til et API","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/api-manager-be-om-tilgang","content":"","keywords":"","version":"Next"},{"title":"Logg inn​","type":1,"pageTitle":"Få tilgang til et API","url":"/docs/datadeling/veiledere/api-manager/api-manager-be-om-tilgang#logg-inn","content":" Se Oversikt over den tekniske plattformen for adressen til din institusjons API manager.  Påloggingen i API manager gjøres gjennom et pop-up-vindu, så sjekk om du har sperret for pop-up-vinduer om du har problemer.    ","version":"Next","tagName":"h3"},{"title":"Opprett en enkel applikasjon​","type":1,"pageTitle":"Få tilgang til et API","url":"/docs/datadeling/veiledere/api-manager/api-manager-be-om-tilgang#opprett-en-enkel-applikasjon","content":" Enkle applikasjoner som autentiserer seg ved hjelp av en API-nøkkel. Dette egner seg bra for datadeling internt på en institusjon og for utvikling. En API-nøkkel kalles noen ganger for Developer key. API-nøkkelen skal behandles som et passord. Den må derfor ikke være tilgjengelig for uvedkommende, verken når den blir oppbevart eller når den blir kopiert.  Opprett en applikasjon ved å trykke på brukerikonet øvert til høyre på siden, for så å velge &quot;Applications&quot; i undermenyen. Trykk deretter på sirkelen med pluss-tegn.    Skriv inn navn og beskrivelse av din applikasjon. Her er det viktig å bruke et godt og beskrivende navn, og en passende og utfyllende beskrivelse. Ta gjerne med lenke til innlogginsside og dokumentasjon i beskrivelsen.  I vinduet for Security kan du skrive inn type for ditt API om det er ønskelig, eller velge &quot;SKIP&quot; som setter applikasjonens type til &quot;Simple&quot;.  Du kan velge å enten abonnere på API-er nå, eller trykke &quot;SKIP&quot; for å abonnere på API-er senere.    Fullfør ved å trykke på &quot;CREATE THE APPLICATION&quot;. Applikasjonen er nå registrert i API Manager, og du kan søke om tilgang til API-er med denne applikasjonen. Du kan og gi rettigheter til dine kollegaer slik at flere kan søke om tilganger, hente ut API-nøkler, se gjennom tilganger og feilsøke.  ","version":"Next","tagName":"h3"},{"title":"Opprett en applikasjon som kan abbonnere på JWT og OAuth2-planer​","type":1,"pageTitle":"Få tilgang til et API","url":"/docs/datadeling/veiledere/api-manager/api-manager-be-om-tilgang#opprett-en-applikasjon-som-kan-abbonnere-på-jwt-og-oauth2-planer","content":" Følg samme fremgansgsmåte som ved oppretting av enkel applikasjon over, frem til vinduet for Security. Her må man i tillegg registrere en client_id. Denne blir ofte autogenerert av OAuth 2 autorisasjon-serveren og kan kopieres derfra.  I tillegg er det lurt å registrere riktig Type for applikasjonen hvis dette er er noe annet enn &quot;Simple&quot;.  Du kan bruke en av:  Browser (Angular, React, ...)Web (Java, .Net, ...)Native (iOS, Android, ...)Backend-to-Backend  ","version":"Next","tagName":"h3"},{"title":"Søk om tilgang​","type":1,"pageTitle":"Få tilgang til et API","url":"/docs/datadeling/veiledere/api-manager/api-manager-be-om-tilgang#søk-om-tilgang","content":" Etter at du har opprettet en applikasjon, kan du bruke denne til å søke om tilgang til API. Samme applikasjon kan gjerne abonnere på flere API og planer.  Du kan søke opp API du ønsker tilgang til i &quot;API gallery&quot;.    Velg API og deretter ønsket plan. Du søker om tilgang ved å trykke på &quot;SUBSCRIBE&quot;.  Sjekk at riktig applikasjon er valgt, og endre om det ikke er det. Skriv inn en kommentar med forklaring om hvorfor du ønsker tilgang. Har det vært møter, sak, bestilling e.l. i forbindelese med integrasjonen legg gjerne ved referanser til dette, og gjerne en e-postadresse (f.eks. til e-post-liste) som du kan kontaktes på.  Til slutt, trykk på &quot;SUBSCRIBE&quot; igjen. Forespørselen blir nå sendt til dataeier for godkjenning.      ","version":"Next","tagName":"h3"},{"title":"Legge til flere eiere for en applikasjon​","type":1,"pageTitle":"Få tilgang til et API","url":"/docs/datadeling/veiledere/api-manager/api-manager-be-om-tilgang#legge-til-flere-eiere-for-en-applikasjon","content":" Gå til applikasjonen du vil legge til eller fjerne enten eiere eller brukere fra, og trykk deretter på &quot;Members&quot; i den venstre sidemenyen.    Trykk på sirkelen med pluss-tegn for å legge til en ny bruker. Søk opp riktig person, og velg deretter hvorvidt brukeren skal være eier (&quot;Owner&quot;) eller kun en bruker (&quot;User&quot;) som kan se applikasjonen, og velg &quot;ADD&quot;.  Eiere kan søke om tilgang til API-er på vegne av applikasjonen, samt hente ut API-nøkler.  ","version":"Next","tagName":"h3"},{"title":"Finne API-nøkkel​","type":1,"pageTitle":"Få tilgang til et API","url":"/docs/datadeling/veiledere/api-manager/api-manager-be-om-tilgang#finne-api-nøkkel","content":" Etter at tilgang er blitt innvilget kan du se hvilke API og planer du abonnerer på under &quot;Subscriptions&quot; i den venstre sidemenyen.      Herfra kan du kopiere API-nøkkelen over krypterte forbindelser. Pass på at ingen uvedkommende kan lese nøkkelen der den blir lagret.  Om API-nøkkelen er gammel, har kommet på avveie eller ønskes byttet, trykk på &quot;RENEW API KEY&quot;. Det blir da laget en ny nøkkel for API-et. Den gamle nøkkelen vil fortsette å være gyldig i to timer. ","version":"Next","tagName":"h3"},{"title":"Registrere et enkelt API","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/api-manager-registrere-enkelt-api","content":"","keywords":"","version":"Next"},{"title":"General​","type":1,"pageTitle":"Registrere et enkelt API","url":"/docs/datadeling/veiledere/api-manager/api-manager-registrere-enkelt-api#general","content":" Fyll inn navn, versjonsnummer, beskrivelse og context-path for API-et. Bruk et godt beskrivende navn, og gi en utfyllende beskrivelse av funksjonen til API-et. Dette vil gjøre API-et mye mer nyttig for andre.  Context-path er en del av URL-en til APIet. Eksempelet over som fører til for UiOs gateway vil være tilgjengelig på URLen https://gw-uio.intark.uh-it.no/my-first-echo-api  Merk at disse path-ene er en begrenset ressurs. Registrerer man f.eks. et utviklings-API under /personer , vil en ikke ha mulighet til å registrere test-miljø under /personer/test. Da kan det være bedre å bruke f.eks. /personer/utv/v1    ","version":"Next","tagName":"h3"},{"title":"Gateway​","type":1,"pageTitle":"Registrere et enkelt API","url":"/docs/datadeling/veiledere/api-manager/api-manager-registrere-enkelt-api#gateway","content":" Skriv inn URL til backend. Om API-et skal være åpent for alle er dette alt som trengs. Dersom API gateway må autentisere seg, konfigurerer vi dette senere.    ","version":"Next","tagName":"h3"},{"title":"Plan​","type":1,"pageTitle":"Registrere et enkelt API","url":"/docs/datadeling/veiledere/api-manager/api-manager-registrere-enkelt-api#plan","content":" Hvis det er ønskelig, kan man her opprette en plan. Det er også mulig å utsette dette ved å trykke &quot;SKIP&quot;. I denne veiledningen er det kun mulig å opprette åpne planer eller planer som bruker API-nøkler. Vil man bruke OAuth 2 og/eller JWTs for autentisering må disse opprettes etterpå.  Her er et eksempel på en enkel plan. Den gir lese-tilgang til alle ressurser i APIet hvis man har en API-nøkkel. Siden dette er et echo-API er det ikke nødvendig å ha noe sikring. For å gjøre APIet helt åpent, velg Keyless (Public). For å kunne se hvem som bruker et API, men fortsatt tillate alle som ønsker å bruke det, kan man velge &quot;auto-subscribe&quot;.  Under Path Authorization kan man hviteliste eller svarteliste tilgang til ressurser. For denne planen har vi valgt at alle kan kjøre oppslag ( GET http-verb ) for alle ressurser/&quot;under-URLer&quot; (/).    ","version":"Next","tagName":"h3"},{"title":"Doc​","type":1,"pageTitle":"Registrere et enkelt API","url":"/docs/datadeling/veiledere/api-manager/api-manager-registrere-enkelt-api#doc","content":" Her kan man laste opp dokumentasjon. Dette kan være html-sider (med f.eks. overordnet dokumentasjon) eller OpenAPI/swagger filer (brukes ofte som teknisk dokumentasjon). Det er også mulig å importere dokumentasjon fra nett (åpne websider eller git-repositories), eller skrive dokumentasjon direkte etter at API-et er opprettet.    ","version":"Next","tagName":"h3"},{"title":"Deployment​","type":1,"pageTitle":"Registrere et enkelt API","url":"/docs/datadeling/veiledere/api-manager/api-manager-registrere-enkelt-api#deployment","content":" På siste side kan du velge om du vil opprette API-et uten å starte det, eller opprette og starte med en gang.    Etter å ha gått gjennom veiledningen for å opprette API må man gjerne finpusse litt før API-et er helt klar til bruk.  Les mer om hvordan:  Opprette flere planerAutentisering mot backendLegge policyes på APILegge til flere mottakere av e-post ","version":"Next","tagName":"h3"},{"title":"Forvaltning av tilganger til API","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/api-tilganger","content":"","keywords":"","version":"Next"},{"title":"Åpne data​","type":1,"pageTitle":"Forvaltning av tilganger til API","url":"/docs/datadeling/veiledere/api-manager/api-tilganger#åpne-data","content":" Informasjon som kan eller skal være tilgjengelig for alle uten særskilte tilgangsrettigheter. Tilgang til å lese denne type informasjon kan gis til alle, og bør i størst mulig grad være helt åpent slik at alle kan bruke API-et uten autentisering.  Fordeler ved å tilby åpne data helt tilgjengelige:  Enklere for tredjeparter å ta i brukBidrar til økt bruk av informasjonen  Ulemper ved å tilby åpne data for alle uten autentisering:  Økt belastning på API-er uten forvarsel. Kan omgås ved å legge kvoter og/eller rate-limiting på åpen plan, og tilby tilgang med API-nøkkel for systemer som har avtalt detteInformasjonen ligger lagret i flere system, uten at dette systemet er dataens masterkilde.  Søknader på tilgang til API/planer med åpne data godkjennes uten videre krav til autentisering.  Merk at selv om noe av denne informasjonen skal være tilgjengelig for alle, skal informasjonens integritet likevel sikres ved at kun riktige applikasjoner har tilgang til å endre informasjonen.  ","version":"Next","tagName":"h2"},{"title":"Tilgang til persondata for system-til-system-integrasjoner​","type":1,"pageTitle":"Forvaltning av tilganger til API","url":"/docs/datadeling/veiledere/api-manager/api-tilganger#tilgang-til-persondata-for-system-til-system-integrasjoner","content":" Applikasjoner og system som behandler personopplysninger faller innunder personopplysningsloven og personvernforordningen. All informasjon som skal behandles må ha formåls- og hjemmelsvurdering, samt ha gjennomført risiko og sårbarhetsanalyse før behandlingen finner sted. For systemer som driftes av eksterne må det i tillegg være skrevet en databehandleravtale, og for utenlandske (under)leverandører skal det skrives et overføringsgrunnlag.  Før man gir tilgang til API-er med personopplysninger må dataforvalter vurdere om det skal gis tilgang til API-et og personopplysningene til søker, og hvorvidt søker har de nødvendige hjemler etc. for å behandle opplysningene.  Rent praktisk gjøres det ved at opplysninger om dette (f.eks. link til webside eller referanse-numre i arkivsystem) legges ved søknaden. Når man registrerer API bør planer som gir tilgang til persondata kreve kommentar og en kort beskjed om krav til referanse  Dataeier skal sjekke at opplysningene det gis tilgang til er oppdatert og i orden før tilgang blir gitt.  ","version":"Next","tagName":"h2"},{"title":"TBD: Tilgang til API-er basert på samtykke​","type":1,"pageTitle":"Forvaltning av tilganger til API","url":"/docs/datadeling/veiledere/api-manager/api-tilganger#tbd-tilgang-til-api-er-basert-på-samtykke","content":" Det er mulig å sette opp API slik at hver enkelt person som bruker en tjeneste interaktivt må autentisere og godkjenne at tjenesten får tilgang til deres data, ofte kalt brukersentrisk datadeling. Dataeier setter opp API-ene slik at de kun gir ut informasjon til personer som samtykker til dette.  Tilgang til data må uansett godkjennes av dataeier.  ","version":"Next","tagName":"h2"},{"title":"Data med begrenset tilgang​","type":1,"pageTitle":"Forvaltning av tilganger til API","url":"/docs/datadeling/veiledere/api-manager/api-tilganger#data-med-begrenset-tilgang","content":" Informasjon som verken skal være åpen eller er regnet som fortrolig havner gjerne i denne mellomkategorien. Tilgang på data i denne kategorien kan deles med både interne og eksterne etter en konkret vurdering. Søknad om tilgang til disse API-ene/planene må inneholde en begrunnelse og/eller beskrivelse av hva dataene skal brukes til. Hvis dataen det gis tilgang til inkluderer personopplysninger må informasjon om formål/hjemmelsvurdering etc. være lagt ved i tillegg. Applikasjonen skal ha et beskrivende navn og en utfyllende beskrivelse.  Dataeier må bestemme på forhånd om det er tilstrekkelig at det står beskrevet hva dataen skal brukes til i kommentarfeltet til søknaden sendt gjennom Gravitee, eller om det må opprettes sak i ticket-system e.l. Dette bør dokumenteres på første siden med dokumentasjon som legges sammen med API-et.  Alternativ. 1) Begrunnelse for tilgang gis i kommentar til søknad om abonnement. Har det vært relevant kommunikasjon rundt tilgang legges referanse til dette med i API manager, enten av konsument når de ber om tilgang eller som en beskjed som dataeier skriver når tilgang godkjennes.  Alternativ. 2) Det opprettes sak i ticket-system/saksbehandligssystem. Om det er behov for mer informasjon fra søker legges den i så fall inn i saken. Det samme gjelder lenker til referater fra møter, bestillinger og avtaler som lagres om nødvendig. Ved søknad om eller behandling av om tilgang til API manger, oppgis alle referanser til saker i kommentar når søknaden godkjennes.  Det er selvfølgelig mulig å bruke en blanding, f.eks. alternativ 1 om dataeier har bestilt integrasjon eller om det er intern søker, og alternativ 2 ellers.  ","version":"Next","tagName":"h2"},{"title":"Fortrolige data​","type":1,"pageTitle":"Forvaltning av tilganger til API","url":"/docs/datadeling/veiledere/api-manager/api-tilganger#fortrolige-data","content":" Dette er informasjon som institusjonen er pålagt å begrense tilgangen til i lov, forskrift, avtaler, reglementer og annet regelverk. Dette tilsvarer graden fortrolig i den offentlige Beskyttelsesinstruksen.  Tilgang på data i denne kategorien kan kun gis til interne. Rutiner for tilgang til API-er med fortrolige data er i utgangspunktet lik som for de med begrenset tilgang, men dataansvarlig må nødvendigvis gjøre en grundigere vurdering. Tilgang til fortrolige data som inkluderer personopplysninger vil utløse krav om DPIA.  API-er som tilbyr data som faller inn under graden fortrolig må beskyttes ekstra, helst med asymmetrisk nøkkel, OAuth2 eller tilsvarende. Om det ikke er mulig kan det f.eks. brukes IP-filter i tillegg til API-nøkkel.  Oppsummering  Kategori\tVed søknad\tAPI med åpne data API med personopplysninger og åpne data API med data med begrenset tilgang API med personopplysninger og data med begrenset tilgang API med fortrolige data API med personopplysninger og fortrolige data  ","version":"Next","tagName":"h2"},{"title":"Konfigurere backend","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/backend","content":"","keywords":"","version":"Next"},{"title":"Autentisering med API-nøkkel eller brukernavn og passord​","type":1,"pageTitle":"Konfigurere backend","url":"/docs/datadeling/veiledere/api-manager/backend#autentisering-med-api-nøkkel-eller-brukernavn-og-passord","content":" For å konfigurere autentisering med enten API-nøkkel eller brukernavn og passord må dette legges inn som en HTTP-header.  Fra &quot;Endpoint configuration&quot; menyen, velg &quot;CONFIGURATION&quot;Trykk på sirkelen med plusstegn ved siden av HeadersFyll inn navnet til headeren og verdien (nøkkelen) som skal brukes    Er det en annen Gravitee-installasjon i bakgrunnen kan det f.eks. se slik ut:    Andre systemer bruker ofte andre navn for Headers, f.eks, bare &quot;X-API-Key&quot;.  Ved bruk av &quot;Basic Access Authentication (BA)&quot; autentiserer man med brukernavn og passord. Navnet på headeren settes til Authorization og inneholder teksten Basic + mellomrom + brukernavn/passord. Brukernavnet og passordet legges inn som en base64-encodet streng, skilt med : (kolon). F.eks. &quot;brukernavn:passord&quot;.  Det finnes mange verktøy for å skifte mellom vanlig tekst og base64. I linux kan man f.eks. bruke følgende kommando i et terminalvindu for å enkode:  echo -n brukernavn:passord | base64   Man kan sjekke at det ble riktig ved å legge inn den genererte koden etter echo med denne kommandoen:  echo YnJ1a2VybmF2bjpwYXNzb3JkCg== | base64 -d   For dette eksempelet vil Header se slik ut i Gravitee:    ","version":"Next","tagName":"h3"},{"title":"Få alle requests fra samme IP-adresse​","type":1,"pageTitle":"Konfigurere backend","url":"/docs/datadeling/veiledere/api-manager/backend#få-alle-requests-fra-samme-ip-adresse","content":" Gravitee er installert på en kubernetes-klynge. Den kan derfor kjøre på hvilken som helst server i klyngen, og klyngen kan endre seg (utvides/erstattes). I tillegg kjører vi alltid med minst to gatewayer åpent for å unngå nedetid. API gatewayen vil derfor kunne ha forskjellig ip-adresser. Mange backend-thenester ligger på sperrede nett eller åpner kun for enkelt-IP-adresser. For å unngå å eksponere backend-tjenester mer enn nødvendig kan man konfigurere et API til å bruke en HTTP-proxy. Forespørsler vil da først gå til proxy-serveren, og deretter omdirigerer proxy-serveren forespørselen videre til riktig server. For backend-serveren ser det derfor ut som om forespørselen kom fra ip-adressen til proxy-serveren.  For å kunne gjøre dette må man ha en proxy-server. Denne bør være sikret slik at ikke alle kan bruke denne. Den kan f.eks. sikres med brukernavn og passord, og kun tillate din bruker å ta kontakt med den aktuelle backend-serveren.  Proxy-konfigurasjon gjøres ogå under HTTP-konfigurasjon. I &quot;CONFIGURATION&quot; menyen, huk av for &quot;HTTP proxy&quot; slik at den markeres i grønt som &quot;active&quot;, og fyll inn nødvendig informasjon. Felter som må fylles ut er markert med * (stjerne).    ","version":"Next","tagName":"h3"},{"title":"Token-basert​","type":1,"pageTitle":"Konfigurere backend","url":"/docs/datadeling/veiledere/api-manager/backend#token-basert","content":" Ved token-basert autentisering menes som oftest autentisering med Java Web Tokens (JWTs). Disse er oftest kortvarige og må genereres med jevne mellomrom, f.eks. hver time eller hvert tiende minutt. De kan også være for engangsbruk. Som oftest må man lage et en-gangs-token, kontakte en Authorization Server med det genererte en-gangs-tokenet, og få tilbake et token som er gyldig i en kort stund.  Token-basert autentisering er sikkert og fleksibelt å ta i bruk, om enn litt mer komplisert å konfigurere. Dette gjøres ved hjelp av policies eller et annet API. Se egen veiledning for detaljert fremgangsmåte.  ","version":"Next","tagName":"h3"},{"title":"Sertifikater​","type":1,"pageTitle":"Konfigurere backend","url":"/docs/datadeling/veiledere/api-manager/backend#sertifikater","content":" Gatewayen kan autentisere seg med et klient-sertifikat. Dette er, som token-basert autentisering, mye sikrere enn ved bruk av API-nøkkel eller brukernavn og passord. Konfigureres under.  SSL - Client Authentication  Fyll inn type sertificat (PKCS#12,PFX, Java key store/PEM-sertifikat/nøkkel-par) samt lim inn sertifikat-fila (eller path til denne om den er gjort tilgjengelig på filsystemet til API gateway-en) og evt. passord  ","version":"Next","tagName":"h3"},{"title":"Timeouts​","type":1,"pageTitle":"Konfigurere backend","url":"/docs/datadeling/veiledere/api-manager/backend#timeouts","content":" Hvis man opplever problemer med at koblingen mellom Gravitee og endepunktet får en timeout kan man endre innstillingene til timeout som er satt i Gravitee ved å endre på feltene under &quot;HTTP Configuration&quot;. Hvert felt har egen beskrivelse for sin funksjon, og de må alle fylles ut.   ","version":"Next","tagName":"h3"},{"title":"Caching i gravitee","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/caching-gravitee","content":"","keywords":"","version":"Next"},{"title":"Opprette en cache-ressurs​","type":1,"pageTitle":"Caching i gravitee","url":"/docs/datadeling/veiledere/api-manager/caching-gravitee#opprette-en-cache-ressurs","content":"   Naviger til API-et hvor du skal konfigurere en cache. Velg Design i den venstre sidemenyen under API-ets navn, og deretter Resources under &quot;GENERAL&quot;. Trykk på sirkelen med et pluss-tegn for å opprette en ny ressurs. Fyll inn navn og vel Cache som Type.  Du må skrive inn navn to steder. Det første feltet, &quot;Name&quot;, er slik cachen vil være synlig når man ser på tilgjengelige ressurser. Det andre feltet, &quot;cache name&quot;, er navnet som brukes på den tilhørende policyen. Bruk gjerne samme navn begge steder.  Configuration:  Cache name: navn på tilhørende policyTime to idle: hvor lenge et svar bli cachet uten at det blir spurt påTime to live: hvor lenge et svar blir cachet uavhengig av om det blir spurt på eller ikkeMax entries on heap: hvor mange svar som kan bli lagret i denne cachen    ","version":"Next","tagName":"h3"},{"title":"Opprette en cache policy​","type":1,"pageTitle":"Caching i gravitee","url":"/docs/datadeling/veiledere/api-manager/caching-gravitee#opprette-en-cache-policy","content":" Gå til Design, trykk deretter på Policies under &quot;GENERAL&quot;. Dra ønsket cache-policy fra tilgjengelige policies over til riktig path. Fyll inn informasjon for å fullføre konfigurasjonen.  Cache name: navn nr. 2 om du brukte forskjellige navn på ressursen og cachen i opprettelsen av cachen i forrige steg.Key: dette er det viktigste valget, se konfigurasjon lenger ned. Som oftest er dette ett eller flere parameter.Time to live: kan settes lavere enn det som ble valgt for cache-ressursen i forrige stegScope: velg mellom API eller Application  Cachen lagres som en key-value-store , dvs. én nøkkel gir ett svar. Key kan f.eks. være et parameter. For å bruke parameteren &quot;status&quot; skriv:  {#request.params['status']}   Da vil svaret bli cachen med en nøkkel lik verdien i parameteret, f.eks. &quot;sold&quot;, &quot;available&quot; eller en tom streng. Merk at om det er flere parameter som er mulig å bruke kan det bli tull. Det kan unngås ved å bruke en kombinasjon av parametre, f.eks. ved å bruke en kombinasjon av de to parameterene &quot;status&quot; og &quot;tags&quot; slik:  {#request.params['status']}-{#request.params['tags']}   ","version":"Next","tagName":"h3"},{"title":"Expression Language-uttrykk​","type":1,"pageTitle":"Caching i gravitee","url":"/docs/datadeling/veiledere/api-manager/caching-gravitee#expression-language-uttrykk","content":" {#request.params['status']} er et eksempel på et Expression Language-uttrykk. De er basert på Spring Exression Language (SpEL), og blir brukt som variabler i API Manager. For å lese mer om dette, se offisiell dokumentasjon fra leverandøren. ","version":"Next","tagName":"h3"},{"title":"Filtrere bort innhold i responsen fra et API","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/filtrere-innhold-json","content":"","keywords":"","version":"Next"},{"title":"Introduksjon​","type":1,"pageTitle":"Filtrere bort innhold i responsen fra et API","url":"/docs/datadeling/veiledere/api-manager/filtrere-innhold-json#introduksjon","content":" Her konfigureres policyen JSON to JSON transformation. Hvis filtreringen skal gjelde alle som benytter APIet, legg på policy som beskrevet her.  Om filtreringen skal gjelde en enkel plan, slik at man kan ha en plan som gir all informasjon i svaret og en annen plan som kun gir åpen informasjon i svar, legg til policyen på siste side i veiviseren, punkt 4 &quot;Policies&quot;, for å opprette/endre plan.  I nedtrekksmenyen hvor det står &quot;Select policy&quot;, velg JSON to JSON transformation og trykk &quot;ADD&quot;.      For Scope, velg &quot;RESPONSE&quot;.  I feltet for JOLT spesification spesifiserer du hva som skal endres i JSON filen.  Denne policyen benytter open source-prosjektet JOLT  Dette kan testes på denne web-siden om det er ønskelig.  ","version":"Next","tagName":"h2"},{"title":"Eksempel 1: Respons fra et API med ett objekt​","type":1,"pageTitle":"Filtrere bort innhold i responsen fra et API","url":"/docs/datadeling/veiledere/api-manager/filtrere-innhold-json#eksempel-1-respons-fra-et-api-med-ett-objekt","content":" { &quot;ansatt&quot;: { &quot;id&quot;: &quot;00102099&quot;, &quot;brukerident&quot;: null, &quot;dfoBrukerident&quot;: null, &quot;eksternIdent&quot;: null, &quot;fornavn&quot;: &quot;Kjell-Arne&quot;, &quot;etternavn&quot;: &quot;Testesen&quot;, &quot;fnr&quot;: &quot;29078729585&quot;, &quot;annenId&quot;: [ null ], &quot;fdato&quot;: &quot;1987-07-29&quot; } }   For å fjerne nøkkelel &quot;fnr&quot; og tilknyttet verdi konfigurer vi policyen slik:  [ { &quot;operation&quot;: &quot;remove&quot;, &quot;spec&quot;: { &quot;ansatt&quot;: { &quot;fnr&quot;: &quot;&quot; } } } ]   Kaller man API-et etter at denne policyen er lagt på, får man i stedet denne responsen:  { &quot;ansatt&quot;: { &quot;id&quot;: &quot;00102099&quot;, &quot;brukerident&quot;: null, &quot;dfoBrukerident&quot;: null, &quot;eksternIdent&quot;: null, &quot;fornavn&quot;: &quot;Kjell-Arne&quot;, &quot;etternavn&quot;: &quot;Testesen&quot;, &quot;annenId&quot;: [ null ], &quot;fdato&quot;: &quot;1987-07-29&quot; } }   ","version":"Next","tagName":"h3"},{"title":"Eksempel 2: Respons fra et API med flere objekt​","type":1,"pageTitle":"Filtrere bort innhold i responsen fra et API","url":"/docs/datadeling/veiledere/api-manager/filtrere-innhold-json#eksempel-2-respons-fra-et-api-med-flere-objekt","content":" Mange API-er gir enkeltsvar tilbake som et enkelt objekt, men kall som finner flere objekter gir tilbake en liste med objekter:  { &quot;ansatt&quot;: [ { &quot;id&quot;: &quot;00102099&quot;, &quot;brukerident&quot;: null, &quot;dfoBrukerident&quot;: null, &quot;eksternIdent&quot;: null, &quot;fornavn&quot;: &quot;Kjell-Arne&quot;, &quot;etternavn&quot;: &quot;Testesen&quot;, &quot;annenId&quot;: [ null ], &quot;fdato&quot;: &quot;1987-07-29&quot; }, { &quot;id&quot;: &quot;00100982&quot;, &quot;brukerident&quot;: null, &quot;fornavn&quot;: &quot;Martin&quot;, &quot;etternavn&quot;: &quot;Martinsen&quot;, &quot;fnr&quot;: &quot;23456789&quot;, &quot;fdato&quot;: &quot;1973-11-06&quot; } ] }   For å filtrere bort &quot;fnr&quot; fra denne kan man benytte følgende spesifisering:  [ { &quot;operation&quot;: &quot;remove&quot;, &quot;spec&quot;: { &quot;ansatt&quot;: { &quot;*&quot;: { &quot;fnr&quot;: &quot;&quot; }, &quot;fnr&quot;: &quot;&quot; } } } ]   Denne spesifiseringen vil fungere både på det første og andre eksemplet.  ","version":"Next","tagName":"h3"},{"title":"Eksempel 3: respons fra et API gitt en spesifikk verdi​","type":1,"pageTitle":"Filtrere bort innhold i responsen fra et API","url":"/docs/datadeling/veiledere/api-manager/filtrere-innhold-json#eksempel-3-respons-fra-et-api-gitt-en-spesifikk-verdi","content":" Noen ganger vil man kun returnere svar ut i fra et API dersom det i svaret forekommer en spesifikk verdi. Gitt at API-et gir følgende respons:  { &quot;id&quot;: &quot;5001234&quot;, &quot;navn&quot;: &quot;Ola Nordmann&quot;, &quot;info&quot;: &quot;Informasjon som noen ganger er unntatt offentligheten&quot;, &quot;unntattOff&quot;: &quot;False&quot; }   Og vi vil returnere denne responsen, men kun dersom feltet &quot;unntattOff&quot; ikke har verdien &quot;True&quot;.  Følgende JOLT-spesifikasjon vil kun tillate svar der hvor verdien i &quot;unntattOff&quot; er &quot;False&quot;:  [ { &quot;operation&quot;: &quot;shift&quot;, &quot;spec&quot;: { &quot;unntattOff&quot;: { &quot;False&quot;: { &quot;@2&quot;: &quot;&quot; } } } } ]   Om responsen fra API-et er som følger:  { &quot;id&quot;: &quot;5001234&quot;, &quot;navn&quot;: &quot;Ola Nordmann&quot;, &quot;info&quot;: &quot;Dette er hemmelig&quot;, &quot;unntattOff&quot;: &quot;True&quot; }   Da vil svaret fra Gravitee med denne policyen på planen/API-et være:  null   Merk at slik som vi har konfigurert JOLT-spesifikasjonen så tar vi med svaret kun hvis &quot;unntattOff&quot; er &quot;False&quot;. Om det har verdien &quot;Nei&quot; eller er tomt vil det ikke bli tatt med. Det er også mulig å erstatte innholdet med en tom verdi om &quot;unntattOff&quot; er &quot;True&quot;, og returnere svar om det har en hvilken som helst annen verdi, eller ingen verdi, men da risikerer man å returnere svar som ikke skulle vært med om &quot;unntattOff&quot; ved en feil eller en kodeendring er tomt, får verdien &quot;Ja&quot; eller har endret stor/liten bokstav til TRUE eller true.  Merk at spesifikasjonen ikke vil returnere svar om nøkkelen &quot;unntattOff&quot; mangler helt.  ","version":"Next","tagName":"h3"},{"title":"Eksempel 4: Svar med default-verdi​","type":1,"pageTitle":"Filtrere bort innhold i responsen fra et API","url":"/docs/datadeling/veiledere/api-manager/filtrere-innhold-json#eksempel-4-svar-med-default-verdi","content":" [ { &quot;operation&quot;: &quot;shift&quot;, &quot;spec&quot;: { &quot;unntattOff&quot;: { &quot;true&quot;: { &quot;&quot;: &quot;&quot; }, &quot;*&quot;: { &quot;@2&quot;: &quot;&quot; } } } } ]   Om en nøkkel kun er med hvis den har en verdi vil ikke dette eksempelet returnere noe svar. Feks. om &quot;unntattOff&quot; kun er med i svaret om det har verdien &quot;true&quot; eller om det kun er med om noen eksplisitt har valgt &quot;true&quot; eller &quot;false&quot;. I disse tilfellene vil ingen av konfigurasjonene i dette eksempelet fungere. Det man kan gjøre i en slik situasjon er å sette en default-verdi først, og deretter shift-operasjonen:  [ { &quot;operation&quot;: &quot;default&quot;, &quot;spec&quot;: { &quot;unntattOff&quot;: &quot;false&quot; } }, { &quot;operation&quot;: &quot;shift&quot;, &quot;spec&quot;: { &quot;unntattOff&quot;: { &quot;true&quot;: { &quot;&quot;: &quot;&quot; }, &quot;*&quot;: { &quot;@2&quot;: &quot;&quot; } } } } ]   Merk at nøkkel/verdien som blir lagt til vil bli med i svaret som går til mottakeren.  Disse eksemplene vil, i likhet med eksempel 1, ikke fungere om man får svar med flere objekter i en liste. For slike tilfeller kan man heller bruke:  [ { &quot;operation&quot;: &quot;shift&quot;, &quot;spec&quot;: { &quot;unntattOff&quot;: { &quot;false&quot;: { &quot;@2&quot;: &quot;&quot; } }, &quot;*&quot;: { &quot;unntattOff&quot;: { &quot;false&quot;: { &quot;@2&quot;: &quot;&quot; } } } } } ]   For å sette inn default-verdier i et array må det spesifiseres at det er et array ved å legge på [] i slutten av navnet.  { &quot;ressurser&quot;: [ { &quot;id&quot;: &quot;5001234&quot;, &quot;navn&quot;: &quot;Kari Nordmann&quot;, &quot;info&quot;: &quot;Informasjon er unntatt offentligheten&quot;, &quot;unntattOff&quot;: &quot;True&quot; }, { &quot;id&quot;: &quot;5001235&quot;, &quot;navn&quot;: &quot;Ola Nordmann&quot;, &quot;info&quot;: &quot;Informasjon som ikke er unntatt offentligheten&quot; } ] }   Bruk  [ { &quot;operation&quot;: &quot;default&quot;, &quot;spec&quot;: { &quot;ressurser[]&quot;:{ &quot;*&quot;:{ &quot;unntattOff&quot;: &quot;false&quot; } } } }, { &quot;operation&quot;: &quot;shift&quot;, &quot;spec&quot;: { &quot;ressurser&quot;:{ &quot;*&quot;: { &quot;unntattOff&quot;: { &quot;false&quot;: { &quot;@2&quot;: &quot;ressurser&quot; } } } } } } ]  ","version":"Next","tagName":"h3"},{"title":"Godkjenne tilgang til API","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/godkjenne-tilgang-til-api","content":"","keywords":"","version":"Next"},{"title":"Typisk arbeidsflyt​","type":1,"pageTitle":"Godkjenne tilgang til API","url":"/docs/datadeling/veiledere/api-manager/godkjenne-tilgang-til-api#typisk-arbeidsflyt","content":" Hvordan Gravitee fungerer rundt tilganger:  Alle vanlige brukere kan definere applikasjonerEn applikasjon kan be om tilgang til en planSystemeier godkjenner eller underkjenner tilgang til planen  ","version":"Next","tagName":"h3"},{"title":"Noen har bedt om tilgang​","type":1,"pageTitle":"Godkjenne tilgang til API","url":"/docs/datadeling/veiledere/api-manager/godkjenne-tilgang-til-api#noen-har-bedt-om-tilgang","content":" Når noen ber om tilgang blir alle eiere av API-et varslet. I applikasjonene kommer det en blå ring rundt brukerikonet i menyen øverst til høyre:   I tillegg vil alle eierne og få en e-post om hendelsen:    Det å håndere en tilgangsforespørsel er en oppgave, i Gravitee kalt &quot;Task&quot;. Når du er innlogget i Gravitee, trykk på brukerikonet øverst til høyre, og velg &quot;Tasks&quot; i undermenyen.   Her kan du se alle forespørsler. Trykk på den du vil behandle. Om tilgangen skal godkjennes klikk &quot;ACCEPT&quot;, og det vil dukke opp en meny. Du kan bestemme hvor lenge tilgangen skal gjelde ved å sette &quot;start date&quot; og &quot;end date&quot;. Dette kan også endre i etterkant. I tillegg kan du legge ved en beskjed.    Om du ikke vil godkjenne tilgangen klikk heller på &quot;REJECT&quot;. Du kan skrive en beskjed som blir sendt til konsumenten:    Etter at tilgang er godkjent eller avvist blir det sendt en automatisk generert e-post til eier av applikajsonen. Om det er en plan med API-nøkkel kan en av eierne av applikasjonen logge inn og hente API-nøkkelen. Du trenger i utgangpunktet ikke sende API-nøkkelen til søker, nøkkelen er hemmelig og skal uansett ikke sendes i klartekst.  ","version":"Next","tagName":"h3"},{"title":"Se tilganger som er gitt​","type":1,"pageTitle":"Godkjenne tilgang til API","url":"/docs/datadeling/veiledere/api-manager/godkjenne-tilgang-til-api#se-tilganger-som-er-gitt","content":" Under &quot;Subscriptions&quot; på siden til API-et er det en oversikt over hvilke applikasjoner som abonnerer på ditt API.  ","version":"Next","tagName":"h3"},{"title":"Relatert innhold​","type":1,"pageTitle":"Godkjenne tilgang til API","url":"/docs/datadeling/veiledere/api-manager/godkjenne-tilgang-til-api#relatert-innhold","content":" Lenke til API manager finnes på denne siden: ","version":"Next","tagName":"h2"},{"title":"Importer API-oppsett fra fil","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/importer-api","content":"","keywords":"","version":"Next"},{"title":"Importere API​","type":1,"pageTitle":"Importer API-oppsett fra fil","url":"/docs/datadeling/veiledere/api-manager/importer-api#importere-api","content":" Trykk på pluss-tegnet på siden for APIs for å opprette et nytt API. Velg &quot;Import&quot;. Her kan du enten importere konfigurasjon fra en fil med &quot;import file&quot;, eller fra en link med &quot;Import from link&quot;. Velg type og lim inn URL til definisjonen. Velg hva du vil importere. Som oftest vil du ikke importere Subscriptions, men det er ofte tidsbesparende å importere Plans. Du bør gå gjennom disse før du publiserer API-et og slette de du ikkje trenger. Klikk på &quot;IMPORT&quot; for å fullføre.  API-definisjoner som er eksportert fra andre Gravitee-installasjoner blir gjerne importert korrekt. Open API/Swagger-filer må som oftest redigeres litt i etterkant.  Det viktigste er å fikse Entrypoint og sjekke at Backend er konfigurert riktig. Velg Proxy i den venstre sidemenyen, og deretter Entrypoints for å endre entrypoint. Ofte er dette /api/v1 eller lignende når man importerer fra Open API-definisjoner, men det er ofte ønskelig med et mer beskrivende navn.  Under Proxy og Endpoints, sjekk at URL-en til backend er riktig. Autentisering mot backend er ofte ikke satt opp. Se veilederen for å Konfigurere backendfor dette. ","version":"Next","tagName":"h3"},{"title":"Backend-autentisering med JWTs","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/jwt-mot-backend","content":"","keywords":"","version":"Next"},{"title":"Bakgrunn​","type":1,"pageTitle":"Backend-autentisering med JWTs","url":"/docs/datadeling/veiledere/api-manager/jwt-mot-backend#bakgrunn","content":" Flere API-er hos andre institusjoner, bl.a. DFØ, krever autentisering med maskinporten. Andre API kan kreve autentisering med andre Authorization servers. Som oftest er det best om applikasjonen får tilgang og autentiserer direkte mot Authorization serveren, men noen ganger kan det være hensiktsmessig å autentisere API gateway mot API gateway.  DFØ har satt opp API-ene sine i maskinporten slik at man er nødt til å bruke enten en assymetrisk nøkkel eller et virksomhetssertifikat til autentisering. Med mange integrasjoner og andre applikasjoner som skal ha tilgang til disse API-ene, blir disse hemmelighetene lagret flere steder hvis hver applikasjon skal autentisere selv. For å begrense antall steder hemmeligheter legges blir denne autentiseringen heller utført i Gravitee.  ","version":"Next","tagName":"h2"},{"title":"Lage JWT i Gravitee​","type":1,"pageTitle":"Backend-autentisering med JWTs","url":"/docs/datadeling/veiledere/api-manager/jwt-mot-backend#lage-jwt-i-gravitee","content":" Velg API'et du vil legge til autentisering for. Gå til design i venstre sidemeny, og deretter videre til Policies. Bruk policyen &quot;Generate JWT&quot; for å lage en JWT. Denne kan brukes videre, f.eks. i policyen &quot;Add header&quot; eller &quot;HTTP Callout&quot;.  Generate JWT:    Det er mange felt som må fylles inn, og hvilke som brukes avhenger av hvilken autorisasjons servere som brukes.  Disse er verdt å merke seg:  Om sertifikatet er lagret på filsystemet (ta kontakt med IntArk-drift for dette), velg &quot;The content of the private key is provided by reading a PKCS12/JKS/PEM file from file system&quot; under &quot;Key resolver&quot;. Path til riktig mappe skrives inn i &quot;Private key / Secret key / key store path&quot;. Hvis ikke, velg &quot;The content of the private key/secret is provided inline&quot; og lim denne inn i &quot;Private key / Secret key / key store path&quot; lenger nedPassordet til den private nøkkelen blir vist i klartekst. Vær nøye og begrens hvem som har tilgang til API-etOm du har lastet opp sertifikatet til Authorization serveren skriv inn ID-en på nøkkelen i feltet &quot;kid&quot;. Hvis det er virksomhetssertifikat, ikke fyll inn feltet &quot;kid&quot;, men velg heller &quot;Add a certificate chain as axn X5C attribute&quot; i feltet &quot;Certificate chain&quot;Du kan legge på så mange ekstra Claims som du vil  ","version":"Next","tagName":"h3"},{"title":"Bruke JWT til autentisering og motta bearer-token​","type":1,"pageTitle":"Backend-autentisering med JWTs","url":"/docs/datadeling/veiledere/api-manager/jwt-mot-backend#bruke-jwt-til-autentisering-og-motta-bearer-token","content":" Dette gjøres med HTTP Callout. Legg inn URL til autentiserings-endepunktet du skal bruke og evt. headere/parametere. Legg ved JWT-en som akkurat ble laget ved å bruke Expression Language-notasjon: ${context.attributes['jwt.generated']}.  F.eks. for å bruke mot maskinporten må du legge ved følgende data: grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&amp;assertion=${context.attributes['jwt.generated']}.  ","version":"Next","tagName":"h3"},{"title":"Legge ved token​","type":1,"pageTitle":"Backend-autentisering med JWTs","url":"/docs/datadeling/veiledere/api-manager/jwt-mot-backend#legge-ved-token","content":" For å legge på bearer-token mottatt med HTTP Callaout-policyer: i &quot;Transform Headers&quot;-policy, klikk på plusstegnet under add, fyll inn Authorization som &quot;Name&quot; og som &quot;value&quot;: Bearer {#context.attributes['token']}.  ","version":"Next","tagName":"h3"},{"title":"Eksempel: Maskinporten som API​","type":1,"pageTitle":"Backend-autentisering med JWTs","url":"/docs/datadeling/veiledere/api-manager/jwt-mot-backend#eksempel-maskinporten-som-api","content":" I Gravitee har vi registrert maskinporten (p.t. versjon 2 test-løsningen) som et API.  API-et er ikke publisertDet er sikret med API nøkkel og sperret til IPBackend server endpoint er for test: https://ver2.maskinporten.no/token  Det er satt opp med følgende policyer:  IP Filtering: NRECs ip-adresser er hvitelistetCache: Bruker parameteren scope som key, application som scope, og 3599 (sekunder) som maks varighet på cachede objekter. Policyen henter svar fra cache kun når http-metoden er GET.Generate JWT: Denne genererer JWT-filen som vi bruker for å autentisere mot maskinporten. iss (issuer) og scope hentes som parametere, resten av feltene er hardkodetAssign content: Legger på requesten ihht. oauth2-standard og med JWT som akkurat er generert som assertionTransform parameters: Fjerner parameterne iss og scopeTransform headers: Legger til encodingOverride HTTP method: Endrer til POST  API-et er også satt opp med en cache-ressurs.  Applikasjonene er i tillegg registrert i samarbeidsportalen. Foreløpig er det registrert én applikasjon med fire scope. Applikasjons-ID-en herfra er den som blir brukt som paramteren iss (for Issuer). Denne er også registrert hos DFØ.  Virksomhetssertifikatet er opprettet som en secret i openshift-prosjektet og mountet som katalogen /certs på både API-manager og Gateway-podene. På denne måten trenger vi kun registrere path til filen i API-et. Det er ikke nødvendig, men man kan og lime inn base64-encoded virksomhetssertifikat rett inn i policyen.  ","version":"Next","tagName":"h3"},{"title":"Bruk​","type":1,"pageTitle":"Backend-autentisering med JWTs","url":"/docs/datadeling/veiledere/api-manager/jwt-mot-backend#bruk","content":" API-ene som bruker dette for autentisering har to ekstra policyer:  HTTP Callout: Denne gjør en callout til maskinporten-API-et som er registrert hos oss med http metode GET og parameter for riktig scope, riktig issuer og headeren X-Gravitee-Api-Key for å få tilgangTransform headers: Legger på headeren Authorization med verdien 'Bearer' og JWT-tokenet som maskinporten returnerer  I tillegg er de registrert som applikasjoner i API manager. Disse har og fått tilgang til maskinporten-API-et og API-nøkkelen er registrert i HTTP callout-policyen.  ","version":"Next","tagName":"h3"},{"title":"Bruksanvisning​","type":1,"pageTitle":"Backend-autentisering med JWTs","url":"/docs/datadeling/veiledere/api-manager/jwt-mot-backend#bruksanvisning","content":" For å registrere et API med maskinporten-autentisering må det registreres som en applikasjon, og søke om tilgang til maskinporten-API-et. Når tilgang er godkjent brukes API-nøkkelen i http callout-policyenPå siden for å administrere API-et, velg Design i venstre sidemeny og dra policyen &quot;HTTP Callout&quot; til midten. Fyll inn: scope: requestHTTP Method: GET (Kan også være POST. Da blir det generert nytt token hver gang. Det skaper unødvendig belastning på maskinporten og er tregt, men gjør feilsøking enklere)URL: https://gw-XXX.intark.uh-it.no/maskinporten-test/v2?iss=&lt;ISSUER&gt;&amp;scope=&lt;SCOPE&gt; (issuer finner du i samarbeidsportalen)Legg til Header X-Gravitee-Api-Key. Verdien er API-nøkkelen fra forrige punktLegg til Context variabel med navn = Token og value = {#jsonPath(#calloutResponse.content, '$.access_token')} Dra så policyen Transform Header inn i midten. Under Add/update headers, legg til en med navn Authorization og verdi Bearer {#context.attributes['token']}  Ønsker man å sende med multiple scopes til maskinporten så støttes dette, men formatet på strengen med scopes bestemmes utifra hvordan man sender med scopes til maskinporten APIet.  Sender man scopet med som en del av URI som eksempelet ovenfor gjør så må man selv huske på å manuelt urlencode strenger som inneholder scopene i Assign Content for den aktuelle planen så de blir sende slik ut:  dfo:scope1+dfo:scope_nr2+dfo:scope3   Sender man scopet med som en header så skriver man navnene på scopene rett ut med mellomrom imellom i Assign Content for riktig plan. Eksempelet over blir nå da seende slikt ut:  dfo:scope1 dfo:scope/nr2 dfo:scope3  ","version":"Next","tagName":"h3"},{"title":"Legge på en enkel policy (IP filter)","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/legge-pa-enkel-policy","content":"Legge på en enkel policy (IP filter) I Gravitee API manager kan man legge på ekstra funksjonalitet på API-et. Dette kan være ekstra tilgangskontroll, validering eller endring av forespørsler. Dette legges på som policyer. Det er mulig å legge policy på hele API, enkeltplaner eller enkelt paths / ressurser. Det vanligste er å legge på hele API. For å legge på en policy på et helt API: Naviger til ditt API, deretter klikk på Design i sidemenyen til venstre. Du havner nå på &quot;under-fanen&quot; Policies under General. For å legge på en policy må du dra den inn under &quot;/&quot;. I eksempelet over drar vi &quot;IP filter&quot; inn under &quot;/&quot;-pathen. Deretter klikker vi på &quot;IP filter&quot; og legger til den eller de IP-adressene/subnettene vi vil gi tilgang. Husk å trykke &quot;save&quot;. Det er mulig å legge på veldig mange policyer, men det anbefales å ha så få som mulig. Policyer blir utført en og en. For å endre på rekkefølgen de blir utført kan man dra de til den plasseringen som passer. Det er fullt mulig å legge på samme policy flere ganger. Om en policy skal gjelde for en path kan man legge til en path ved å trykke på plusstegnet. Skriv inn path-en man vil legge til. Velg så denne før man drar inn policy til riktig plass. For å legge til policy på en plan er det en annen fremgangsmåte for dette. Noen policyer er lagt opp til at man skal legge på per plan, f.eks. hvitelister, rate-limiting og autentisering (API key, JWT eller OAUTH). For disse konfigurerer du policyene når du oppretter planen. I tillegg kan man legge til policyer på siste side av veiviseren for planer.","keywords":"","version":"Next"},{"title":"Konfigurere autentisering via maskinporten","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/maskinporten-autentisering","content":"","keywords":"","version":"Next"},{"title":"Bakgrunn​","type":1,"pageTitle":"Konfigurere autentisering via maskinporten","url":"/docs/datadeling/veiledere/api-manager/maskinporten-autentisering#bakgrunn","content":" Maskinporten kan brukes til sikker autentisering mot API på tvers av organisasjoner.  Når man bruker maskinporten autentiserer man seg først mot maskinporten med et sertifikat. Som svar får man et tilgans-token, som igjen brukes til autorisasjon i API Gatewayen.  ","version":"Next","tagName":"h3"},{"title":"Forutsetninger​","type":1,"pageTitle":"Konfigurere autentisering via maskinporten","url":"/docs/datadeling/veiledere/api-manager/maskinporten-autentisering#forutsetninger","content":" Det forutsettes at organisasjonen din er registrert som bruker av maskinporten og har fått opprettet et prefiks.  ","version":"Next","tagName":"h3"},{"title":"Registrer API i Maskinporten​","type":1,"pageTitle":"Konfigurere autentisering via maskinporten","url":"/docs/datadeling/veiledere/api-manager/maskinporten-autentisering#registrer-api-i-maskinporten","content":" Først må API-et registreres i maskinporten. Da opprettes det et scope. Et scope kan brukes til å gi tilganger til ressurser i et eller flere API. Det anbefales å ikke bruke samme scope for å gi tilgang til ulike API.  I tillegg må de organisasjonene som skal få tilgang til API-et bli gitt tilgang. Dette kan gjøres både før og etter at API-et er registrert i API Gateway.  ","version":"Next","tagName":"h3"},{"title":"Registrer API-et​","type":1,"pageTitle":"Konfigurere autentisering via maskinporten","url":"/docs/datadeling/veiledere/api-manager/maskinporten-autentisering#registrer-api-et","content":" Om det ikke allerede er registrert. Om det ikke allerede er gjort finnes det veiledning her. Kom tilbake til denne siden når planer skal opprettes.  Opprett plan med sikret med JWT  Et tilgans-token er en type token som kalles Java Web Token, forkortet JWT (uttales jot eller jåt).  Opprett en ny plan ved å gå til API-et, velg Plans og trykk på plusstegnet    Skriv inn navn og en beskrivelse av planen. Gå til neste side.  På siden for Secure, under Authentication velg JWT som Authentication type.    Videre skal følgende legges til under Configuration. I menyen for Signature la RS256 være valgt (det er eneste som støttes av maskinporten p.t.).  I menyen JWKS Resolver, velg JWKS_URL.  I Resolver parameter skriv eller lim inn URL hvor API Gatewayen kan finne maskinportens offentlige sertifikat. I produksjon er dette https://maskinporten.no/jwk , i test er det https://ver2.maskinporten.no/jwk eller https://ver1.maskinporten.no/jwk , alt etter hvilket testmiljø man benytter.  Om du vil kunne bruke informasjon fra tokenet til flere sjekker og/eller i policyer, huk av for Extract JWT Claims.  Det er god praksis å sjekke autorisasjonen som er gitt både i API gateway og i selve API-et. Med mindre du ikke stoler på API-et eller det er for testing, lar du Propagate Authorization Header være huket av. Tilgangs-tokenet blir da sendt til backend-API-et, og samme eller en mer grundig sjekk av tokenet foretas der. Det vil og forhindre urettmessig tilgang til API-et dersom man spør backend-API-et direkte uten å gå via gatewayen.  User claim fungerer ikke p.t. med maskinporten.  Additional selection rules. Her kan det bli litt komplisert. Her kan man legge inn flere regler for å være sikker på at riktig plan blir valgt. Om API-et kun skal brukes av et scope kan du legge inn en sjekk av scope her. Er man sikker på at tokenet kun vil inneholde dette scopet, bruk f.eks:  #context.attributes['jwt'].claims['scope'] matches '^org:test$'   Vil man tillate at tokenet har andre scope i tilegg til det som gir tilgang til ditt API kan man bruke:  #context.attributes['jwt'].claims['scope'] matches '^([a-z:\\\\s]\\\\s)?org:test(\\\\s[a-z:\\\\s])?$'   Et litt mer avansert eksempel. Har man et API hvor man kan bli tildelt enten lese- og skriverettigheter, eller kun skrive- eller kun leserrettigheter.  Da kan man ha en plan for både lese og skrivetilgang med denne ekstra regelen:  #context.attributes['jwt'].claims['scope'] matches '^([a-z:\\\\s]\\\\s)?org:test(\\\\s[a-z:\\\\s])?$' &amp;&amp; #context.attributes['jwt'].claims['scope'] matches '^([a-z:\\\\s]\\\\s)?org:test.write(\\\\s[a-z:\\\\s])?$'   Kun for skirvetilgang:  #context.attributes['jwt'].claims['scope'] matches '^([a-z:\\\\s]\\\\s)?org:test.write(\\\\s[a-z:\\\\s])?$'   Kun for lesetilgang:  #context.attributes['jwt'].claims['scope'] matches '^([a-z:\\\\s]\\\\s)?org:test(\\\\s[a-z:\\\\s])?$'   Merk at i dette eksempelet betyr rekkefølgen noe. Planer som krever to scope må være først i lista over tilgjengelige planer. På siden med oversikt over planer kan rekkefølgen endres.  Sjekke for flere grants  Det kan være tilfeller hvor man vil ha en plan per organisasjon. Det anbefales ikke om det er mange organisasjoner som skal ha tilgang, men det er mulig, og om det er et endelig lite antall er det overkommelig. For å legge inn regler som slår inn om det er riktig organisasjonsnummer og riktig scope:  #context.attributes['jwt'].claims['consumer']['ID'] == '0192:987654321' &amp;&amp; #context.attributes['jwt'].claims['scope'] matches '^([a-z:\\\\s]\\\\s)?org:test(\\\\s[a-z:\\\\s])?$'   Når alt er fylt inn, trykk &quot;NEXT&quot;.  For å legge inn rate-limit, kvoter, svartelisting, hvitelisting eller policy, , se veiledningen for planer.  Husk at planen må publiseres før den kan tas i bruk.  ","version":"Next","tagName":"h3"},{"title":"Registrere applikasjon​","type":1,"pageTitle":"Konfigurere autentisering via maskinporten","url":"/docs/datadeling/veiledere/api-manager/maskinporten-autentisering#registrere-applikasjon","content":" For at en applikasjon skal kunne bruke API-et må applikasjonen registreres både i maskinporten og i Gravitee. Først må applikasjonen registreres som en integrasjon i maskinporten, og så må den registreres i Gravitee med den client_id som den ble tildelt i maskinporten. Deretter kan applikasjonen søke om tilgang til riktig plan og API. Når tilgang er tildelt kan API-et benyttes. Man bruker ikke API-nøkkel og trenger ikke hente ut denne. ","version":"Next","tagName":"h3"},{"title":"Opprette plan","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/opprette-plan","content":"","keywords":"","version":"Next"},{"title":"Opprette plan​","type":1,"pageTitle":"Opprette plan","url":"/docs/datadeling/veiledere/api-manager/opprette-plan#opprette-plan","content":" Under APIs, gå først til Portal i den venstre sidemenyen og deretter Plans. Lag ny plan ved å trykke på det blå plusstegnet.  Du blir så tatt gjennom veiviseren for å opprette/endre en plan. I eksemplene under lager vi planer for test-APIet petstore.    ","version":"Next","tagName":"h2"},{"title":"Opprette plan med mange rettigheter​","type":1,"pageTitle":"Opprette plan","url":"/docs/datadeling/veiledere/api-manager/opprette-plan#opprette-plan-med-mange-rettigheter","content":" På første side, fyll inn navn og en beskrivelse.  I tillegg må det gjøres et par andre valg:  Auto validate subscription betyr at alle som ber om tilgang får det automatisk, men i motsetning til en åpen plan må de registrere applikasjonenSkru på &quot;Consumer must provide a comment&quot; om du vil kreve at det blir skrevet en kommentar for å få spurt om tilgangI tekstfeltet &quot;Custom message to display to consumer&quot; er det mulig å legge inn en kort tekst hvor man f.eks. kan be om spesifikk informasjonUnder Characteristics kan man legge inn noen stikkord for å beskrive planen, f.eks. &quot;åpne data&quot; om planen kun gir tilgang til det, &quot;read only&quot; om kun leserrettigheter, &quot;read/write&quot; om planen gir tilgang til å legge inn data i API-et o.l    På neste side velger man hvilken metode API-et skal være sikret med, dersom dette er relevant.  Man kan velge å ha det helt åpent,public/keyless, eller bruke API-nøkkel, JWT eller OAuth 2.  I dette eksempelet brukes API nøkkel. Man kan velge å sende API-nøkkelen med videre til backend. Ikke valgt i dette eksempelet, headeren med api-nøkkel blir derfor ikke fjernet.    I neste skjermbilde kan man velge å legge restriksjoner på hva man får lov til å gjøre med denne planen. Se lenger ned for eksempler.  På siste side kan man legge på policyer på enkeltplaner. Det anbefales ikke om man kan unngå det, men noen ganger er det nødvendig. Prøv i så fall å ha så få som mulig her. Det er bare å velge policy, klikke på &quot;ADD&quot; og konfigurere denne. Om man legger på flere blir den neste lagt til på slutten. Man kan ikke endre rekkefølge i etterkant slik som når man endrer på policyer for hele API-et.  For å lagre planen, trykk på &quot;SAVE&quot;.    Planer blir først opprettet i Staging-området. Det er da ikke mulig å abbonnere på dem. På denne måten kan man opprette planer og dobbeltsjekke at de ble konfigurert riktig før man publiserer dem. Når du oppretter en plan før den er publisert vil du derfor kunne ikke se den. Klikk på &quot;Staging&quot; for å se planer som ikke er publisert.    For å gjøre en plan tilgjengelig klikk på det lille sky-ikonet med oppover-pil. Den er nå tilgjengelig i portalen og applikasjoner kan spørre om tilgang. Det er fremdeles ikke mulig å bruke planen Klikk på deploy for å dytte ut konfigurasjonen av denne planen til gatewayen.  For å endre en plan, klikk på blyant-ikonet for å redigere. Man må gå gjennomhele veiviseren på nytt, men du trenger kun å endre det som skal endres.  ","version":"Next","tagName":"h2"},{"title":"Avslutte planer​","type":1,"pageTitle":"Opprette plan","url":"/docs/datadeling/veiledere/api-manager/opprette-plan#avslutte-planer","content":" For å gjøre en plan utilgjengelig for nye abonneneter gjør man dem Deprecated. Eksisterende abonnenter vil fortsette å fungere, men nye applikasjoner som vil bruke API-et må velge en annen plan. Ved å lukke planen vil eksisterende abonnement slutte å fungere.  ","version":"Next","tagName":"h2"},{"title":"Opprette plan med få rettigheter og begrensning av bruk​","type":1,"pageTitle":"Opprette plan","url":"/docs/datadeling/veiledere/api-manager/opprette-plan#opprette-plan-med-få-rettigheter-og-begrensning-av-bruk","content":" Trykk på plusstegnet på siden for Plans for å opprette ny plan.  Fyll inn navn, beskrivelse og velg autentiseringmetode på de to første sidene.  ","version":"Next","tagName":"h2"},{"title":"Hvitelisting​","type":1,"pageTitle":"Opprette plan","url":"/docs/datadeling/veiledere/api-manager/opprette-plan#hvitelisting","content":" På side 3, Restrictions, huk av for Path Authorization. I dette eksempelet bruker vi fremdeles Pet Store-API-et, og vi vil bare tillate abonnenter å lese informasjon om kjæledyr. For å oppnå dette hvitelister vi en path. Trykk på &quot;+ Add&quot; under whitelist for å lage en ny, og fyll inn path pattern og tillatte metoder. F.eks. /pet/** som path og huke av for GET for å gi leserettigheter til kjæledyr.    Du kan legge på så mange path pattern i hvitelist som du vil. Når du har lagt inn en eller flere hvitelister vil alle andre paths være svartelistet. Tilsvarende til alle endre være godkjente om du svartelister en eller flere path.  Det fungerer ikke å kombinere svartelister og hvitelister. Om begge typer er definert vil kun hvitelistene fungere.  Methods som blir brukt her blir også kalt HTTP verbs.  Path patterns som blir brukt er Ant Path Patterns. De fungerer slik:  ? betyr et tegn (men ikke / ) betyr null eller flere tegn (men ikke / ) ** betyr null eller flere mappe-segmenter  Om du vil vite mer om Ant Patterns er denne veiledningen god, det finnes også offisiell dokumentasjon.  ","version":"Next","tagName":"h3"},{"title":"Svartelisting​","type":1,"pageTitle":"Opprette plan","url":"/docs/datadeling/veiledere/api-manager/opprette-plan#svartelisting","content":" I dette eksempelet har man lov til å bruke API-et så mye man vil og man har tilgang til alle ressurser bortsett fra å slette ordre. Det er gjort ved å svarteliste path/store/order med http-method (HTTPS verb) DELETE. Om man vil svarteliste all tilgang til ordre huker man av alle.    ","version":"Next","tagName":"h3"},{"title":"Rate-Limiting​","type":1,"pageTitle":"Opprette plan","url":"/docs/datadeling/veiledere/api-manager/opprette-plan#rate-limiting","content":" I tillegg til å begrense hvilke ressurser som er tilgengelig via API-et kan man også begrense hvor ofte en konsument kan kontakte et API. Det gjøres med Rate-limiting eller kvoter (Quota). Kvoter er mest brukt for API-er man betaler for. Rate-limiting brukes også ofte på betal-API-er hvor det er mindre begrensninger jo mer man betaler. Rate-limiting kan også brukes for å beskytte et API om backend-serveren har ytelsesproblemer.  Skjermbilde av eksempel hvor man tillater to forespørsler per minutt:   ","version":"Next","tagName":"h3"},{"title":"Rettigheter, roller og grupper i API Manager","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/rettigheter-og-roller-i-api-manager","content":"","keywords":"","version":"Next"},{"title":"Roller for API Management​","type":1,"pageTitle":"Rettigheter, roller og grupper i API Manager","url":"/docs/datadeling/veiledere/api-manager/rettigheter-og-roller-i-api-manager#roller-for-api-management","content":" Det er tre roller som kommer med per default:  AdminAPI_PUBLISHERUSER  Alle som logger inn får rollen user om de ikke har fått andre roller eksplisitt. Med denne rollen kan du registrere applikasjoner, og be om tilgang til API-ene man ser. Andres API-er og applikasjoner kan man ikke se med mindre man har fått tildelt rettigheter til å se dem.  Admin-rollen gir alle rettigheter i klyngen og kun de som absolutt trenger det bør få denne. Den mest vanlige oppgaven til en administrator er å tildele rollen API_publisher til de som trenger denne.  API_publisher er en rolle som gir tilgang til å registrere API i API Manager. Kontakt administrator ved din institusjon for å få denne rollen.  ","version":"Next","tagName":"h3"},{"title":"Tildele roller​","type":1,"pageTitle":"Rettigheter, roller og grupper i API Manager","url":"/docs/datadeling/veiledere/api-manager/rettigheter-og-roller-i-api-manager#tildele-roller","content":" For å tildele en bruker en rolle må brukeren ha vært logget inn i API Management minst en gang.  For å tildele en management-rolle kan det gjøres på en av to måter:  Gå til settings -&gt; roles og trykk på personer-ikonet til rollen som skal tildeles. Klikk på plusstegnet nede til høyre, søk deretter opp og velg personen, trykk AddGå til settings -&gt; Users. Søk opp personen og klikk på dem. Velg rolle, f.eks. endre fra USER til API_PUBLISHER som &quot;Management role&quot;  ","version":"Next","tagName":"h3"},{"title":"Roller i et API eller en applikasjon​","type":1,"pageTitle":"Rettigheter, roller og grupper i API Manager","url":"/docs/datadeling/veiledere/api-manager/rettigheter-og-roller-i-api-manager#roller-i-et-api-eller-en-applikasjon","content":" For API finnes det fire ferdige roller:  OWNERPRIMARY_OWNERREVIEWERUSER  Og for applikasjon tre:  OWNERPRIMARY_OWNERUSER  Man får rollen primary owner på alle API-er eller applikasjoner man oppretter selv. Alle API-er eller applikasjoner må ha en primary owner.  Owner og Primary owner har alle rettighetene til et API. Det er de som godkjenner tilgang. Tilsvarende for applikasjoner, alle med rollen owner og primary owner kan søke om tilgang til API. For utvikler-team hvor flere personer utvikler de samme API-ene og/eller applikasjonene, kan det være lurt å opprett en gruppe og gi owner-rollen til denne. Det gjør fremtidig vedlikehold lettere, da man legger til eller fjerner medlemmene fra en gruppe i stedet for å gå inn på hver enkelt API/applikasjon.  ","version":"Next","tagName":"h3"},{"title":"Tildele rettigheter på et API eller en applikasjonen for enkeltbruker​","type":1,"pageTitle":"Rettigheter, roller og grupper i API Manager","url":"/docs/datadeling/veiledere/api-manager/rettigheter-og-roller-i-api-manager#tildele-rettigheter-på-et-api-eller-en-applikasjonen-for-enkeltbruker","content":" En eier kan tildele rettigheter til en person eller en gruppe. Naviger til det akutelle API-et eller applikasjonen, gå til Memebers under &quot;User and group access&quot;.  Trykk på plusstegnet, søk opp riktig bruker, velg rolle og trykk på ADD.    ","version":"Next","tagName":"h3"},{"title":"Grupper​","type":1,"pageTitle":"Rettigheter, roller og grupper i API Manager","url":"/docs/datadeling/veiledere/api-manager/rettigheter-og-roller-i-api-manager#grupper","content":" Det er også mulig å opprette grupper i API manager. Det kan f.eks. være en gruppe for et utviklerteam. Man må være administrator for å opprette en gruppe, men administror kan gjøre en eller flere medlemmer til eier.  Bruksanvisning for å opprette en gruppe​  Gå til Setting -&gt; Groups og trykk på plusstegnet    Skriv inn navn på gruppen. Trykk på plusstegnet nede til høyre for å legge til medlemmer.  Om du oppretter en gruppe på vegne av andre vil man typisk legge til den som vil ha gruppen, og velger at de skal være group admin. Personen som skal bruke gruppa kan da gjøre endre endringer, slik som å legge til flere medlemmer eller knytte gruppe til APIer eller applikasjoner. Huk av for &quot;Allows invitation via user search&quot; slik at gruppe-administratoren kan legge til medlemmer på en enkel måte.  System-administratorere bør også vurdere om &quot;Allows invitation via user search&quot; og &quot;Allows the group admin to change the application role&quot; skal være valgt eller ikke. ","version":"Next","tagName":"h3"},{"title":"Egne roller i Gravitee (f.eks. for innsyn)","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/rolle-internrevisjon","content":"","keywords":"","version":"Next"},{"title":"Bakgrunn​","type":1,"pageTitle":"Egne roller i Gravitee (f.eks. for innsyn)","url":"/docs/datadeling/veiledere/api-manager/rolle-internrevisjon#bakgrunn","content":" Et typisk eksempel på en rolle det ofte er behov for, men som kke kommer med standard, er en rolle for de som behøver innsyn i API-er og dataflyt, men som ikke behøver å kunne endre på eksisterende API-er og appliasjoner. Eksempel: intern-revisjon, it-sikkerhet.  ","version":"Next","tagName":"h2"},{"title":"Administrasjon av roller​","type":1,"pageTitle":"Egne roller i Gravitee (f.eks. for innsyn)","url":"/docs/datadeling/veiledere/api-manager/rolle-internrevisjon#administrasjon-av-roller","content":" Administratorer kan gå på &quot;Administration&quot;, &quot;Settings&quot; og &quot;Roles&quot; (under User Management).  Se denne siden om hvordan man kan tildele roller  ","version":"Next","tagName":"h2"},{"title":"Eksempel på rolle for revisjon​","type":1,"pageTitle":"Egne roller i Gravitee (f.eks. for innsyn)","url":"/docs/datadeling/veiledere/api-manager/rolle-internrevisjon#eksempel-på-rolle-for-revisjon","content":" For å lage noe som er bra nok for å revidere ordentlig må man lage roller i alle scopes: management (web-grensesnittet hvor vi er nå), portal (API gallery), API og applikasjon.  Start med å trykke på &quot;Add a new role&quot; under Management. Skriv inn navn og beskrivelse av rollen og huk av leserettigheter slik som vist under. Det er enklest å trykke på øverste avkryssingsbokaen, og deretter fjerne de som er overflødige, f.eks. Alert og message.  Gjør deretter tilsvarende for Portal, API og Application.          ","version":"Next","tagName":"h2"},{"title":"Tildele rettigheter​","type":1,"pageTitle":"Egne roller i Gravitee (f.eks. for innsyn)","url":"/docs/datadeling/veiledere/api-manager/rolle-internrevisjon#tildele-rettigheter","content":" For at en revisjon-rolle skal funger må den ha tilgang til alle API-er. Tildeling av roller gjøres via grupper og gruppemedlemskap, og kan f.eks. gjøres slik som nedenfor. Det som er forskjellig fra andre grupper er at men huker av for &quot;Associate automatically to every new API&quot; og &quot;Associate automatically to every new application&quot;.  Som oftest har man startet med API-management før denne rollen er opprettet, så administrator må i tillegg klikke på &quot;Associate to existing APIs&quot; og &quot;Associate to existing applications&quot;.   ","version":"Next","tagName":"h2"},{"title":"Se bruken av ditt API","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/se-bruk-av-api","content":"","keywords":"","version":"Next"},{"title":"Se hvem som har tilgang​","type":1,"pageTitle":"Se bruken av ditt API","url":"/docs/datadeling/veiledere/api-manager/se-bruk-av-api#se-hvem-som-har-tilgang","content":" Gå til siden hvor du konfigurerer API-et ditt. Under Portal i venstre sidemeny velg Subscriptions.    ","version":"Next","tagName":"h3"},{"title":"Se statistikk over bruk​","type":1,"pageTitle":"Se bruken av ditt API","url":"/docs/datadeling/veiledere/api-manager/se-bruk-av-api#se-statistikk-over-bruk","content":" For å se status og bruk av alle APIene du eier kan du gå på Dashboard øverst i menyen på venstre side. Det er det 3 undersider. Home gir raskt overblikk, perdefault ut i fra bruk siste minutt men man kan endre til å se siste time, siste dag, siste uke eller siste måned. Om man har satt opp helsesjekker vil man se status på disse under APIs status. Analytics viser mer detaljer med blant annet grafer over bruk, respons-tider og status på API-kall.    Ved å gå til et enkelt API kan man se fler detaljer. Velg API og gå til siden som heter analytics.  Her ser man både status for API-kall basert på HTTP-returkoder og antall API-kall fordelt på planet, applikasjoner etc.    Naviger lenger ned på siden for å få graf over antall over tid og deres status og over hvor lang tid hvert API-kall bruker. Merk at om standard ser man kun for siste 5 minuttene, det kan man endre ved enten å gå på hurtigvalgene 5m, 30m, 1h etc. (for å se for siste 5 minutter,siste halvtimen, siste timen) eller velge fra og til-tidspunkt øverst på siden. Man kan også velge å få oppdatert siden automatisk.    Ut i fra disse grafene er det lett å se om noe har forandret seg, men for å finne feil bør man kjenne til hvordan det ser ut når ting fungerer som normalt. For eksempel vil noen applikasjoner ofte ha mange 403 og/eller 404-returkoder (betyr at man ikke har lov til å se en ressurs eller ressursen ikke finnes) mens andre applikasjoner ikke har slike feil til vanlig. I kakediagrammet er returkoder mellom 400 og 499 farget oransje og kan være problem, men ikke alltid. Returkoder mellom 500 og 599 er vist i rødt, de betyr alltid at noe er feil (men det betyr ikke nødvendigvis at det er problem. De fleste applikasjoner vil bare prøve på nytt og om det er få slike feil, og de går gjennom på forsøk nummer to, er som oftest alt OK) Ser man mange 500-feilmelmdinger i noen sekunder som deretter forsvinner betyr det gjerne at backend-APIet er restartet.  ","version":"Next","tagName":"h3"},{"title":"Eksempler på feilsituasjoner​","type":1,"pageTitle":"Se bruken av ditt API","url":"/docs/datadeling/veiledere/api-manager/se-bruk-av-api#eksempler-på-feilsituasjoner","content":"   Skjermskuddet over viser en graf fra et API hvor backend sluttet å svare helt. Som du ser skjedde det litt etter tre på natta. Feilen man oftest fikk var 504 Gateway Timeout. Legg også merke til at responstiden er uvanlig jevn, i dette tilfellet kommer det av at man traff på connect timeout, som er 5 sekunder som standard.    Denne grafen viser et API hvor man opplevde feil fra 12:35. Feilen er 401 Unauthorized og kom av feil ved autentisernig mot backend-API. Dette kan f.eks. komme av passord som er endret i backend, men ikke i Gravitee.    For APIet som blir vist i grafen over var det feil med en policy som gjorde at alle API-kall ble feil og backend ikke klarte å håndtere requestene, men svarte i stedet med 400 Bad Request. Dette skjer heldigvis sjelden.  ","version":"Next","tagName":"h3"},{"title":"Hvordan ser jeg hvem som er mest ressurskrevende mot mitt API​","type":1,"pageTitle":"Se bruken av ditt API","url":"/docs/datadeling/veiledere/api-manager/se-bruk-av-api#hvordan-ser-jeg-hvem-som-er-mest-ressurskrevende-mot-mitt-api","content":" Hvilke API-kall som brukes mest ressurser vil være forskjellig fra API til API, men generelt bør man se på hvilke applikasjoner som har flest API-kall og hvilke applikasjoner som har lengst responstid. På analytics-siden til et API ser man de på &quot;Top applications&quot; og &quot;Top slow applications&quot;, samt grafen &quot;Hits by applications&quot; nederst på siden. Denne siste grafen er fin å se på over tid for å sjekke om en applikasjon plutselig benytter APIet mye oftere.  Man kan også se på logger og se hvilke API-kall som bruker lengst tid. Noen søk kan ta veldig lang tid. Om man ser slike og det finnes måter å aksessere ressursen på som er raskere bør man spørre de som eier applikasjonen om de kan endre. For eksempel vil det ofte være raskere og mindre ressurskrevende å kalle en ressurs direkte med /ressurs/1234 enn å søke den opp med /ressurs?id+eq+1234 eller liknende. Dette er også lurt å ha med i dokumentasjonen.  En appliksjon bør ikke hente alle ressurser av en type flere ganger i løpet av kort tid. Om dette skjer kan man spørre de eier applikasjonen om de kan endre slik at de bare spør etter den ressursen de trenger eller mellomlagre resultatet.  ","version":"Next","tagName":"h3"},{"title":"Se logger over API-kall​","type":1,"pageTitle":"Se bruken av ditt API","url":"/docs/datadeling/veiledere/api-manager/se-bruk-av-api#se-logger-over-api-kall","content":" Oppe til høyre på siden er det en link hvor det står &quot;VIEW LOGS&quot;. Klik på denne og man ser oversikt over alle API-kall. Dette kan være kjekt ved feilsøking, men det er vanskelig å få oversikt. Det er mulig å filtrer på tid go etter kriterie alik som planer, applikasjoner, responstid og HTTP-returkoder. Ved å klikke på tidspunktet får man opp litt fler detaljer om enkelt-kall, men som standard er det ikke mye ekstra informasjon man kan se.  ","version":"Next","tagName":"h3"},{"title":"Utvidet logging​","type":1,"pageTitle":"Se bruken av ditt API","url":"/docs/datadeling/veiledere/api-manager/se-bruk-av-api#utvidet-logging","content":" Ved å konfigurere utvidet logging kan man logge alt ved et API-kall, inkludert hele svar. Ikke bruk dette unødvendig, da man risikerr å lagre sensitiv informasjon og kan skape problemer med lagringsplass. Som standard blir utvidet logging skrudd av igjen etter en time hos oss, men administrator kan endre dette.  For å skru på utvidet logging klikk på &quot;Configure the logging&quot;, endre boksen for Enabled/Disabled, velg hva som skal logges og eventuelle ekstra kriterier for logging (f.eks. kun logge for en applikasjon eller en plan) og klikke på save. Etter dette må man deploye APIet på nytt. Etter redeploy kan man klike på tidspunktet for et API-kall og se akkurat hva som blir mottatt og sendt til og fra Gravitee. ","version":"Next","tagName":"h3"},{"title":"Varsling av nye subscriptions o.l.","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/api-manager/varsling-for-api-eiere","content":"","keywords":"","version":"Next"},{"title":"Flere mottakere​","type":1,"pageTitle":"Varsling av nye subscriptions o.l.","url":"/docs/datadeling/veiledere/api-manager/varsling-for-api-eiere#flere-mottakere","content":" For å sende epost om subscription o.l. kan du legge til ekstra epost-adresser under notifications i &quot;API-definering-under-menyen&quot;.    Der kan du skrive inn mange epost-adresser etter hverandre. Her har jeg bare lagt til mail@example.org i tillegg til det som blir satt opp som standard. Det kan være både epost-liser og personlige epost-adresser. Man kan legge til flere. Skill alle epost-adressene med mellomrom, semikolon eller komma.  ","version":"Next","tagName":"h2"},{"title":"Ulike varsler til utvalgte mottakere​","type":1,"pageTitle":"Varsling av nye subscriptions o.l.","url":"/docs/datadeling/veiledere/api-manager/varsling-for-api-eiere#ulike-varsler-til-utvalgte-mottakere","content":" Det er også mulig å legge til flere notifications, om du f.eks. vil at en epost-liste skal få epost kun når noen ber om tilgang og kun dette, mens eier av API-et skal få alle varsler. Man må være administrator for å legge til en ny. Har man ikke rettigheter kan man be administrator om å lage en, eiere av API-et kan endre på innstillingene i etterkant.  Som administrator kan man trykke på det blå plusstegnet og fylle inn ønsket navn, og deretter huke av for de varslene denne mottakeren vil få.  For eksempel slik:   ","version":"Next","tagName":"h2"},{"title":"Kom i gang med Fellestjenesten for Datadeling","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/innforing","content":"","keywords":"","version":"Next"},{"title":"Hva gjør jeg?​","type":1,"pageTitle":"Kom i gang med Fellestjenesten for Datadeling","url":"/docs/datadeling/veiledere/innforing#hva-gjør-jeg","content":" Forberedelser Sett deg inn i hva fellestjenesten for datadeling er, og konsekvensene.Plasser roller og ansvar i din institusjon. Se Sjekkliste for innføring av fellestjenesten for hjelp. Administrativt Kontakt Sikt for å få tilgang til fellestjenesten.Sikt avtaler formalia, som tjenesteavtale og databehandleravtale. Ta i bruk Datadelingsplattformen Vi setter opp teknisk plattformfor din institusjon og gir deg som søker administrasjonstilgang. Seoversikt over teknisk plattform for lenker og andre detaljer.Du logger på API manager, og legger inn hvem som skal være administratorer for din institusjon. Se eventueltRettigheter og roller i API managerfor mer detaljer. Etterarbeid Få registrert og publisert din institusjons API i API-katalogen, og krev at konsumentene henter data herfra. Dette vil gradvis gi en mer samlet oversikt over API og tilganger.Se veilederne for å komme i gang med IntArk.Start også på veilederen orden i eget hus, som hjelper institusjonen med å få oversikt og kontroll på hvilke data de har. ","version":"Next","tagName":"h2"},{"title":"Registrer din tjeneste for meldingsutsending","type":0,"sectionRef":"#","url":"/docs/datadeling/veiledere/meldingskø/opprett-tjeneste","content":"Registrer din tjeneste for meldingsutsending Hvordan du registrerer din tjeneste i Selvbetjeningsportalen for RabbitMQ for å hente eller sende meldinger: Logg inn i din institusjons selvbetjeningsportal for RabbitMQ. Se oversikt over den tekniske plattformenom du ikke kjenner adressen. Velg &quot;Opprett ny applikasjon&quot;. Legg inn detaljene om tjenesten din. Velg et godt og beskrivende navn, da dette hjelper andre å finne din tjeneste.Navnet får en prefiks basert på formålet. Dette gjør det enklere å skille mellom test-, utviklings- og produksjonsmiljø. Hvis din tjeneste produserer notifikasjoner, velger du &quot;Registrer notifikasjonskilde&quot;: Legg inn dokumentajon om notifikasjonene fra din tjeneste, eller lenke til hvor det er tilgjengelig. Dette er nyttig for konsumentene som ønsker å integrere med din tjeneste, så de håndterer og tolker notifikasjonene riktig. Hent ut tilkoblingsdetaljene for din tjeneste, og legg de inn i tjenesten din. Selvbetjeningsportalen snakker med RabbitMQ fortløpende, så straks dette er gjort, har din institusjons RabbitMQ-instans allerede opprettet det som trengs for å publisere notifikasjoner: En virtual host som er navngitt etter navnet på tjenesten/applikasjonen (feks system-production-my_service). Et exchange med navn basert på tjenesten/applikasjonen (feksoutgoing_system-production-my_service). Det er her din tjeneste kan publisere sine meldinger. Selvbetjeningsportalen gir deg en del forklaringer, og til og med eksempel-kode for både uthenting og publisering av meldinger. Du kan også se RabbitMQ sin egen dokumentasjon for mer tekniske detaljer rundt meldingsutveksling.","keywords":"","version":"Next"},{"title":"Cybersikkerhetssenter for forskning og utdanning","type":0,"sectionRef":"#","url":"/docs/educsc/","content":"Cybersikkerhetssenter for forskning og utdanning Cybersikkerhetssenteret er sektorvist responsmiljø (SRM) for norsk forskning og høyere utdanning. Vi leverer en rekke sikkerhetstjenester, og er samlingspunktet for sikkerhetskompetansen i kunnskapssektoren.","keywords":"","version":"Next"},{"title":"Pilot: Scanning av lokalt nett","type":0,"sectionRef":"#","url":"/docs/educsc/pilotering/lokalscan","content":"","keywords":"","version":"Next"},{"title":"Etablering​","type":1,"pageTitle":"Pilot: Scanning av lokalt nett","url":"/docs/educsc/pilotering/lokalscan#etablering","content":" Tenesta fordrar at du allereie har ein eller fleire sensorar.  For å setje i gang treng vi:  Ei liste over nett som skal scannast (prefiks) Om ikkje kan vi ta utgangspunkt i prefiks som er delegert til dykk av Forskningsnettet. IP-adresse og gateway (for både IPv4 og IPv6) til scanning Dette inkluderer detaljar om nettmaske/CIDR.RFC1918 fungerer fint for IPv4, så framt dette blir ruta riktig til alle nett som skal scannast av sensoren.IP-adressa bør opnast for i ulike brannmurar mot nett som skal scannastVi kan også tagge eit spesifikt VLAN om dette er ynskjeleg, typisk ved bruk av 802.1Q-trunk. Adresse (URL) og API-token til NAV-instansen dykkar. SjåNAV-dokumentasjonenfor korleis de opprettar token.  Det kjem etter kvart meir funksjonalitet i eduCSC-portalen for å sjå rapportar og dashboard over funn frå lokalscan. Verksemda di må derfor vera innslusa i portalen for at de skal få tilgang til denne. Sjåportal-dokumentasjonen for meir info om korleis de kjem i gang. ","version":"Next","tagName":"h2"},{"title":"Sikker kommunikasjonskanal","type":0,"sectionRef":"#","url":"/docs/educsc/trusseletterretning/sikker-kommunikasjonskanal","content":"","keywords":"","version":"Next"},{"title":"1. Beskrivelse av tjenesten​","type":1,"pageTitle":"Sikker kommunikasjonskanal","url":"/docs/educsc/trusseletterretning/sikker-kommunikasjonskanal#1-beskrivelse-av-tjenesten","content":" Sikker chatløsning for sektoren dekker både IRT-chat for operativt hendelseshåndteringspersonell og CISO-chat for informasjonssikkerhetsansvarlige. Tjenesten forutsetter basisabonnement pluss en kostnadsfri tilleggsavtale som formaliserer et IRT (incident response team eller hendelseshåndteringsteam) og binder begge parter til å behandle informasjon som utveksles etter trafikklysprotokollen (TLP).  Trafikklysprotokollen (TLP) kan du lese mer om her. Kort sagt er all informasjon som ikke eksplisitt er markert som noe annet TLP:AMBER, noe som betyr at den kan deles med andre medlemmer av eget sikkerhetsteam eller andre personer i egen virksomhet som har tjenestlig behov for den.  ","version":"Next","tagName":"h2"},{"title":"2. Formålet med tjenesten​","type":1,"pageTitle":"Sikker kommunikasjonskanal","url":"/docs/educsc/trusseletterretning/sikker-kommunikasjonskanal#2-formålet-med-tjenesten","content":" Formålet med tjenesten er primært å ha en etablert kryptert kanal mellom sikkerhetsmiljøene tilgjengelig i det et behov for dette oppstår. Den har flere svært verdifulle sekundære effekter. Fremst blant disse er at jevnlig dialog fremmer tillit og økt delingsvilje, noe som styrker hvert team enkeltvis og sektorens samlede resiliens.  ","version":"Next","tagName":"h2"},{"title":"3. Tjenestens struktur​","type":1,"pageTitle":"Sikker kommunikasjonskanal","url":"/docs/educsc/trusseletterretning/sikker-kommunikasjonskanal#3-tjenestens-struktur","content":" Tjenesten består av programvaren «Mattermost» som kjøres på en tjenermaskin som er lokalisert hos Sikt og driftes av eduCSC-personell. All informasjonsutveksling skjer kryptert etter moderne protokoller, og dekryptert informasjon er aldri tilgjengelig for noen tredjepart.  ","version":"Next","tagName":"h2"},{"title":"3.1 IRT-chat​","type":1,"pageTitle":"Sikker kommunikasjonskanal","url":"/docs/educsc/trusseletterretning/sikker-kommunikasjonskanal#31-irt-chat","content":" IRT-chat inneholder felleskanaler for hendelseskoordinering, diskusjon og småprat, samt lukkede kanaler mellom hvert enkelt IRT og eduCSC. Det finnes også kanaler for smalere temaer og for enkelthendelser av større omfang; IRT-ene står også fritt til å opprette lukkede kanaler for eget bruk.  ","version":"Next","tagName":"h3"},{"title":"3.2 CISO-chat​","type":1,"pageTitle":"Sikker kommunikasjonskanal","url":"/docs/educsc/trusseletterretning/sikker-kommunikasjonskanal#32-ciso-chat","content":" CISO-chat har en mer begrenset omfang, og har kun en faglig og en sosial felleskanal. Man kan også benytte løsningen til direktekommunikasjon med enkeltpersoner fra begge fagmiljøene.  ","version":"Next","tagName":"h3"},{"title":"4. Oppretting av kontoer​","type":1,"pageTitle":"Sikker kommunikasjonskanal","url":"/docs/educsc/trusseletterretning/sikker-kommunikasjonskanal#4-oppretting-av-kontoer","content":" Kontoer opprettes av eduCSC når et nytt IRT opprettes, og når eksisterende IRT-medlemmer etterspør tilgang for nye IRT-medlemmer. Også brukere til CISO-chat opprettes ved forespørsel via et etablert IRT. For å få konto må man bekrefte at man kjenner trafikklysprotokollen og at all informasjon i chatten skal behandles etter restriksjonene satt av denne.  ","version":"Next","tagName":"h2"},{"title":"5. Innlogging og bruk​","type":1,"pageTitle":"Sikker kommunikasjonskanal","url":"/docs/educsc/trusseletterretning/sikker-kommunikasjonskanal#5-innlogging-og-bruk","content":" Ved første innlogging må det settes et varig passord, og tofaktorautentisering via mobiltelefon må settes opp. Kontoen kan aksesseres fra nettleser, applikasjon eller mobil-app, men mobil-app kan først benyttes etter at tofaktorautentisering er satt opp.  ","version":"Next","tagName":"h2"},{"title":"6. Kanaler​","type":1,"pageTitle":"Sikker kommunikasjonskanal","url":"/docs/educsc/trusseletterretning/sikker-kommunikasjonskanal#6-kanaler","content":" Nye IRT-brukere blir i utgangspunktet påmeldt kanalene «Diskusjon» og «Sosialt», men bør også legges til «Hendelser» og «SRM – virksomhetsnavn», samt «Nyheter», «Konferanser» og «Sårbarhetsscan» dersom disse er av interesse.  ","version":"Next","tagName":"h2"},{"title":"7. Vedlikehold av kontoer​","type":1,"pageTitle":"Sikker kommunikasjonskanal","url":"/docs/educsc/trusseletterretning/sikker-kommunikasjonskanal#7-vedlikehold-av-kontoer","content":" Kontoer som ikke er i aktiv bruk sperres etter en tid, men kan raskt gjenåpnes ved kontakt med eduCSC. For maksimalt sikkerhetsnivå er muligheten til å initiere passordbytte selv slått av. Dette reflekteres imidlertid ikke helt korrekt i grensesnittet; man må kontakte eduCSC for å få hjelp til dette selv om valget ser ut til å være tilgjengelig.  ","version":"Next","tagName":"h2"},{"title":"8. Push-varsling​","type":1,"pageTitle":"Sikker kommunikasjonskanal","url":"/docs/educsc/trusseletterretning/sikker-kommunikasjonskanal#8-push-varsling","content":" Spesielt for de som er ansvarlige for et IRT eller inngår i en vaktordning anbefaler vi å sette opp push-varsling til mobil. Uansett om man ønsker å bruke mobil-appen eller bare få et mobilvarsel om at man bør kikke innom grensesnittet på PCen forutsetter dette at man installerer mobil-appen «Mattermost» fra Play Store eller App Store og sette opp denne til å bruke https://irt-chat.uninett.no med egen bruker. Under «Settings» (tannhjul til høyre på verktøylinja) → «Notifications» finner man «Mobile Push Notifications» hvor man kan velge mellom varsel for all aktivitet eller «mentions and direct messages» (samt «Never» for å skru av varslingen, for eksempel når man går av vakt). Valget nedenfor, «Words That Trigger Mentions» brukes til å konfigurere hva som skal oppfylle kriteriet for «mentions and direct messages». Her anbefaler vi å legge inn kortnavnet på teamet og eventuelle andre navn som refererer til det. ","version":"Next","tagName":"h2"},{"title":"eduCSC Portal","type":0,"sectionRef":"#","url":"/docs/educsc/trusseletterretning/educsc-portal","content":"","keywords":"","version":"Next"},{"title":"Komme i gang med eduCSC Portal​","type":1,"pageTitle":"eduCSC Portal","url":"/docs/educsc/trusseletterretning/educsc-portal#komme-i-gang-med-educsc-portal","content":" eduCSC Portal benytter Feide som innloggingsløsning.  For å få tilgang til eduCSC Portal må du gjøre følgende:  Send en epost til kontakt@sikt.no hvor du skriver at din organisasjon ønsker tilgang til eduCSC Portal.eduCSC gir din organisasjon tilgang til å aktivere eduCSC Portal i FeideDin organisasjons Feideadmin logger inn i Feide-kundeportal og aktiverer eduCSC PortalLogg inn på eduCSC Portal ved bruk av Feide. Du vil få en feilmelding - det er OK.Gi beskjed til eduCSC at de foregående stegene er utført og at vi nå kan aktivere din bruker.Du har nå tilgang til eduCSC Portal og kan gi andre brukere tilgang ","version":"Next","tagName":"h2"},{"title":"Defender-integrasjonen til eduCSC","type":0,"sectionRef":"#","url":"/docs/educsc/trusseletterretning/ms-defender","content":"","keywords":"","version":"Next"},{"title":"Kom i gang med MS Defender-integrasjonen​","type":1,"pageTitle":"Defender-integrasjonen til eduCSC","url":"/docs/educsc/trusseletterretning/ms-defender#kom-i-gang-med-ms-defender-integrasjonen","content":" Send bestilling til kontakt@sikt.no. MS Defender-integrasjonen er inkludert som en del avpluss-abonnementet.Når bestillingen er registrert, kan du sende info om ditt oppsett til eduCSC via din organisasjons egen SRM-kanal på Mattermost. eduCSC trenger følgende informasjon for å kunne aktivere MS Defender-integrasjonen for din organisasjon: Directory (tenant) IDApplication (client) IDClient secretOm du vil skru av blokkering i oppstarten (anbefalt).Om aktuelt: Et tak på hvor mange indikatorer vi skal synkronisere.  For mer tekniske detaljer, se gjennomgangen under denne seksjonen.  ","version":"Next","tagName":"h2"},{"title":"Teknisk oppsett av MS Defender-integrasjon​","type":1,"pageTitle":"Defender-integrasjonen til eduCSC","url":"/docs/educsc/trusseletterretning/ms-defender#teknisk-oppsett-av-ms-defender-integrasjon","content":" For å ta i bruk eduCSC sine sperrelister i Microsoft Defender ATP, må du lage en app-registrering hos Microsoft. eduCSC bruker denne til å kople seg til og fortløpende legge inn indikatorer som skal blokkeres eller alarmeres.  Løsningen vår bruker «custom network indicators». Dette må aktiveres manuelt gjennom Advanced-innstillingene i Defender for Endpoint. Se Advanced Settings-dokumentasjonenfor informasjon om hvordan du går fram.  I forkant bør du gjøre to vurderinger:  Hvordan skal utrulling skje? Vi kan skru av blokkering. Dermed vil ikke brukerne bli forhindret i oppstartsfasen, og evt. falske positive kan lukes ut. Vi tilrår dette alternativet for de aller fleste. Blokkering er enkelt å skru på igjen.Hvor mange indikatorer? Microsoft opererer for tiden med en grense på 15 000 egendefinerte indikatorer totalt i MS Defender. Dette inkluderer våre indikatorer. Å gå over denne grensen kan føre til at synkroniseringen feiler. Det er derfor mulig å sette et tak på hvor mange indikatorer du vil ha. Vi legger inn ferskere indikatorer eller de med høyere alvorlighet først. Det er også enkelt å justere senere.  Slik går du fram:  Lag en app-registrering (se Microsoft sin guide). Merk deg «directory (tenant) ID» og «application (client) ID».Via «API permissions», legg til WindowDefenderATP: Ti.ReadWrite («Read and write IOCs belonging to the app»). Du finner WindowsDefenderATP under APIs my organization uses, selv om det strengt tatt er et offentlig Microsoft-API.Merk: Dette er ikke det samme som tilgangene under «Microsoft Graph». Dette er et eldre API som verken vi eller Microsoft støtter.Merk: Dette er ikke det samme som Ti.ReadWrite.All. Vi anbefaler ikke å bruke denne, siden den gir større tilganger enn eduCSC trenger. Mer konkret kan vi med denne tilgangen både se og endre indikatorer du eller andre leverandører har lagt inn, som nær alltid er unødvendig. Via «Certificates and secrets», lag en client secret. Skriv ned innholdet i hemmeligheten, dvs. «client secret». Husk også at denne må meldes til eduCSC på nytt om hemmeligheten går ut på dato (expiry).  Meld deretter følgende tilbake til eduCSC (via IRT-chat):  Directory (tenant) IDApplication (client) ID(Client) secret, det vil si hemmeligheten du laget tidligere. Merk at dette er selve verdien og ikke «secret ID». Om du ikke skrev det ned, slett den gamle hemmeligheten og lag en ny. Om hemmeligheten har begrenset varighet, si hvilken dato (dag) den går ut, slik at vi kan varsle nær utgangsdato.Om du vil skru av blokkering i oppstarten (anbefalt).Om aktuelt: Et tak på hvor mange indikatorer vi skal synkronisere.  Synkronisering tar typisk 10 minutter etter det er lagt inn. Du kan stadfeste at data kommer inn ved å besøke sikkerhetsportalen til Microsoft, gå til «Settings», deretter «Endpoints», «Indicators» og til sist «URLs/Domains». Tittelen på reglene til eduCSC starter med «EDUCSC «FEEDNAVN» -».  For å teste på klient, sjekk om domenet ms-atp.dnsbrannmur[.]no lager varsel eller blokkering. Merk at det kan ta noe tid for Microsoft synkroniserer all dataen ut på endepunkt.  Ved mistanke om falske positive, kontakt eduCSC via IRT-chat. Dette gjelder spesielt ved blokkering. Det samme gjelder om du vil gjøre endringer i oppsettet, for eksempel skru på blokkering eller minke antallet indikatorer. ","version":"Next","tagName":"h2"},{"title":"Hostmaster","type":0,"sectionRef":"#","url":"/docs/hostmaster/","content":"Hostmaster Nictool - Selvbetjening for redigering av DNS-data","keywords":"","version":"Next"},{"title":"MISP (Malware Information Sharing Platform)","type":0,"sectionRef":"#","url":"/docs/educsc/trusseletterretning/misp","content":"","keywords":"","version":"Next"},{"title":"Hva er MISP​","type":1,"pageTitle":"MISP (Malware Information Sharing Platform)","url":"/docs/educsc/trusseletterretning/misp#hva-er-misp","content":" MISP (Malware Information Sharing Platform) benyttes for deling av trusselindikatorer - dette kan være ondsinnede URLer, hasher for oppdaget skadevare eller generell etterretning rundt hendelser både i egen sektor og ute i verden.  eduCSCs Phishing-Reporter-tjeneste skriver sine data til MISP slik at dette kan behandles videre i andre systemer (eksempelvis DNS Brannmur), samt deles så bredt som mulig i sektoren.  I tillegg til brukere i MISP, kan man også koble sin egen MISP-tjeneste opp mot eduCSC MISP for å utveksle (eller bare motta) data automatisk.  ","version":"Next","tagName":"h2"},{"title":"Komme i gang med brukere i eduCSC MISP​","type":1,"pageTitle":"MISP (Malware Information Sharing Platform)","url":"/docs/educsc/trusseletterretning/misp#komme-i-gang-med-brukere-i-educsc-misp","content":" Før man kan ta i bruk tjenesten, må følgende utføres:  Aktiver tjenesten eduCSC Education sector MISP for din organisasjon i Feide kundeportal. Er denne ikke tilgjengeliggjort for din organisasjon, må Sikts servicesenter kontaktes på kontakt@sikt.noBestill brukere ved å kontakte Sikts servicesenter på kontakt@sikt.no. Merk at man her skal oppgi brukernes epostadresser (som under feltet Mail på Feide innsyn)  ","version":"Next","tagName":"h2"},{"title":"Kobling MISP-til-MISP​","type":1,"pageTitle":"MISP (Malware Information Sharing Platform)","url":"/docs/educsc/trusseletterretning/misp#kobling-misp-til-misp","content":" Ønsker man å sette opp kobling mellom eventuell egen MISP-instans og eduCSC MISP, må bestilling inneholde egen organisasjons UUID (som vist på egen instans under URI organisations/index/sort:id/direction:asc), slik at vi kan konfigurere korrekt på vår side.  eduCSCs MISP-organisasjon har UUID 58385fc5-4bbf-4278-bc49-1e526fab405f. I tillegg behøver vi adressen til din organisasjons tjener, samt eventuell IPv4/IPv6-adresse denne kommuniserer fra om dette ikke samsvarer med tjenerens adresse.  Vi vil så opprette en tilgangsnøkkel som kan benyttes i egen tjener for å autentisere mot eduCSC. Vi setter stor pris på om vi også får tildelt en tilgangsnøkkel for toveis trafikk, slik at vi har mulighet til å overvåke og varsle dersom våre samarbeidende organisasjoner benytter utdaterte/sårbare MISP-instanser.  ","version":"Next","tagName":"h2"},{"title":"Bruk av MISP​","type":1,"pageTitle":"MISP (Malware Information Sharing Platform)","url":"/docs/educsc/trusseletterretning/misp#bruk-av-misp","content":" MISP (Malware Information Sharing Platform) er et relativt komplekst system med en overflod av muligheter (og muligheter for å gjøre feil, i eget system), så vi anbefaler sterkt å sette seg inn i prosjektets dokumentasjon for å få en god forståelse for hvordan tjenesten fungerer. ","version":"Next","tagName":"h2"},{"title":"Sentralisert redigering og publisering av DNS-data","type":0,"sectionRef":"#","url":"/docs/hostmaster/nictool/","content":"","keywords":"","version":"Next"},{"title":"Innledning​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"/docs/hostmaster/nictool/#innledning","content":" Som en tilleggstjeneste tilhostmaster-tjenestentilbyr Sikt også en sentralisert løsning for redigering av DNS-data via et web-grensesnitt. Grensesnittet er basert på Nictool, med noen få lokale tilpasninger. De registrerte dataene blir periodisk eksportert og publisert via en lokal navnetjener som kjører på samme maskin som web-frontenden. Denne vil opptre som såkalt skjult master for de publiserende navnetjenerne. Endrede data vil derfra pushes ut til de publiserende navnetjenerene. DNS-programvaren som benyttes til publisering er BIND.    ","version":"Next","tagName":"h2"},{"title":"Hvordan komme i gang​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"/docs/hostmaster/nictool/#hvordan-komme-i-gang","content":" De som har fått hjelp av Sikt til å gjøre DNS-endringer, vil nå kunne få mulighet til å gjøre endringer på egen hånd via det nye webgrensesnittet. Ta kontakt medhostmaster@uninett.no dersom dere er interessert i dette.  Dokumentasjon til det nye grensesnittet finnes påhttp://www.nictool.com/docs/client/.    ","version":"Next","tagName":"h2"},{"title":"Forhåndsjekking av DNS-data​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"/docs/hostmaster/nictool/#forhåndsjekking-av-dns-data","content":" Den nye løsningen gjør en del konsistenssjekk av DNS-data før de publiseres. Dersom konsistenssjekken feiler, vil ikke DNS-data bli publisert. Denne sjekken baserer seg på bruk av programmetnamed-checkzone.  Dette programmet har en rekke opsjoner som regulerer hva som skal betraktes som feil. I vårt tilfelle kommer kjøringen til å se slik ut:  named-checkzone -i full -k fail -m fail -M fail -n fail -S fail  Vi har lagt inn en mulighet for at hver enkelt kan kjøre denne forhåndsjekken direkte fra web-grensesnittet via menyvalget 'Check Zones'. Det er derfor anbefalt at man kjører denne sjekken etter å ha gjort endringer i grensesnittet.    Resultatet av kjøringen vises direkte i web-grensesnittet. Eventuelle feil markeres med rødt.    I dette eksemplet har NAPTR-posten for få felt oppgitt; 'replacement' feltet er utelatt. For definisjonen av NAPTR-posten se forøvrig RFC 2915.    ","version":"Next","tagName":"h2"},{"title":"Kjente feilmeldinger fra sonesjekk:​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"/docs/hostmaster/nictool/#kjente-feilmeldinger-fra-sonesjekk","content":" ","version":"Next","tagName":"h2"},{"title":"CNAME and other data​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"/docs/hostmaster/nictool/#cname-and-other-data","content":" Det er forsøkt registrere et alias med samme navn som et eksisterende innslag, og det er ikke mulig. CNAME betyr &quot;alle data for dette navnet finner du over der på det andre navnet&quot;. En sone skal alltid ha en SOA-post og NS-poster registrert på selve sonenavnet. Det betyr at det ikke er mulig i tillegg å registrere en CNAME-post på selve sonenavnet. For web-tjenester som skal være nåbar på selve sonenavnet må man følgelig registrere adresse-informasjonen for web-serveren (via A og evt. AAAA) i stedet.  ","version":"Next","tagName":"h3"},{"title":"... is a CNAME ... (illegal)​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"/docs/hostmaster/nictool/#-is-a-cname--illegal","content":" Flere posttyper inneholder pekere til andre navn der definisjonen for posttypen sier at det navnet man peker på ikke er tillatt å være en CNAME-post. Eksempler her er MX og SRV: disse må peke på navn som har enten A eller AAAA poster registrert direkte på seg.    ","version":"Next","tagName":"h3"},{"title":"Registrering av revers-soner​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"/docs/hostmaster/nictool/#registrering-av-revers-soner","content":" Når man har fått tildelt en revers-sone med maske som er mindre enn /24, så må soner og innhold registreres ihhtRFC 2317  Eksempel:  Dersom man har fått tildelt adresse-rommet 158.36.100.128/25, så kan man ikke registrere sonen 100.36.158.in-addr.arpa, fordi det betyr at man &quot;overtar&quot; hele /24-adresserommet, når man bare har fått delegerten del av adresserommet. Istedet skal man registrere sonen 128.100.36.158.in-addr.arpa, og så kan man lage PTR-innslag i denne.    ","version":"Next","tagName":"h2"},{"title":"DNSSEC​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"/docs/hostmaster/nictool/#dnssec","content":" For å signalisere at en sone skal signeres medDNSSEC, så er det nødvendig å registrere en dummy TXT-record _please-sign, med vilkårlig verdi, slik:    Dette vil plukkes opp av det bakenforliggende DNSSEC-maskineriet, som vil sørge for at alle poster i sonen blir signert. Det blir også etterhvert generert en DS-post (Delegation Signer), denne må plasseres i modersonen.  Merk at for soner som blir DNSSEC- signert, så blir MNAME-feltet i SOA-posten overstyrt, det settes inn ns.uninett.no i dette feltet. Den ferdig DNSSEC-signerte sonen blir publisert med ns.uninett.nosom master navnetjener, og det er derfor også naturlig å hans.uninett.no med i NS-settet for sonen. Vi har automatisk provisjonering av slave-navnetjeneste pånn.uninett.no og nac.no for soner betjent av Nictool, inklusive DNSSEC-signerte soner, så disse kan dere fritt velge å føre opp i NS-settet for sonen. For geografisk diversitet bør nac.no være med i NS-settet, da den er plassert i Oslo. Resten av maskinene er lokalisert i Trondheim. Dersom du ønsker å bruke andre slavenavnetjenere enn de som Sikt driver trenger du å slave sonen(e) deres fra ns.uninett.no. Første gang dere tar en slik slave i bruk trenger dere å spørre oss om å åpne opp for soneoverføring fra den nye slaven. Dersom dere har DNSSEC-signerte soner anbefales det sterkt å bruke TSIG for å sikre integriteten til soneoverføringen.    ","version":"Next","tagName":"h2"},{"title":"Kontaktinformasjon​","type":1,"pageTitle":"Sentralisert redigering og publisering av DNS-data","url":"/docs/hostmaster/nictool/#kontaktinformasjon","content":" Spørsmål om Nictool kan rettes til hostmaster@uninett.no ","version":"Next","tagName":"h2"},{"title":"Overordnet arkitektur","type":0,"sectionRef":"#","url":"/docs/iam/arkitektur","content":"","keywords":"","version":"Next"},{"title":"Systemarkitektur​","type":1,"pageTitle":"Overordnet arkitektur","url":"/docs/iam/arkitektur#systemarkitektur","content":" Felles IAM innfører ett felles produkt for forsyning, RapidIdentity (RI) fra Identity Automation. RI består av flere komponenter, der de viktigste er:  Rapid Identity Core Services bestående av et integrasjonslag (Connect) lagringsstruktur (MetaVault og Metadirectory) samt en portal tilgang til tjenestenRapid Identity Institution Service bestående av lokal lagringsstruktur (Portal Directory) samt en portal for sluttbrukere og forvaltere av tjenesten.  I tillegg innføres en tjeneste for sikker identifisering og kontoaktivering for nye ansatte og studenter, Sikt Account Claim.   ","version":"Next","tagName":"h2"},{"title":"Identitets og tilgangsstyring (Felles IAM)","type":0,"sectionRef":"#","url":"/docs/iam/","content":"Identitets og tilgangsstyring (Felles IAM) Identitets- og tilgangsstyring (IAM) handler om å gi studenter, forskere og ansatte riktig tilgang til digitale systemer, tjenester og ressurser, samt avslutte tilgang for brukere som ikke lenger skal ha det. Les mer om IAM-tjenesten på sikt.no Her vil du finne overordnet systemdokumentasjon, og etterhvert brukerdokumentasjon. En overordnet arkitektur for IAM og gevinster vil være en gode steder å starte for å bedre forstå IAM. Felles IAM vil livssyklusen til studenter, ansatte og gjester, og opprette, endre og fjerne digitale kontoer basert på data fra kildesystemer. Felles IAM kan identifisere en person på tvers av utdanningsinstitusjoner, og generere et nasjonalt unikt brukernavn og en identifikator. Når en bruker møter en utdanningsinstitusjon for første gang vil vedkommende møte en brukervennlig kontoaktivering, hvor man blant annet setter passordet, i henhold til felles passordpolicy. Noe av den mest sentrale funksjonaliteten i Felles IAM er tilgangsstyring til målsystemer, hvor tilganger kan settes basert på virksomhetsroller. Når tilgangsstyring er samlet og kontrollert fra et sted vil rapportering gi oversikt og kontroll, og bidra til å hjelpe med å etterlevere lovverk og standarder. Forvaltning av IAM på en institusjon er et samarbeid, hvor ansvar fordeles ut i organisasjonen, og er ikke begrenset til IT-avdelingen. Felles IAM er realisert med produktet Rapid Identity levert av Identity Automations. For mer tekniske dypdykk: Felles IAM datamodellREST API for integrasjoner mot målsystemer I referanser vil du finne flere lenker til andre kilder som dokumenterer løsningen ytterligere.","keywords":"","version":"Next"},{"title":"Ansvar og roller for IAM","type":0,"sectionRef":"#","url":"/docs/iam/ansvar","content":"","keywords":"","version":"Next"},{"title":"Varslingsrutiner​","type":1,"pageTitle":"Ansvar og roller for IAM","url":"/docs/iam/ansvar#varslingsrutiner","content":" TBD (Her bør det inn en kortfattet beskrivelse av change- og incidentsprosessene) ","version":"Next","tagName":"h2"},{"title":"Diverse tekst","type":0,"sectionRef":"#","url":"/docs/iam/diverse","content":"","keywords":"","version":"Next"},{"title":"Beskyttelse av løsningen​","type":1,"pageTitle":"Diverse tekst","url":"/docs/iam/diverse#beskyttelse-av-løsningen","content":" ","version":"Next","tagName":"h2"},{"title":"Designmessig beskyttelse​","type":1,"pageTitle":"Diverse tekst","url":"/docs/iam/diverse#designmessig-beskyttelse","content":" RI Connect inneholder høyst beskyttelsesverdig informasjon, og krever – som andre kraftfulle kontoer – en god og etterprøvbar prosess for tildeling av slike tilganger. Tilgang til Connect gis rollene «Connect Admin», «Connect Auditor», og «Connect Operator System». Det anbefales å etablere disse som bestillbare roller for personell som er organisert under IT, og med både nærmeste leder og CISO som godkjennere.  Alle ActionSet plasseres i et prosjekt, som vil være nivået tilgangsstyringen mellom institusjoner settes på.  ","version":"Next","tagName":"h3"},{"title":"Prosessmessig beskyttelse​","type":1,"pageTitle":"Diverse tekst","url":"/docs/iam/diverse#prosessmessig-beskyttelse","content":" TBD ","version":"Next","tagName":"h3"},{"title":"Brukernavn og bruker-ID","type":0,"sectionRef":"#","url":"/docs/iam/brukernavn","content":"","keywords":"","version":"Next"},{"title":"Ulike identifikatorer​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#ulike-identifikatorer","content":" ","version":"Next","tagName":"h2"},{"title":"Feide​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#feide","content":" Brukeren vil logge på med sitt lokale brukernavn etter å ha valgt institusjon. Feide overfører attributter som identifiserer brukeren til tjenesten etter pålogging. Feide bør kunne tilby både UH-ID og ePPN overført til tjenesten. Før UH-ID kan tilbys, må Feides skjema oppdateres for å gjøre plass til at denne identifikatoren kan provisjonenes.  ","version":"Next","tagName":"h3"},{"title":"Azure AD og pålogging på klient PC​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#azure-ad-og-pålogging-på-klient-pc","content":" Normalt sett vil institusjonene sette opp Azure AD slik at brukeren logger på med ePPN til Microsofts tjenester. Ønsker innspill her … Mer utfyllende info?  ","version":"Next","tagName":"h3"},{"title":"UH-ID​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#uh-id","content":" Alle studenter i IAM vil ha en livslang personsentrisk identitet som understøtter livslang læring. Dette ivaretas av et personsentrisk personregister i IAM. For å identifisere et personinnslag benytter vi en identifikator vi kaller UH-ID. UH-ID genereres første gang en person registreres inn i IAM. UH-ID skal aldri benyttes, skrives inn eller huskes av en person, men brukes kun av tjenester og systemer som skal identifisere personen over tid. UH-ID genereres som en UUIDv4, på følgende format:  985651dd-8495-4d89-865b-d2187e96702c  ","version":"Next","tagName":"h3"},{"title":"Identifikator i kildesystemer​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#identifikator-i-kildesystemer","content":" ","version":"Next","tagName":"h2"},{"title":"Identifikator i SAP​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#identifikator-i-sap","content":" IAM vil motta en strøm av nye person-registreringer fra SAP for nye ansatte og langvarige gjester. Følge identifikatorer vil følge med:  Identifikator\tBeskrivelseFødselsnummer\tFødselsnummer D-nummer\tD-nummer er et nummer som kan tildeles utenlandske personer som ikke har norsk fødselsnummer, men har et behov for identifisering overfor norske myndigheter. Ansattnummer\t(Scoped employee number) En identifikator som er unik for person per institusjon i SAP. Landkode og passnr. + institusjon\tPassnr. Hos UiT registreres også ansatte med passnr som ikke har D-nummer.  ","version":"Next","tagName":"h3"},{"title":"Identifikator i FS​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#identifikator-i-fs","content":" IAM vil motta en strøm av nye person-registreringer fra FS for nye studenter. Følgende identifikatorer vil følge med:  Identifikator\tBeskrivelseFødselsnummer\tFødselsnummer D-nummer\tD-nummer er et nummer som kan tildeles utenlandske personer som ikke har norsk fødselsnummer, men har et behov for identifisering overfor norske myndigheter. SO-nummer\tNummeret utstedes av Samordna opptak, typisk til de som hverken har, og kanskje aldri skal ha, fødselsnummer eller D-nummer. Nummeret brukes bare internt i sektoren av UH-institusjonene og ikke av personen selv. FS løpenummer\t(Scoped FS ID number) Et løpenummer som tildeles i FS. Landkode og passnr. + institusjon\tPassnr. Registreres for utenlandske utvekslingsstudenter.  IAM inneholder et personregister, som inneholder identifikatorer på alle personer som er registrert i IAM. For hvert personinnslag ligger en liste over hvilke identifikatorer (av de over) som er tilknyttet personen, og hvilke institusjoner hvor personen har en aktiv konto.  ","version":"Next","tagName":"h3"},{"title":"Identity matching​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#identity-matching","content":" Hver gang et nytt element dukker opp i datafeeden fra FS eller SAP, vil identifikatorene sjekkes mot personregisteret.  Dersom personen  finnes i personregisteret og har en aktiv tilknytning til den aktuelle institusjonen, vil ingen ny brukerkonto opprettes.finnes I personregisteret, men ikke har en aktiv tilknytning til den aktuelle institusjonen, vil en ny brukerkonto opprettes. Personregisteret vil oppdateres om nødvendig. UH brukernavn eksisterer allerede I personregisteret, og vil brukes som lokalt brukernavn ved institusjonen.Ikke finnes I personregisteret, vil et nytt innslag I personregisteret opprettes med de aktuelle identifikatorene. Et nytt UH brukernavn vil genereres for personen. Det vil også opprettes en lokal konto hos institusjonen hvor dette brukernavnet brukes.Matcher mer enn et innslag i persontabellen; så vil importprosessen stoppe opp, og legges i en kø for manuell prosessering.  ","version":"Next","tagName":"h2"},{"title":"Soft matching​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#soft-matching","content":" Dersom personen finnes fra før vil man også gjennomføre en soft match prosedyre som leter etter match med følgende kriterier:  Landkode + passnrPersonlig epostadresse + fødselsdato + etternavnMobilnummer + fødselsdato + etternavn  En slik match vil ikke forhindre duplikatoppføring, men det nye innslaget vil tagges med en referanse til potensielle duplikat-match.  ","version":"Next","tagName":"h3"},{"title":"Grensesnitt for sammenslåing av duplikater​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#grensesnitt-for-sammenslåing-av-duplikater","content":" Sentral IAM forvaltning har et grensesnitt for å slå sammen to personinnslag som er duplikater.  Sentral IAM forvaltning har et grensesnitt for presentasjon og gjennomgang av potensielle duplikater som matcher på tvers av institusjoner.  Sentral IAM forvaltning har et grensesnitt for å håndtere import av nye personer som ligger i kø og krever manuell godkjenning, siden de matcher flere enn et eksisterende innslag i personregisteret. De innslagene som matcher vil måtte slåes sammen, slik at det er maks er et innslag i personregisteret som matcher den nye personen. Alternativt må kildedata oppdateres for den nye personen, slik at den ikke lengre matcher mer enn en person.  Administrator ved institusjon har et grensesnitt for presentasjon og gjennomgang av potensielle duplikater som kun matcher på innenfor samme organisasjon.  ","version":"Next","tagName":"h3"},{"title":"Use case​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#use-case","content":" ","version":"Next","tagName":"h2"},{"title":"Eksisterende bruker pre-IAM​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#eksisterende-bruker-pre-iam","content":" Brukeren har brukernavn olanor@uib.no fra før  Brukeren vil oppstå hos UiB med følgende konto og personobjekt  Scope\tIdentifikator\tEksempelCore\tFødselsnummer\t10017012345 Core\tUH brukernavn\tOlnor1234 Core\tAktiv tilhørighet\tUiB UiB\tAnsattnummer\t100199991 UiB\tLokalt brukernavn\tOlanor UiB\tePPN\tOlanor@uib.no   Hvis brukeren senere on-boardes NTNU, vil konto og personobjekt bli som følger:  Scope\tIdentifikator\tEksempelCore\tFødselsnummer\t10017012345 Core\tUH brukernavn\tOlnor1234 Core\tUH-ID\t7d673e3c-baea-11ea-b3de-0242ac130004 Core\tAktiv tilhørighet\tUiB, NTNU UiB\tAnsattnummer\t100199991 UiB\tLokalt brukernavn\tOlanor UiB\tePPN\tOlanor@uib.no NTNU\tAnsattnummer\t10012223 NTNU\tLokalt brukernavn\tOlnor1234 NTNU\tePPN\tolnor1234@ntnu.no   ","version":"Next","tagName":"h3"},{"title":"On-boarding av person første gang i IAM​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#on-boarding-av-person-første-gang-i-iam","content":" Kari Normann registreres som ansatt fra FS til UiB:  Scope\tIdentifikator\tEksempelCore\tFødselsnummer\t11037012345 Core\tUH brukernavn\tKanor997 Core\tUH-ID\tccd950fe-baea-11ea-b3de-0242ac130004 Core\tAktiv tilhørighet\tUiB UiB\tAnsattnummer\t200299991 UiB\tLokalt brukernavn\tKanor997 UiB\tePPN\tkanor997@uib.no   Kari Normann dukker så opp som student hos NTNU:  Scope\tIdentifikator\tEksempelCore\tFødselsnummer\t11037012345 Core\tUH brukernavn\tKanor997 Core\tUH-ID\tccd950fe-baea-11ea-b3de-0242ac130004 Core\tAktiv tilhørighet\tUiB, NTNU UiB\tAnsattnummer\t200299991 UiB\tLokalt brukernavn\tKanor997 UiB\tePPN\tkanor997@uib.no NTNU\tFS løpenummer\t19283746 NTNU\tLokalt brukernavn\tKanor997 NTNU\tePPN\tkanor997@ntnu.no   ","version":"Next","tagName":"h3"},{"title":"Manuell sammenslåing av duplikater​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#manuell-sammenslåing-av-duplikater","content":" Gitt et scenario hvor vi har to personinnslag som feilaktig har oppstått som duplikater på samme person:  Kari Normann – ansatt hos UiB  Scope\tIdentifikator\tEksempelCore\tD-Nummer\t11037022334 Core\tUH brukernavn\tKanor997 Core\tUH-ID\t2798d4fd-addd-4938-864a-c026851ec4dd Core\tAktiv tilhørighet\tUiB UiB\tAnsattnummer\t200299991 UiB\tLokalt brukernavn\tKanor997 UiB\tePPN\tkanor997@uib.no   Kari Normann – student hos NTNU  Scope\tIdentifikator\tEksempelCore\tFødselsnummer\t11037012345 Core\tUH-brukernavn\tKanor384 Core\tUH-ID\tccd950fe-baea-11ea-b3de-0242ac130004 Core\tAktiv tilhørighet\tNTNU NTNU\tFS løpenummer\t19283746 NTNU\tLokalt brukernavn\tKanor384  ","version":"Next","tagName":"h3"},{"title":"Generering av nye brukernavn​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#generering-av-nye-brukernavn","content":" If override is provided Generate 5-character string using characters a-z Else Remove all whitespace characters from first and last nameReplace all non-Latin characters with appropriate Latin characters from first and last nameRemove any characters from first and last name that are not a-zUse first 2 letters of first name to generate first part of usernameAppend enough letters of last name to use 5 characters, if possibleEnsure that no reserved string from reserved string table is included in username, if so, replace offending characters Append enough random numbers to username to create a 9-character usernameVerify against namespace table to ensure uniquenessIf not unique, regenerate If uniqueness not met within 5 tries, remove a character from alpha portion and replace with random digit  ","version":"Next","tagName":"h2"},{"title":"Endre eksisterende brukernavn​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#endre-eksisterende-brukernavn","content":" Endring av brukernavn er uønsket, og ikke noe som promoteres som et valg for brukeren. Det vil allikevel være tilfeller der man ønsker å endre brukernavnet til en eksisterende bruker. Det kan for eksempel være at en bruker har fått et brukernavn som oppleves som støtende, til tross for en sjekk mot en black-list.  Helpdesk ved lokal institusjon har et grensesnitt for å oppdatere brukernavn. Denne muligheten er begrenset til brukere som kun er tilknyttet en institusjon.  Avhengig av årsak til endringen av brukernavnet, har man to alternative valg:  Generate a new username where letters are substituted with random lettersGenerate a new username where the exact same rules as used as first-time username generation.  Helpdesk godkjenner nytt automatisk generert forslag. Helpdesk kan velge å legge til nye ord til blacklist for å unngå flere like tilfeller. Brukeren får automatisk varsel om oppdatering av brukernavnet.  ","version":"Next","tagName":"h2"},{"title":"Om kontoaktivering​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#om-kontoaktivering","content":" Alle brukere med fødselsnummer aktiverer sin konto ved bruk av ID-porten. Alle andre brukere registrerer seg ved å verifisere eierskap av e-postadresse og mobilnummer. Dersom mobilnummer ikke er registrert, verifiseres kun e-postadresse.  ","version":"Next","tagName":"h2"},{"title":"Om gjestebrukere​","type":1,"pageTitle":"Brukernavn og bruker-ID","url":"/docs/iam/brukernavn#om-gjestebrukere","content":" Alle gjester (med unntak av kortvarige gjester) registreres i SAP. Kortvarige gjester kan registreres direkte i IAM av en sponsor. Institusjonene kan definere reglene for hvem som er godkjent som sponsor. ","version":"Next","tagName":"h2"},{"title":"Gevinster ved Felles IAM","type":0,"sectionRef":"#","url":"/docs/iam/gevinster","content":"Gevinster ved Felles IAM Understøtte strategiske mål Et felles IAM vil øke sektorens evne til å håndtere ytterligere digitalisering fordi det tilrettelegger for felles tjenester, harmonisering av prosesser og standardisering.Et felles IAM vil legge til rette for samhandling på tvers av institusjoner, studentmobilitet og livslang læring. Les mer om Felles IAM brukernavn og identifikatorerFelles IAM virksomhetsrollerFelles IAM livssyklus Økt sikkerhet Redusert risiko for uautorisert utlevering av informasjon på grunn av bedre håndtering av tilgangsrettigheter. Det vil være lettere å tilbakekalle utdaterte tilgangsrettigheter for utvalgte grupper.Redusert risiko for identitetsforfalskning som følge av deling av kontoer. Med en bedre løsning for identitetshåndtering og brukervennlige metoder for å få tilgang, er det mindre sannsynlig at passord og kontoer deles. Les mer om Felles IAM tilgangsstyringFelles IAM livssyklus Etterlevelse av lovverk og interne standarder Forbedret revisjonsbevis på grunn av bedre innsikt inn i tilgangsrettigheter, ansvarsfordeling og livssyklus for brukerhåndtering.Sikre oppfyllelse av lovkrav. Les mer om Felles IAM rapporteringFelles IAM livssyklusFelles IAM ansvarligsfordeling Økt operasjonell gevinst Bedre utnyttelse av interne ressurser og reduksjon av feil gjennom automatisering og standardisering av prosesser.Reduksjon av unødvendige lisenskostnader ved å fjerne brukere som ikke lenger skal ha tilgang (ta bort denne, evt utdype nærmere hvor denne kommer fra, hvor stor er den?) - se på denne, obs ikke økonomiske gevinsterØkt produktivitet og brukeropplevelse for sluttbrukere gjennom innføring av ytterligere funksjonalitet og økt selvbetjening. Les mer om Felles IAM automatisert tilgangsstyringFelles IAM enkel og brukervennlig kontoaktivering","keywords":"","version":"Next"},{"title":"Kontoaktivering","type":0,"sectionRef":"#","url":"/docs/iam/kontoaktivering","content":"Kontoaktivering All håndtering av sluttbrukerens passord for personer med norsk personnummer går via Feide Account Claim Portal. Gjennom å klikke på «Reset passord», dirigeres brukeren til ID-porten for to-faktor autentisering, og kan deretter sette nytt passord. For brukere uten norsk personnummer, må servicedesk kontaktes for nullstilling av passord. Brukeren mottar en link til nullstilling og en engangskode, som sendes som SMS til registrert mobilnummer. Brukeren kan deretter sette nytt passord. Kontiaktivering (Account Claim) er en tjeneste som leveres sammen med RI, men er en separat del. Alle nye brukere får e-post med link til denne tjenesten. Brukere med norsk fødselsnummer bruker ID-porten til å verifisere sin identitet. Det finnes noen brukere med D-nummer som har mulighet til å benytte ID-porten, men det er trolig langt færre som har denne muligheten enn de som ikke har det, så for å unngå forvirring må alle med D-nummer benytte engangspassord via oppgitt e-postadresse. Kortvarige gjester benytter seg av kontobekreftelse med eller uten Idporten autentisering.","keywords":"","version":"Next"},{"title":"Kildedata","type":0,"sectionRef":"#","url":"/docs/iam/kildedata","content":"","keywords":"","version":"Next"},{"title":"Krav til registrering av kildedata​","type":1,"pageTitle":"Kildedata","url":"/docs/iam/kildedata#krav-til-registrering-av-kildedata","content":" Studentregistreringen skjer automatisk eller manuelt hvor alle nødvendige kildedata registreres. Tildeling av tilganger initieres når aktivStudent eller aktivKlasse er sant. For ansatte så må følgende krav oppfylles for at tildeling av tilganger vil initieres:  I tillegg til verifiserbar personalia, må fødselsnummer eller D-nummer registreres. I fravær av dette må fødselsdato, passnummer og nasjonalitet registreresOrganisasjonstilhørighetMedarbeidergruppe (MG) og medarbeiderundergruppe (MUG)Stillingskode (SKO) og yrkeskode (YRK) for ansatte, oppdragstakere og langvarige gjester; for uhonorerte stillinger settes relevant YRK der det er hensiktmessigStartdatoSluttdato for oppdragstakere og langvarige gjester  ","version":"Next","tagName":"h2"},{"title":"Organisasjonsstruktur​","type":1,"pageTitle":"Kildedata","url":"/docs/iam/kildedata#organisasjonsstruktur","content":" Løsningen forutsetter at det finnes et organisasjonsregister som minimum inneholder organisasjonsenheter i SAP som har sin make i FS. Knytningen må være en-til-en, og minimum inneholde:  Informasjon om foreldreenhetUnik id for hver enhet, eksempelvis orgid for SAP og FS-id for FSUnikt kortnavn/akronym  Løsningen vil benytte kortnavn/akronym som felles identifikator i en del prosesseringer, eksempelvis i å kunne adressere samme mål bare skilt av engasjementstype, som MN-II_Ansatt og MN-II_Student.  ","version":"Next","tagName":"h2"},{"title":"Prosess for organisasjonsendring​","type":1,"pageTitle":"Kildedata","url":"/docs/iam/kildedata#prosess-for-organisasjonsendring","content":" Organisasjonsendringer forekommer, og det stilles krav til implementeringsrekkefølge slik at integriteten i tilgangsmodellene opprettholdes. Figuren viser rekkefølgen på endringer som må skje før en registrerer ansatte/studenter på en ny enhet:  Opprette organisasjonsenhet i SAP og/eller FS (antas være maker)Opprette knytningen i OrgReg med nødvendig metadataOpprette organisasjonsenhet i de målsystemer som er berørt, og som ikke håndterer endringen automatiskOppdatere regelsettet i RI   ","version":"Next","tagName":"h3"},{"title":"Livssyklus for identitet og tilgang","type":0,"sectionRef":"#","url":"/docs/iam/livssyklus","content":"","keywords":"","version":"Next"},{"title":"Livssyklus tilganger​","type":1,"pageTitle":"Livssyklus for identitet og tilgang","url":"/docs/iam/livssyklus#livssyklus-tilganger","content":" Tilganger til en bruker tildeles som følge av oppstart, endring eller avslutning av et engasjement. Dette kalles også for JML-prosesser (Joiner, Mover, Leaver). De use-casene som støttes av RI er:  Automatiske prosesser  Kildesystem\tBrukertype\tJ\tM\tL\tSpesifikasjon\tUC Inst.\tUC CoreSAP\tAnsatt\t✓\t✓\t✓\tLivssyklusprosess for alle brukertyper\t1.1-1.8\t1.1-1.4 SAP\tLangvarig gjest\t✓\t✓\t✓\tLivssyklusprosess for gjester (som registreres i SAP)\t3.1-3.5\t1.1-1.4 FS\tStudent\t✓\t✓\t✓\tLivssyklusprosess for alle studenttyper\t2.1-2.9\t2.1-2.5 RI\tAlle\t✓ Identitetsmatching 03.jan RI\tAlle\t✓ Aktiv bruker tildeles organisering, inaktiv bruker aktiveres og tildeles organisering\t4.1-4.3\t3.2-3.3 RI\tAlle ✓\tAktiv bruker fratas organisering og deaktiveres 03.apr RI\tStudent ✓ Engangsforlengelse av studenttilgang med varsling\t06.jan\t05.jan RI+AC\tAlle\t✓ Account Claim via ID-porten eller e-post 05.feb Feide\tAlle med NIN Passord reset 05.mar Helpdesk\tAlle uten NIN RI\tAlle ✓\tProvisjonerte kontoer slettes seks måneder etter at en konto er deaktivert (policy konfigurerbar mht brukertype, tid og system) 05.apr RI\tAlle*\t✓ ✓\tUH-brukernavn vil gjenbrukes hvis det eksisterer 05.mai RI\tGjester\t✓\t✓\t✓\tLivssyklusprosess for Sponsored Guests\t06.mai\t  Manuelle prosesser  Kildesystem\tBrukertype\tJ\tM\tL\tSpesifikasjon\tUC Inst.\tUC CoreRI\tAlle ✓\tAdministrator deaktiverer tilgang lokalt eller til sentral tjeneste\t05.jan\t4.1, 4.4 Alle ✓ Administrator re-aktiverer inaktiv tilgang eller til sentral tjeneste\t05.feb\t4.2, 4.5 Alle ✓ Endring av brukernavn\t05.mar\t04.mar Alle ✓ Overstyring av sentrale kildedata 04.jun Alle\t✓ Håndtering av identitetskollisjoner 4.7-4.8  Tilgangsmodellen i RI er en kombinasjon av rolle- og attributtbasert modell. Alle brukere tildeles minst en forretningsrolle basert på engasjementets art. En forretningsrolle vil være på formen «Ansatt [iam:employee]», og være unike innenfor en institusjon . Forretningsroller kan i sin tur gi tilgang til ett eller flere målsystemer gjennom systemtilgang, som er på formen «Inspera [inspera]». En systemtilgang kan i sin tur inneholde en eller flere systemroller, som er på formen «Inspera Forfatter [inspera:author]!». Notér at «!» til slutt i rollenavnet betyr at den ikke er synlig og dermed ikke bestillbar i RI Portal. Disse rollene benyttes for automatisk tildeling alene. Bestillbare systemroller vil følgelig være uten denne suffiksen, for eksempel «Inspera Sensor [inspera:sensor]».  Det benyttes et utvidbart utvalg av parametere for å bestemme og tildele forretningsroller og systemroller.    ","version":"Next","tagName":"h2"},{"title":"Ansatte​","type":1,"pageTitle":"Livssyklus for identitet og tilgang","url":"/docs/iam/livssyklus#ansatte","content":" En JML-prosess for en ansatt kan se ut på følgende vis:    Figur: Eksempel på JML for ansatt  Løsningen baserer seg på en hendelsesdrevet arkitektur, der endringer på visse autoritative attributter genererer en melding som RI vil motta og behandle. For «Joiner» er triggeren startdato, og RI vil da få melding om dette sammen med tilhørende informasjon slik at forsyningsprosessen kan kjøres. For «Mover» er endringer på attributter som signaliserer at det er endringer i arbeidsforholdet, enten innad på eksisterende enhet eller at den ansatte får en ny stilling et annet sted i organisasjonen. For «Leaver» vil triggeren være stoppdato.  ","version":"Next","tagName":"h3"},{"title":"Studenter​","type":1,"pageTitle":"Livssyklus for identitet og tilgang","url":"/docs/iam/livssyklus#studenter","content":" En JML-prosess for en student kan se ut som følger:    Figur 6:  Trigger for «Joiner» vil være en melding om aktivStudent (alternativt aktivKlasse). For «Mover» vil det være endringer i studieforholdet inkludert nytt emne, noe som antas skje hyppig. «Leaver» vil trigges av at studiet er fullført (eller avsluttet før fullførelse) aktivStudent settes til usant.  ","version":"Next","tagName":"h3"},{"title":"Gjester​","type":1,"pageTitle":"Livssyklus for identitet og tilgang","url":"/docs/iam/livssyklus#gjester","content":" Gjester kategoriseres og registreres i henhold til følgende struktur:  | Kategori | Beskrivelse | Krav til registrering | Register | | --- | --- | --- | --- | | Kortvarige gjester | Eksterne uten krav til honorar, der varigheten av forholdet er 30 dager eller mindre. Rettigheter er forhåndsdefinert og begrenset. Brukeren får ikke Feidekonto. | Sponsor angir navn, e-post, sluttdato, og evt. mobiltelefonnummer og fødselsnummer. Gjesten gjennomgår Account claim, og knyttes til sponsorens organisasjonsenhet. Midlertidige brukernavn på formen etternavn | RI Institusjonskatalog via RI Portal | | Langvarige gjester | Eksterne uten krav til honorar. Rettigheter er forhåndsdefinert og gis ihht det tilgangsregelsett som til enhver tid er gjeldende. | Tilsvarende informasjon som ved ansattregistrering, unntatt forhold som er knyttet til lønn. | SAP | | Eksterne administratorer | Systemleverandører som har behov for administratortilgang for systemvedlikehold | TBD (ikke adressert av prosjektet) Registreres som langvarig gjest med utvidete tilgangsrettigheter.| SAP | | Oppdragstaker | Eksterne med krav til honorar | De krav som ToA-prosessen stiller | SAP | | Ekstern sensor | Ekstern med behov for tilgang til Inspera for sensur av et fag, tildelt i FS gjennom en kommisjon | De krav som ToA-prosessen stiller. Fødselsdato og passnummer kan erstatte norsk fødselsnummer eller D-nummer. YRK 2310121 skal benyttes | SAP |  ","version":"Next","tagName":"h3"},{"title":"Deaktivering av tilganger​","type":1,"pageTitle":"Livssyklus for identitet og tilgang","url":"/docs/iam/livssyklus#deaktivering-av-tilganger","content":" En «Leaver»-prosess initieres normal når en student har fullført studiet eller en ansatt eller langvarig gjest slutter, men kan også være forårsaket av at vedkommende er utestengt eller liknende. Forskjellen på disse prosessene er at ved utestengelse vil alle tilganger avsluttes umiddelbart, mens i vanlige tilfeller vil det gå 30 dager før tilgangene avsluttes. Studenter kan søke om seks måneders forlengelse av tilganger. Langvarige gjester avsluttes angitt dato. Det samme gjelder for kortvarige gjester, dog ikke utover 30 dager fra startdato. ","version":"Next","tagName":"h2"},{"title":"Passordpolicy","type":0,"sectionRef":"#","url":"/docs/iam/passordpolicy","content":"","keywords":"","version":"Next"},{"title":"Gyldige tegn​","type":1,"pageTitle":"Passordpolicy","url":"/docs/iam/passordpolicy#gyldige-tegn","content":" Passordet kan kun inneholde tegn som er en del av ISO 8859-1.  ","version":"Next","tagName":"h2"},{"title":"Passordlengde​","type":1,"pageTitle":"Passordpolicy","url":"/docs/iam/passordpolicy#passordlengde","content":" Passordet kan maksimalt inneholde 127 tegn.  Minimum lengde varierer basert på kompleksiteten til passordet.  ","version":"Next","tagName":"h2"},{"title":"Beregning av passord kompleksitet​","type":1,"pageTitle":"Passordpolicy","url":"/docs/iam/passordpolicy#beregning-av-passord-kompleksitet","content":" Kompleksiteten av et passord måles i poeng. Poengsummen et passord vil få er avhengig av bl.a. lengde og antall tegngrupper som er representert i passordet. Passordet må ha en kompleksitet på minst 32 poeng for å være gyldig.  Algoritmen for å kalkulere kompleksitets poeng:  4 poeng for det første tegnet i passordet2 poeng for hvert av de neste syv tegnHvert tegn fra tegn 9 til og med tegn 20 får 1.5 poengHvert tegn etter tegn 20 får 1 poeng6 poeng bonus hvis passordet inneholder tegn av minst tre av de fire tegngruppene (store bokstaver, små bokstaver, tall og spesialtegn)8 poeng (total) bonus dersom passordet inneholder minst to tegn for hver av de tre tegngruppene beskrevet over  Felles IAM har valgt å gjenbruke samme passord policy som er brukt ved UiO, som er godt begrunnet.  ","version":"Next","tagName":"h2"},{"title":"Gjenbruk av passord​","type":1,"pageTitle":"Passordpolicy","url":"/docs/iam/passordpolicy#gjenbruk-av-passord","content":" En bruker kan ikke gjenbruke et tidligere brukt passord.  ","version":"Next","tagName":"h2"},{"title":"Utløpstid på passord​","type":1,"pageTitle":"Passordpolicy","url":"/docs/iam/passordpolicy#utløpstid-på-passord","content":" Vi praktiserer ikke utløpstid på passord basert på anbefalinger fra blant annet National Institute of Standards and Technology (NIST).  Med et høyt kompleksitetskrav og bruk av tofaktorautentisering vil utløp av passord gjøre mer skade enn nytte.  ","version":"Next","tagName":"h2"},{"title":"Anbefalinger​","type":1,"pageTitle":"Passordpolicy","url":"/docs/iam/passordpolicy#anbefalinger","content":" Bruk helst et helt nytt og unikt passord som ikke er det samme eller ligner på det du bruker på andre nettsteder.  Vi støtter råd og anbefalinger fra Nasjonal Sikkerhetsmyndighet (NSM). ","version":"Next","tagName":"h2"},{"title":"Produktet Rapid Identity","type":0,"sectionRef":"#","url":"/docs/iam/produkt","content":"Produktet Rapid Identity Felles IAM er realisert med produktet Rapid Identity fra Identity Automations. https://www.identityautomation.com/iam-platform/ Rapid identity produktdokumentasjon","keywords":"","version":"Next"},{"title":"Prosjektdokumentasjon","type":0,"sectionRef":"#","url":"/docs/iam/prosjekt","content":"Prosjektdokumentasjon ...","keywords":"","version":"Next"},{"title":"Rapportering","type":0,"sectionRef":"#","url":"/docs/iam/rapportering","content":"Rapportering RI Portal inneholder funksjonalitet for å lage, kjøre og se rapporter for å vise hvem som har tilgang til hva. Dette krever rollen «Portal Reporting Admin/Manager». Ved oppretting av rapporter, benyttes en GUI-støttet LDAP-filterkonfigurator for å sette variabler og operatorer.","keywords":"","version":"Next"},{"title":"Referanser","type":0,"sectionRef":"#","url":"/docs/iam/referanser","content":"Referanser Produktdokumentasjon Rapid identity produktdokumentasjonRapid Identity Product API Referece Videoer Felles IAM og demo av RapidIdentityFelles IAM: Identity Automation presenterer systemløsningenErfaringer fra IAM-pilotering ved UiB og forventet innsats fra institusjonene","keywords":"","version":"Next"},{"title":"Tilgangsstyring","type":0,"sectionRef":"#","url":"/docs/iam/tilgangsstyring","content":"","keywords":"","version":"Next"},{"title":"Eksempel på tildeling av rettigheter​","type":1,"pageTitle":"Tilgangsstyring","url":"/docs/iam/tilgangsstyring#eksempel-på-tildeling-av-rettigheter","content":" Eksempel på tildeling av systemrettigheter for studenten Ola:    Eksempel på tildeling av systemrettigheter for Kari på studieadminsitrasjon:    I selvbejeningsgrensesnittet til felles IAM vises både virksomhetsroller, system entitlements og access entitlements:    ","version":"Next","tagName":"h2"},{"title":"Eksempelprosess​","type":1,"pageTitle":"Tilgangsstyring","url":"/docs/iam/tilgangsstyring#eksempelprosess","content":" Eksempelet nedenfor viser en tenkt ansatt, og hvordan en automatisk flyt kan skje. Det er AMF (Authorisation Management Framework, en kolleksjon av ulike ActionSet som implementerer ORG-ERA, en fingranulert modell for rolle- og attributtbasert tilgang) som tolker mottatte data fra SAP, og vil basert på disse tildele tre forretningsroller (Ansatt, Studieadministrativt ansatt basert på SKO+YRK og Vitenskapelig ansatt basert på stillingsKat).  I virkeligheten vil forretningsrollen Ansatt innrømmes en rekke basistilganger, mens eksempelet viser videre bare regelsettet for TPP og Inspera.    Figur 7: Eksempel på prosessering av &quot;Joiner&quot; (AMF/ORG-ERA)  ","version":"Next","tagName":"h2"},{"title":"Virksomhetsroller​","type":1,"pageTitle":"Tilgangsstyring","url":"/docs/iam/tilgangsstyring#virksomhetsroller","content":" Basert på tilgjengelig informasjon i kildesystemer.Avhengig av datakvalitet i kildesystemerStandardiseres på tvers av institusjonerMå utvikles/utvides over tid  Oversikt over virksomhetsroller  ","version":"Next","tagName":"h2"},{"title":"Regelmotor​","type":1,"pageTitle":"Tilgangsstyring","url":"/docs/iam/tilgangsstyring#regelmotor","content":" Automatiserte regler tildeler system og tilgangsrettigheter basert på forretningsroller og tilhørigheter.Standardiserte forretningsrollerRegelsett administreres per institusjonUI for enkelt vedlikehold av regelsettene vil komme i en senere versjon av felles IAMPer nå regelsett i JSON-format  ","version":"Next","tagName":"h2"},{"title":"Manuell godkjenningsflyt​","type":1,"pageTitle":"Tilgangsstyring","url":"/docs/iam/tilgangsstyring#manuell-godkjenningsflyt","content":" Ikke alle tilganger tildeles automatisk. Noen ganger må man selv, eller lederen etterspørre en spesifikk målsystemtilgang. Felles IAM har selvbetjeningsgrensesnitt både for å etterspørre tilganger, og for godkjenning, og innsyn i hvilke manuelle rettigheter man tidligere har fått tildelt.    RI Portal er grensesnittet for å bestille tilganger utover det som er gitt automatisk. Dersom det foreligger en integrasjon mot aktuelt målsystem, er det mulig å automatisk utføre forsyningen av den bestilte tilgangen så fort en slik bestilling er godkjent, så kalt halvautomatisk forsyning. Dersom det ikke foreligger noen integrasjon, benevnt manuell forsyning, kan likevel løsningen settes opp til å håndtere bestillings- og godkjenningsrutiner som fortrinnsvis oppretter sak i IT Service Managment-verktøyet for å oppnå etterprøvbarhet på bestilling og effektuering av tilganger. Det er langt å foretrekke at slike manuelle bestillinger bestilles på denne måten for å oppnå en standardisert prosess og etterprøvbar autorisasjon.  Bestillbare og manuelt tildelte tilganger involverer et eller flere godkjenningstrinn. Den eller de som er angitt som godkjennere i en flyt, vil motta en e-post og et varsel i arbeidsflytdelen i RI Portal. Forespørsler kan godkjennes eller avvises, og godkjenner kan også fylle ut begrunnelse for valget. ","version":"Next","tagName":"h2"},{"title":"UiB","type":0,"sectionRef":"#","url":"/docs/iam/uib","content":"UiB UiB var pilot for Felles IAM hvor løsningen ble produksjonsatt våren 2022, videre utrulling pågår nå ved ved andre institusjoner.","keywords":"","version":"Next"},{"title":"UiB Målsystemer","type":0,"sectionRef":"#","url":"/docs/iam/uib-targets","content":"UiB Målsystemer Oppdates med liste over målsystemer som inngår som endel av UiBs oppsett. TBD.","keywords":"","version":"Next"},{"title":"Datamodell","type":0,"sectionRef":"#","url":"/docs/iam/datamodell","content":"","keywords":"","version":"Next"},{"title":"MetaVault database skjema​","type":1,"pageTitle":"Datamodell","url":"/docs/iam/datamodell#metavault-database-skjema","content":" ","version":"Next","tagName":"h2"},{"title":"Identity Store Table​","type":1,"pageTitle":"Datamodell","url":"/docs/iam/datamodell#identity-store-table","content":" Table contains a digital identity (defined by a UH-ID) and its association with one or more unique identifiers. Unique identifiers can be a National ID, a temporary National ID, an employee number scoped for an institution, a student number scoped for an institution, an EPPN, and SO number, or a combination of attributes such as legal last name, passport number, country, and institutional affiliation.  Field\tData Type\tField Length\tNullable\tPri Key\tSource: master_employee and master_student processinguhid\tvarchar\t36\tNo\tX\tRandomly generated GUID identifier\tvarchar\t200\tNo\tX\tidentifier type + “:” + identifier value uhida\tvarchar\t36\tYes Only used when identities are merged Former uhid  ","version":"Next","tagName":"h3"},{"title":"Persons table​","type":1,"pageTitle":"Datamodell","url":"/docs/iam/datamodell#persons-table","content":" Table contains master information for all persons.  Field\tData Type\tField Length\tNullableid\tvarchar\t50\tNo uhid\tvarchar\t36\tNo uhun\tvarchar\t9\tNo status\tchar\t1\tNo eppn\tvarchar\t36\tYes employee_no\tvarchar\t45\tYes first_name\tvarchar\t254\tYes last_name\tvarchar\t254\tYes fnr\tvarchar\t12\tYes alternate_identification\tvarchar\t100\tYes birthdate\tvarchar\t10\tYes classification_group\tvarchar\t5\tYes classification_subgroup\tvarchar\t5\tYes start_date\tvarchar\t10\tYes end_date\tvarchar\t10\tYes end_reason\tvarchar\t254\tYes main_position\tvarchar\t12\tYes main_position_percent\tvarchar\t6\tYes main_organization\tvarchar\t12\tYes secondary_positions\tvarchar\t500\tYes external_id\tvarchar\t254\tYes email\tvarchar\t254\tYes telephone\tvarchar\t100\tYes personal_mobile\tvarchar\t30\tYes personal_mobile_foreign\tvarchar\t30\tYes personal_postal_code\tvarchar\t20\tYes personal_city\tvarchar\t50\tYes personal_state\tvarchar\t50\tYes personal_email\tvarchar\t100\tYes passport_number\tvarchar\t50\tYes dead\tbit Yes hard_match_conflicts\tvarchar\t4000\tYes soft_match_conflicts\tvarchar\t4000\tYes updated_date\tdate Yes extension_sent\tdate Yes extended_to\tdate Yes fs_pin\tvarchar\t12\tYes source_institution\tvarchar\t10\tNo source_system\tvarchar\t3\tNo source_id\tvarchar\t50\tNo created_at\tdatetime No updated_at\tdatetime No process_id\tvarchar\t100\tYes processed_at\tdatetime Yes  ","version":"Next","tagName":"h3"},{"title":"SAP Tables​","type":1,"pageTitle":"Datamodell","url":"/docs/iam/datamodell#sap-tables","content":" Tables contain SAP information for orgs and positions. The load tables are populated directly using API calls to SAP/IntArk. The master tables are processed using data in the load tables.  SAP Load Tables employees_loadorgs_loadpositions_load SAP Master Tables master_orgsmaster_positionsorganization  SAP master_orgs​  Field\tData Type\tField Length\tNullable\tPri Key\t**Source Table: **orgs_loadid\tvarchar\t100\tNo\tX\tsource_institution + “:” + source_system + “:orgs:” + id managed_by\tvarchar\t100\tNo\tX\tsource_institution + “:” + source_system + “:employee:” + managerEmployeeNos short_name\tvarchar\t45\tNo shortName name\tvarchar\t45\tNo name parent_id\tvarchar\t45\tYes source_institution + “:” + source_system + “:orgs:” + parentId status\tvarchar\t1\tNo “A” street\tvarchar\t100\tYes N/A city\tvarchar\t100\tYes N/A state\tvarchar\t45\tYes N/A postal_code\tvarchar\t45\tYes N/A country\tvarchar\t45\tYes N/A costcenter\tvarchar\t45\tYes costcenter source_institution\tvarchar\t45\tNo source_institution source_system\tvarchar\t45\tNo source_system source_id\tvarchar\t45\tNo id inserted_at\tdatetime No System date updated_at\tdatetime No System date processed_at\tdatetime Yes System date process_id\tvarchar\t45\tYes Internal process ID  SAP master_positions​  Field\tData Type\tField Length\tNullable\tPri Key\t**Source Table: **positions_loadid\tvarchar\t45\tNo\tX\tsource_institution + “:” + source_system + “:positions:” + id held_by\tvarchar\t45\tNo\tX\tsource_institution + “:” + source_system + “:employee:” + held_by held_from\tdate Yes held_from held_until\tdate Yes held_until status\tvarchar\t1\tNo _calculated – “A” job_code\tvarchar\t12\tYes job_code title\tvarchar\t50\tYes title organization\tvarchar\t33\tNo source_institution + “:” + source_system + “:orgs:” + organization yrk\tvarchar\t10\tYes yrk position_group\tvarchar\t50\tYes postion_group position_group_id\tvarchar\t12\tYes postion_group_id source_institution\tvarchar\t45\tNo source_institution source_system\tvarchar\t45\tNo source_system source_id\tvarchar\t45\tNo id + “:” held_by inserted_at\tdatetime No System date updated_at\tdatetime No System date processed_at\tdatetime Yes System date process_id\tvarchar\t45\tYes Internal process ID  ","version":"Next","tagName":"h3"},{"title":"FS Tables​","type":1,"pageTitle":"Datamodell","url":"/docs/iam/datamodell#fs-tables","content":" Tables contain FS information for assessment times, countries, languages, semester, student assessments, student teachers, study levels, study programs, study rights, and topics. The load tables are populated directly using API calls to FS/IntArk. The master tables are processed using data in the load tables.  FS Load tables assessmenttimes_loadcountries_loadlanguages_loadroles_loadsemester_loadstudentassessments_loadstudents_loadstudentteaching_loadstudylevels_loadstudyprograms_loadstudyrights_loadteaching_loadteachingactivity_loadtopics_load FS Master Tables master_assessmenttimesmaster_countriesmaster_languagesmaster_rolesmaster_semestermaster_studentassessmentsmaster_studentteachermaster_studylevelsmaster_studyprogramsmaster_studyrightsmaster_teachingmaster_teachingactivitymaster_topics  ","version":"Next","tagName":"h3"},{"title":"OrgReg Table​","type":1,"pageTitle":"Datamodell","url":"/docs/iam/datamodell#orgreg-table","content":" The orgreg_load table contains a list of organizations from the orgreg API endpoint.  saf\tData Type\tField Length\tNullable\tPri Key\t**API Source: **orgregsource_institution\tvarchar\t5\tNo\tX\tstatic – Action Set ‘institution’ parameter source_system\tvarchar\t10\tNo\tX\tstatic – ‘OrgReg’ external_key_source_system\tvarchar\t45\tNo\tX\texternalKeys.sourceSystem external_key_type\tvarchar\t45\tNo\tX\texternalKeys.Type external_key_value\tvarchar\t45\tNo\tX\texternalKeys.Value source_id\tvarchar\t20\tNo\tX\touId note\tvarchar\t200\tYes note english_name\tvarchar\t200\tYes englishName valid_from\tdate Yes validFrom norwegian_homepage\tvarchar\t100\tYes norwegianHomepage norwegian_name\tvarchar\t100\tYes norwegianName email\tvarchar\t45\tYes email acronym\tvarchar\t45\tYes acronym english_homepage\tvarchar\t45\tYes englishHomepage postal_code\tvarchar\t45\tYes postalAddress.postalCode country\tvarchar\t45\tYes postalAddress.country state\tvarchar\t45\tYes postalAddress.stateOrProvinceName city\tvarchar\t45\tYes postalAddress.city fax\tvarchar\t45\tYes fax visit_street\tvarchar\t100\tYes visitAddress.street visit_city\tvarchar\t45\tYes visitAddress.city visit_country\tvarchar\t45\tYes visitAddress.country visit_postal_code\tvarchar\t45\tYes visitAddress.postalCode phone\tvarchar\t45\tYes phone.countryCode + phone.number predecessors\tvarchar\t45\tYes predecessors inserted_on\tdatetime No System date updated_on\tdatetime No System date processed_on\tdatetime Yes System date process_id\tvarchar\t45\tYes Internal process ID  ","version":"Next","tagName":"h3"},{"title":"Metadirectory Core​","type":1,"pageTitle":"Datamodell","url":"/docs/iam/datamodell#metadirectory-core","content":" Attribute name\tDescription\tSourcesAMAccountName\tUhun @dn\t“cn=” + sAMAccountName + “,OU=People,OU=Accounts,DC=meta,DC=local” displayName\tfirst name + “ “ + last name userPrincipalName\tsAMAccountName + “@meta.local” idautoPersonAlternateId\tuhun givenName\tFirst name idautoId\tuhid idautoPersonOtherId\tuhid Sn\tLast name idautoPersonNationalID\tNIN or Passport Number idautoPersonBirthdate\tBirthdate idautoPersonAffiliations\tSee description below\tSAF/FS idautoPersonAffiliations (scoped)\tSee description below\tSAF/FS idautoPersonSchoolIDs\tMultivalue list of all SAP/Employee ID's associated with the person (prefixed to indicate institution of origin)\tSAP idautoPersonWorkAddress1\tUser's Work Address\tSAP idautoPersonHomeCellphone\tUser's Cell/Mobile Phone Number\tSAP idautoPersonHomeEmail\tUser's Private Email Address\tSAP idautoPersonHomePostalCode\tUser's Home Postal Code\tSAP idautoPersonHomeCity\tUser's Home Region/County (landsdeler)\tSAP idautoPersonHomeState\tUser's Home Region/County (landsdeler)\tSAP idautoPersonManagerID\tUniqueID of the user's manager\tSAP Manager\tDN of the user's manager (Used to identify a users Leder in Portal for workflow purposes only)\tSAP idautoPersonEntryDate\tOldest held-by date on a position\tSAP idautoPersonLastDateWorked\tOldest held-until date on a position unless user currently holds a position.\tSAP idautoPersonFacSchoolCodes\tMultivalued Stedkode tuple including: Cost Center Code (orgKostnadssted), Cost Center Short Name (orgKortnavn), Cost Center Long Name (navn), English Name (engelsknavn), and Stedkode (first 6 digits of cost center code)\tSAP employeeID SAP idautoPersonSchoolCodes\tMultivalue list of all Student Numbers associated with the person.\tFS idautoPersonStuSchoolCodes\tMultivalue list of all FS ID's associated with the person\tFS idautoPersonWorkAddress1\tUser's Work Address\tFS idautoPersonHomeCellphone\tUser's Cell/Mobile Phone Number\tFS idautoPersonHomeEmail\tUser's Private Email Address\tFS idautoPersonEnrollDate\tOldest held-by date on a study right, student teaching, or assessment, scoped\tFS idautoPersonLastEnrollDate\tOldest held-until date on a study right, student teaching, or assessment, unless user currently holds one, scoped.\tFS idautoPersonCourses\tStudy program codes\tFS idautoPersonPrimaryParent\tUser’s home institution. Calculated based on first school person is associated with chronologically\tFS idautoPersonSchoolCode\tStudent Number from user's Home Institution\tFS idautoPersonStuSchoolCode\tFS ID Number from user's Home Institution\tFS Mail\tUser's Email Address from Home Institution\tDerived idautoPersonDeprovisionDate\tUsed for tracking when an account was disabled in AD by RI\tDerived idautoPersonDSSSystemUpdates\tDate Connect last updated the object\tDerived idautoPersonClaimFlag\tIndicates whether an account has been claimed or not. Populated via the user account claiming process.\tClaim idautoPersonClaimDate\tIndicates the date when an account was claimed. Populated via the user account claiming process.\tClaim idautoPersonClaimCode Claim idautoPersonStatusOverride\tStatus Override Flag\tManual idautoPersonDoNotDeprovision\tBoolean to prevent disablement process from being executed\tManual idautoPersonLockoutFromSystem1\tFlag to prevent action sets from recreating/re-enabling an immediate termination account\tManual  ","version":"Next","tagName":"h2"},{"title":"idautoPersonAffiliations​","type":1,"pageTitle":"Datamodell","url":"/docs/iam/datamodell#idautopersonaffiliations","content":" Employee Separated Employee Student Separated Student  ","version":"Next","tagName":"h3"},{"title":"idautoPersonAffiliations (scoped)​","type":1,"pageTitle":"Datamodell","url":"/docs/iam/datamodell#idautopersonaffiliations-scoped","content":" AdministrativeTechnicalStaff​  dfo:stillinger/\\{id}-&gt;stillingskat -&gt; &quot;stillingskatBetegn&quot;: &quot;Administrativt personale&quot; dfo:stillinger/\\{id}-&gt;stillingskat -&gt; &quot;stillingskatBetegn&quot;: &quot;Drifts- og teknisk pers./andre tilsatte&quot;   Create: Immediately Access: On SD  Faculty​  dfo:stillinger/\\{id}-&gt;stillingskat -&gt; &quot;stillingskatBetegn&quot;: &quot;Undervisnings- og forsknings personale&quot;   Create: Immediately Access: On SD  HourlyPaid​  dfo:stillinger/\\{id}-&gt; stillingskat dfo: ansatte/\\{id}-&gt; medarbeiderundergruppe -&gt; timelønnet   Create: Immediately Access: On SD  Separated Employee​  Has an End Date associated with the position, and had no other active roles or study rights  On EndDate EOD  Deceased​  DFØ API: dead Flag = true  Immediately  Delete Employee​  Disable Date + 180d  Student​  Case 1, All bullet points are true:  Studierett = truestudieretter/{id} -&gt; .privatist = falsestudieretter/{id} -&gt; .aktivStudent = true  Case 2, all bullet points are true:  Undervisningsmelding = truestudentundervisning/{id} -&gt;.opptatt = true ('J')  Immediately on active right of study, up to 65 days prior to start date  Private Candidate​  Case 1, all bullet points are true:  Studierett = truestudieretter/{id} -&gt; .privatist = truestudieretter/{id} -&gt; .aktivStudent = true  Case 2, all bullet points are true:  Eksamensmelding = truestudentundervisning/{id} -&gt;.opptatt = false ('N')No active studierett with Privatist = false&quot;  Immediately on active study right for current semester up to 65 days prior to semester start date (there is a function in the API that will allow you to convert a semester name into a start and end date)  Leave of Absence​  fsapi:Studieretter -&gt; studentstatus -&gt; PERMISJON = TRUE idautoPersonLeaveFlag = True&quot;   Separated Students​  They will have an end date in their study right that is equal to or earlier than today  No Grace Period​  fsapi:studieretter -&gt; studentstatus  (if studentstatus = FULLFØRT or UTGÅTT or SLUTTET or UNDERKJENT --&gt; give grace flag if studentstatus = IKKE AKTIV or OVERGANG or TRUKKET or UTESTENGT or INNDRATT --&gt; no grace flag)   idautoPersonLeaveFlag = FALSE  Immediately  Deceased​  dead = y  Immediately  Delete Student​  Disable Date + 180d  Long Term Guest - Emeritus:​  dfø:ansatte/\\{id} -&gt; .medarbeidergruppe = 9 dfø:ansatte/\\{id} -&gt; .medarbeiderundergruppe = [93]   Create: Immediately Access: On SD  Long Term Guest - Visiting Researcher​  dfø:ansatte/\\{id} -&gt; .medarbeiderundergruppe = [94]   Create: Immediately Access: On SD  Long term Guest - Consultant​  dfø:ansatte/\\{id} -&gt; .medarbeiderundergruppe = [95]   ","version":"Next","tagName":"h3"},{"title":"Portal directory​","type":1,"pageTitle":"Datamodell","url":"/docs/iam/datamodell#portal-directory","content":" Attribute\tDisplay name\tDescription\tType\tExample\tMullti valueddisplayName\tDisplay Name\tPreferred Name if present, legal if not\tString\tMicky Mouse employeeNumber\tEmployee Number\tEmployee number.\tString\t30202 givenName\tFirst Name\tUser’s first name.\tString\tMicky idautoID\tUHID\tUHID (Automatically Generated GUID)\tString\t3ddf4822-77ed-4c27-909e-7c826ca10423 idautoPersonAffiliations\tAffiliations\tMultivalued field containing all birthright roles associated with the person\tString\t[Employee, Student]\t✓ idautoPersonAltUserName\tFEIDE ID\tUsername with suffix\tString\tlaols0070@uib.no idautoPersonAlternateID\tUsername\tUsername\tString\tlaols0070 idautoPersonAppRoles1\tOrgEra Affiliations\tMultivalued list of top-level affiliations used for app AuthZ\tString\t[uib:employee:MN-SEKR.MN, uib:studieadministrivt ansatt:MN-SEKR.MN] idautoPersonAppRoles2\tOrgEra Assigned Entitlements\tOrgEra Assigned Entitlements\tString\t[active directory, ldap, framework, lenel, ms office 365]\t✓ idautoPersonAppRoles5\tProvisioned Entitlements\tEntitlements that have been provisioned to the user.\tString\t[lenel, apex]\t✓ idautoPersonAppRoles6\tRequestable Entitlements\tEntitlements that have been requested by the user\tString\t[topdesk:operator, topdeskoperatorgroup:4c28c38f-c1aa-4685-a5d6-dad78923f241]\t✓ idautoPersonAppRoles7\tTarget IDs\tUser identifiers for synced target systems.\tString\t[topdeskoperator:0f24b366-35d4-4891-98d5-b4a372c099ec, topdesk:d03b615b-5a86-47a4-a06d-45925c5431a6]\t✓ idautoPersonBadgeID\tEmployee Lenel Card Number\tEmployee Lenel Access Card Number\tString\t12345 idautoPersonBarcodeNumber\tStudent Lenel Card Number\tStudent Lenel Access Card Number\tString\t12345 idautoPersonBirthDate\tBirthdate\tUser's Date of Birth\tString\t30.01.1980 idautoPersonClaimCode\tClaim Code\tClaim Code with date it was assigned\tString\t11f08c1d-c265-45d7-89d2-7a371f5629c5\t20210413 idautoPersonClaimFlag\tAccount Claimed\tIndicates whether or not the account has been claimed\tBoolean\tTRUE idautoPersonCourses\tCourse Enrollments\tList of course enrollment with enrollment type\tString\tstudentteacher:BIO201\t✓ idautoPersonCriterias1Desc\tHard Match Conflicts\tHard Match Conflicting username\tMulti-Lined String\tperut4623 idautoPersonCriterias2Desc\tSoft Match Conflicts\tSoft Match Conflicting username\tMulti-Lined String\tperut4623 idautoPersonDeprovisionDate\tDeprovision Date\tUsed for tracking when an account was disabled in AD by RI\tString\t31.03.2021 idautoPersonDeptCodes\tOrgEra Roles String\tExample Value Employees: 1011\t2310 104 idautoPersonEmailAddresses\tEmail Aliases\tEmail aliases\tEmail\telmik7024@uib.no\t✓ idautoPersonEmplClasses\tEmployee Classifications\tEmployee Classifications\tString\tAdministrativt personale\t✓ idautoPersonEmplTypes\tOrg Tuple\tMultivalued Stedkode tuple\tString\t0012240000\tMN-IFT idautoPersonEnrollDate\tEnrollment Date\tStudent Enrollment Date\tString\t31.07.2020 idautoPersonFacDeptCodes\tDepartment Codes\tEmployee Department Codes\tString\tPRMEDISIN\t✓ idautoPersonFacSchoolCodes\tStudent Tuple String\t0012600000\tMN-BIO idautoPersonHireDate\tHire Date\tEmployee Hire Date\tString\t31.07.2021 idautoPersonHomeCellphone\tPersonal Phone\tCell Phone\tString\t4741234568 idautoPersonHomeDirectory\tHome Directory\tPath to user’s home directory\tString idautoPersonHomeEmail\tPersonal Email\tPersonal Email Address\tEmail Single-Valued\tmicky@hotmail.com idautoPersonJobTitles\tTitle\tJob Titles\tString\t1113 Prosjektleder\t✓ idautoPersonLastDateWorked\tLast WorkDate\tEmployee Last Date Worked\tString\t31.07.2021 idautoPersonLastEnrollDate\tLast Enroll Date\tLast Enroll Date\tString\t31.07.2021 idautoPersonLocCodesJobCodes\tOrgEra Org Path\tOrg Tuple\tString\tuib\tMED idautoPersonMailNotificationDate\tClaim Notification Date\tDate claim account email sent\tString\t31.07.2021 idautoPersonManagerID\tManager UHID\tUniqueID of the user's manager\tString\t4c28c38f-c1aa-4685-a5d6-dad78923f241 idautoPersonNationalID\tNIN / Passport\tNational ID Number or Passport Number\tString\t5095103105 idautoPersonOfficePhone\tOffice Phone\tOffice Phone Number\tString\t########## idautoPersonOtherID\tUHID\tUH-ID - Unique Identifier\tString\t4c28c38f-c1aa-4685-a5d6-dad78923f241 idautoPersonPINCode\tPIN Code\tLenel Access Card PIN Code\tString\t1234 idautoPersonPositionCode\tPositions\tSAP Position Code\tString\t30002225 idautoPersonPrimaryAffiliation\tPrimary Affiliation\tUser’s primary affiliation\tString\tEmployee idautoPersonSchoolCode\tStudent Number\tStudent Number\tString\t38019 idautoPersonStatusOverride\tStatus Override\tStatus Override\tString\ttrue idautoPersonWorkAddress1\tWork Address\tWork Address\tString\tArmauer Hansens hus, Haukelandsveien 28, 5020 Bergen, no idautoStatus\tStatus\tStatus\tString\tA\tI l\tHome City\tUser’s Home City\tString\tOslo mail\tEmail\tUser’s institution email address\tEmail Single-Valued\tuser@uib.no manager\tManager\tDN of User’s Manager\tDN postalCode\tHome Postal Code\tUser's Home Postal Code\tString\t1234 sn\tLast Name\tUser’s last name\tString\tMouse title\tTitle\tUser’s title.\tString\t1434 Rådgiver uid\tUser name\tUser name\tString\tlaols0070\t  More comments:  idautoPersonEmplTypes Multivalued Stedkode tuple including: Cost Center Code (orgKostnadssted), Cost Center Short Name (orgKortnavn), Cost Center Long Name (navn), English Name (engelsknavn), and Stedkode (first 6 digits of cost center code) idautoPersonDeptCodes employees: ORG-ERA Tuple including origin, orgid, parent, org, advorg, SKO, YRK, RoleStudents: studentstatus=aktiv|privatist=false|student=true  ","version":"Next","tagName":"h2"},{"title":"AD​","type":1,"pageTitle":"Datamodell","url":"/docs/iam/datamodell#ad","content":" ","version":"Next","tagName":"h2"},{"title":"Feide LDAP​","type":1,"pageTitle":"Datamodell","url":"/docs/iam/datamodell#feide-ldap","content":" Temporary dump, needs to be updated.  Feide attributes\tFeide requirements\tExamples from UiB current LDAP\tExamples from IA Sprint\tComment\tComments - mkw\tSTATUS2.1.1. cn\tREQUIRED\tGisle Aas\tprboy8135 Was mentioned to use username value during demo session on 2021.04.07, Please Confirm expectations- 2021.04.14 - mkw\tOPEN - We have received conflicting requirements. During demo it was requested we use username. Please confirm desired format. 2.1.2. displayName\tREQUIRED\tGisle Aas\tPraktisk Bøye OK 2.1.3. norEduPersonLegalName\tREQUIRED\tGisle Aas\tPraktisk Bøye OK 2.1.4. givenName\tREQUIRED\tGisle\tPraktisk OK 2.1.5. sn\tREQUIRED\tAas\tBøye OK 2.1.6. eduPersonPrincipalName\tREQUIRED\tgaa041@uib.no\tprboy8135@uib.no OK 2.1.7. uid\tREQUIRED\tgaa041\tprboy8135 OK 2.1.8. norEduPersonNIN\tREQUIRED\t01019012345\t28067900100 OK 2.1.9. mail\tREQUIRED\tGisle.Aas@uib.no mail is missing in the example output\tDirect sync from mail in PortalLDAP, this data point exists now. 2021.04.14 - mkw\tFIXED 2.1.10. userPassword\tREQUIRED\txxx\txxx OK 2.1.11. eduPersonAffiliation\tREQUIRED\temployee\tstaff\tmember\tfaculty\temployee 2.2.2. eduPersonOrgUnitDN\tRECOMMENDED\tou=221000,ou=organization,dc=uib,dc=no\tou=MN-SEKR,ou=organization,dc=uib,dc=no\tThe DN need to point to an existing DN refering the organization unit/org. The eduorg is following the eduorg schema .If RI is not populating / updating the orgUnit objects in LDAP, there is no other system that does that, consequently is would have to be done in a manual process.\tAdjustment made to fit existing example - 2021.04.17 - mkw\tFIXED 2.2.4. eduPersonPrimaryOrgUnitDN\tRECOMMENDED ou=MN-SEKR,ou=organization,dc=uib,dc=no\tAdjustment made to fit existing example - 2021.04.17 - mkw\tFIXED 2.1.12. eduPersonOrgDN\tREQUIRED\to=Universitetet i Bergen,dc=uib,dc=no\to=Universitetet i Bergen,dc=uib,dc=no\tAdded OU verification to eduPersonPrimaryOrgUnitDN, disbled in logic OU is not in development LDAP.How to handle when OU is not found/verified? - 2021.04.07 - mkw\tOPEN - Is there a default OU that should be used to handle cases when the defined OU is not found? 2.1.13. schacHomeOrganization\tREQUIRED\tuib.no\tuib.no OK 2.1.14. norEduPersonAuthnMethod\tREQUIRED Not in Target Design Workbook, need information how to populate (GA, SMS, etc) 2021.04.17 - mkw\tFUTURE 2.1.15. norEduPersonServiceAuthnLevel\tREQUIRED Not in Target Design Workbook, need information how to populate - 2021.04.17 - mkw\tFUTURE Where in LDAP and AD do you want the UH-ID and UH-username? UH-ID is a new concept that IAM introduces.Conseqently it is not used by any services today, but oviously it needs to be available for any servies to start using it. We can skip UH-ID for go live, but it should be available for inclusion at a later time. It is likely that a separate Feide schema attribute is needed for UH-ID.\tNeed desitnation LDAP attribute to utilize - 2021.04.17 - mkw\tOPEN - we would like an attribure to store UH-ID for more efficient user object matching in the future. UH-username is a new concept that IAM introduces.Conseqently it is not used by any services today, but oviously it needs to be available for any servies to start using it. We can skip UH-ID for go live, but it should be available for inclusion at a later time. It is likely that a separate Feide schema attribute is needed for UH-username\tNeed desitnation LDAP attribute to utilize - 2021.04.17 - mkw\tFUTURE 2.2.1. eduPersonEntitlement\tRECOMMENDED eduPersonEntitlements should include a list of text strings that represent what permissions that user has.IAM needs to choose a namespace that we control. The format is URN, and by choosing a URL, we may later create APIs and lookup services. Sugggestion is to prefix all values with:https://iam.sikt.no/We should also populate both entitlements and business roles, and these needs to be separate namespaces. We can use:https://iam.sikt.no/entitlements/https://iam.sikt.no/roles/System entitlements have a single machine readable ID, such as:https://iam.sikt.no/entitlements/feidehttps://iam.sikt.no/entitlements/insperaAccess entitlmenets have a second field specifying more details, such as:https://iam.sikt.no/entitlements/inspera:authorhttps://iam.sikt.no/entitlements/framework:adminBusiness roles should also be populated:https://iam.sikt.no/roles/iam:studadm(for now we start with only the business role. The engagmenet role and org path may be added later)\tNot in Target Design Workbook, need information how to populate, unable to acess iam.sikt.no - 2021.04.17 - mkw\tOPEN - Need detailed specifications on how to populate this or it will be a FUTURE requirement 2.2.3. eduPersonPrimaryAffiliation\tRECOMMENDED\tstaff\tfaculty Use prioritization from Target Applications Requirements\tFIXED 2.2.5. eduPersonScopedAffiliation\tRECOMMENDED\tmember@uib.no\tstaff@uib.no\temployee@uib.no\tfaculty@uib.no\temployee@uib.no 2.2.6. eduPersonOrcid\tRECOMMENDED Not in Target Design Workbook, need information how to populate - 2021.04.17 - mkw\tFUTURE 2.2.7. mobile\tRECOMMENDED\t+47 93241450\t+47 10000000 OK 2.2.8. preferredLanguage\tRECOMMENDED FUTURE 5.1. norEduOrgAcronym\tOPTIONAL Not in Target Design Workbook, need information how to populate - 2021.04.17 - mkw\tFUTURE 5.2. norEduPersonBirthDate\tOPTIONAL 19790628 OK 5.3. norEduPersonLIN\tOPTIONAL uib.no:ansatt:120100 OK 5.4. eduOrgIdentityAuthNPolicyURI\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.5. eduOrgHomePageURI\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.6. eduOrgWhitePagesURI\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.7. eduPersonAssurance\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.8. eduPersonNickname\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.9. eduPersonPrincipalNamePrior\tOPTIONAL Should contain a list of prior eppn values, when a &quot;person&quot; changes the eppn. An example is when two acounts is merged.\tNot in Target Design WorkbookNot in eduPerson LDAP schema LDIF provided - 2021.04.17 - mkw\tOPEN - Attribute not in current schema provided for development. This will be FUTURE unless we receive updated specifications. 5.10. facsimileTelephoneNumber\tOPTIONAL Not in Target Design Workbook, need information how to populate - 2021.04.17 - mkw\tFUTURE 5.11. homePhone\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.12. homePostalAddress\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.13. jpegPhoto\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.14. l (localityName)\tOPTIONAL BERGEN Not in Target Design WorkbookAttribute added 2021.04.07 - mkw\tFIXED 5.15. labeledURI\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.16. manager\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.17. postalCode\tOPTIONAL 5008 Not in Target Design WorkbookAttribute added 2021.04.07 - mkw\tFIXED 5.18. postOfficeBox\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.19. street\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.20. title\tOPTIONAL\tSenioringeniør\tMat-nat fak., sekretariatet,\tShould be fetched from the attribute idautoPersonJobTitles in portal directory\tAdjustment made to fit existing example - 2021.04.17 - mkw\tFIXED 5.21. userCertificate\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE 5.22. userSMIMECertificate\tOPTIONAL Not in Target Design Workbook - 2021.04.17 - mkw\tFUTURE employeeType\tNOT FEIDE\tansatt\tansatt\tElin had some comment about the priority of how to calculate this value. It should be the same as primary affiliation\tUsing prioritization provided in Target Application Requirements -scw\tOK shadowMax\tNOT FEIDE\t390\t390 OK loginShell\tNOT FEIDE\t/bin/bash\t/bin/bash OK uidNumber\tNOT FEIDE\t39508\t123456 OK sambaPrimaryGroupSID\tNOT FEIDE\tS-1-5-21-556026149...\txxx OK sambaAcctFlags\tNOT FEIDE\txxx\txxx OK objectclass\tNOT FEIDE\ttop\tperson\torganizationalPerson\tinetOrgPerson\teduPerson sambaPasswordHistory\tNOT FEIDE\txxx\txxx OK departmentNumber\tNOT FEIDE\t221000\t120100 OK gidNumber\tNOT FEIDE\t4601\t3600 OK gecos\tNOT FEIDE\tGisle Aas\tPraktisk Bøye OK o\tNOT FEIDE\tUniversitetet i Bergen\tUniversitetet i Bergen OK shadowLastChange\tNOT FEIDE\t18568\t1616002056000 OK postalAddress\tNOT FEIDE\tIT-avdelingen $ Kalfarveien 31 $ 5020 BERGEN\tMN-SEKR $ $ 5008 BERGEN Not in Target Design WorkbookAttribute added 2021.04.07 - mkw\tFIXED ou\tNOT FEIDE\tIT-avdelingen\tMN-SEKR OK employeeNumber 00102816 EmployeeNumber\tOK homeDirectory /usr/test OK sambaSID xxx OK ","version":"Next","tagName":"h2"},{"title":"Virksomhetsroller","type":0,"sectionRef":"#","url":"/docs/iam/virksomhetsroller","content":"Virksomhetsroller Basert på tilgjengelig informasjon i kildesystemer. Henholdsvis FS og SAP. Kvaliteten på tildeling av virksomhetsroller i IAM, vil avhenge av datakvalitet i kildesystemene. Disse virksomhetsrollene må standardiseres på tvers av institusjonene. Etter hvert som flere og flere institusjoner onboardes felles IAM kan det bli gjort justeringer på virksomhetsrollene som en del av standadardiseringsarbeidet. Virksomhetsrollene må utvikles over tid. Dette er startoppstillingen ved Felles IAM sommeren 2021: Virksomhetsrolle\tBeskrivelseAnsatt Leder BDM Stedfortredende leder Vitenskapelig ansatt Administrativt ansatt Drift/teknisk ansatt Timelønnet ansatt Studieadministrativt ansatt Student Programstudent Kursstudent Privatist Gjest Emereti Gjesteforsker Konsulent Kortvarig gjest\t","keywords":"","version":"Next"},{"title":"REST API","type":0,"sectionRef":"#","url":"/docs/iam/rest-api","content":"","keywords":"","version":"Next"},{"title":"Persons vs Accounts​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#persons-vs-accounts","content":" SCIM is basically designed as a REST-style replacement for LDAP. As such it has the same ambiguity on what the User objects represents — are they people or are they accounts that belong to people (and other entities).  In this context we declare them to be accounts and we suggest that we might extend our SCIM implementation with Person objects later. In this model a person might be the owner of multiple accounts. We also consider one of these accounts as this person's primary account. The User objects of the primary account will have a mix of attributes describing the account and attributes describing the person.  We might also have accounts that don't belong to any person. This might be accounts representing devices, applications or other systems.  ","version":"Next","tagName":"h2"},{"title":"Minimal implementation requirements​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#minimal-implementation-requirements","content":" This section defines what the lazy implementer might get away with.  Implement /Users with ability to page through the available accounts. An implementation might choose to just expose the Feide-enabled accounts.Implement /Users/{id} fetch data for the specified account.Implement /Users?filter=userName eq &quot;...&quot; to make it possible to look up a specific account.Implement /Users?userName=... as a more convenient non-standard version of the same.Make /Groups functional, but it's fine for it to just return the empty ListResponse.Post MQ message when a user object is created, modified or deleted.  The following fields should minimally be provided on user objects.  .id.meta.userName.active.displayName.name.formatted.name.givenName.name.familyName.emails[].type == &quot;work&quot; with a corresponding .value.no:edu:scim:user.accountType.no:edu:scim:user.employeeNumber.no:edu:scim:user.eduPersonPrincipalName.no:edu:scim:user.userPrincipalName  ","version":"Next","tagName":"h2"},{"title":"Events​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#events","content":" Updates to the objects exposed in this API is signaled by events to the IntArk MQ and follows the proposedSCIM Event Extension structure. Since IntArk prefers shallow messages, we don't include the .values attribute.  These events are encoded in JSON and looks like this:  { &quot;schemas&quot;: [&quot;urn:ietf:params:scim:schemas:notify:2.0:Event&quot;], &quot;resourceUris&quot;: [ &quot;https://gw-uib.intark.uh-it.no/iga/scim/v2/Users/362ff2749bfb11eabbd5600308a4105a&quot; ], &quot;type&quot;:&quot;MODIFY&quot;, &quot;attributes&quot;: [&quot;emails&quot;, &quot;name.givenName&quot;, &quot;no:edu:scim:user:userPrincipalName&quot;] }   Example topic for the message is &quot;no.uib.iga.scim.user.modify&quot;.  ","version":"Next","tagName":"h2"},{"title":"Recommended features​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#recommended-features","content":" This section expands on the minimal requirements and define some features that might be useful and that we prefer all implementations to consider.  Implement /Users?employeeNumber=...Implement /Users?studentNumber=...Implement /Users?fsPersonNumber=...Implement /Users?norEduPersonNIN=...Implement functional /Groups and /Groups/{id} that expose the same groups available from LDAP/AD.More attributes on user objects, especially .phoneNumbers and .enterprise.manager.Search for users by name and other attributes.Implement /Persons and /Persons/{id} endpoints. A schema for person objects is yet to be defined.  ","version":"Next","tagName":"h2"},{"title":"Field name specification​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#field-name-specification","content":" ","version":"Next","tagName":"h2"},{"title":"User .id​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-id","content":" This should preferably be UUID-style string, but the service is free to use other formats, like letting the .userName be the .id. It should be possible to request the JSON object representing this user with an URL-path of /Users/{id}where the {id} is replaced by the value of this field.  ","version":"Next","tagName":"h3"},{"title":"User .meta​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-meta","content":" Standard SCIM meta information on this object.  ","version":"Next","tagName":"h3"},{"title":"User .userName​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-username","content":" The format of the username value should be {local-username}@{fqdn}. SCIM allows bare usernames, as well as usernames qualified with a domain. For consistency we always return fully qualified names.  This attribute is unique; no other User object will have the same .userName.  The {local-username} part must fully match the regexp pattern /[a-z][a-z0-9]{0,11}/and the full name will only contain lower case letters.  Example value: gaa041@uib.no  ","version":"Next","tagName":"h3"},{"title":"User .displayName​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-displayname","content":" For the primary account this is the same as .name.formatted. For other accounts this can be any string that is suitable for explaining the purpose of this account.  ","version":"Next","tagName":"h3"},{"title":"User .name​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-name","content":" This is the name of the owner of this account. This attribute is mandatory for primary accounts. Example value:  { &quot;formatted&quot;: &quot;Gisle Aas&quot;, &quot;familyName&quot;: &quot;Aas&quot;, &quot;givenName&quot;: &quot;Gisle&quot; }   These attributes should be latinified versions of the name of the person. If different, the original native name of the person can be represented by the non-standard attributes nativeFormatted, nativeFamilyName, nativeGivenName.  ","version":"Next","tagName":"h3"},{"title":"User .active​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-active","content":" Boolean value which is set to false for accounts that should be disabled. Users should not be able to login using this account. Any active session using this account should also be terminated.  ","version":"Next","tagName":"h3"},{"title":"User .externalId​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-externalid","content":" The identifier of the person that owns this account. It is preferable that/Persons/{externalId} fetches information on the person. For UH-IAM this field will be the UH-ID (a person oriented UUID value).  ","version":"Next","tagName":"h3"},{"title":"User .emails​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-emails","content":" The email addresses associated with this account. The email addresses are tagged with a type field. The tag &quot;work&quot; is used for the main email address, even for students.  Example value:  [ { &quot;type&quot;: &quot;work&quot;, &quot;value&quot;: &quot;Gisle.Aas@uib.no&quot; }, { &quot;type&quot;: &quot;internal&quot;, &quot;value&quot;: &quot;gaa041@uib.no&quot; }, { &quot;type&quot;: &quot;vanity&quot;, &quot;value&quot;: &quot;gisle@uib.no&quot; } ]   ","version":"Next","tagName":"h3"},{"title":"User .phoneNumbers​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-phonenumbers","content":" The public phone numbers associated with this account. The phone numbers are tagged with a type field. The tag &quot;work&quot; used for preferred contact option. The tag &quot;mobile&quot; can be used when the mobile phone is not the preferred option. The tag &quot;secure&quot; is a phone suitable for use as 2nd-factor verification (via SMS).  The phone numbers themselves are represented in the full international format prefixed with &quot;+&quot; and without internal spaces or dashes.  Example value:  [ { &quot;type&quot;: &quot;work&quot;, &quot;value&quot;: &quot;+4793241450&quot; }, { &quot;type&quot;: &quot;secure&quot;, &quot;value&quot;: &quot;+4793241450&quot; }, { &quot;type&quot;: &quot;mobile&quot;, &quot;value&quot;: &quot;+4793241450&quot; } ]   ","version":"Next","tagName":"h3"},{"title":"User .profileUrl​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-profileurl","content":" URL of the university home page for the owner of this account.  ","version":"Next","tagName":"h3"},{"title":"User .entitlements​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-entitlements","content":" List of strings representing entitlements for this account. Not sure if we should use this for anything.  ","version":"Next","tagName":"h3"},{"title":"User .roles​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-roles","content":" List of business roles associated with this user. Apply the tags &quot;staff&quot;, &quot;guest&quot; or &quot;student&quot; when appropriate. This list of roles might be extended later. Universities can introduce private roles by prefixing them with their reverse domain name, e.g. &quot;no.uib.breiflabb&quot;.  ","version":"Next","tagName":"h3"},{"title":"User .no:edu:scim:user​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-noeduscimuser","content":" This attribute contains the object where we extend the user object with fields specific to Norwegian UH domain. The string is also the name of a schema and should be found in the .schemas attribute as well.  ","version":"Next","tagName":"h3"},{"title":"User .no:edu:scim:user.accountType​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-noeduscimuseraccounttype","content":" Describe what kind of account this is. The value is &quot;primary&quot; for the primary account of a person. Each person can only have a single primary account.  The value is &quot;admin&quot; for accounts to be used for privileged access and other administrative puposes.  The value is &quot;test&quot; for accounts that is used for testing only.  The value is &quot;rpa&quot; for accounts used by automation scripts.  ","version":"Next","tagName":"h3"},{"title":"User .no:edu:scim:user.employeeNumber​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-noeduscimuseremployeenumber","content":" This is the DFØ ID for the employee that owns this account. Only present for primary accounts.  ","version":"Next","tagName":"h3"},{"title":"User .no:edu:scim:user.studentNumber​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-noeduscimuserstudentnumber","content":" This is the student number for the person that owns this account. Only present for primary accounts.  ","version":"Next","tagName":"h3"},{"title":"User .no:edu:scim:user.fsPersonNumber​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-noeduscimuserfspersonnumber","content":" This is the FS ID (personløpenummer) for the person that owns this account. This field can only be present for primary accounts.  ","version":"Next","tagName":"h3"},{"title":"User .no:edu:scim:user.norEduPersonNIN​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-noeduscimusernoredupersonnin","content":" This is the Norwegian &quot;fødselsnummer&quot; for the person that owns this account. The identifier can be a real NIN, a D-number og S-number. This field can only be present for primary accounts.  This attribute value is somewhat confidential and should only be passed to clients with special reasons to require this.  ","version":"Next","tagName":"h3"},{"title":"User .no:edu:scim:user.eduPersonPrincipalName​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-noeduscimuseredupersonprincipalname","content":" The Feide-ID of this user account is specified in this field. This field is absent for accounts not available through Feide.  It will have the same value as the eduPersonPrincipalName attribute in LDAP and specified norEdu*.  Example value: gaa041@uib.no  ","version":"Next","tagName":"h3"},{"title":"User .no:edu:scim:user.userPrincipalName​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-noeduscimuseruserprincipalname","content":" This is the login name for Microsoft login. This is the same attribute as userPrincipalName in AD and Azure AD.  It would be a good idea for this value to be the same as .eduPersonPrincipalNamebut UiB has unfortunately diverged.  Example value: Gisle.Aas@uib.no  ","version":"Next","tagName":"h3"},{"title":"User .enterprise​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-enterprise","content":" This is the standard SCIM enterprise extension object. The real full name of this attribute is urn:ietf:params:scim:schemas:extension:enterprise:2.0:Userbut we shortened references to it in this description to .enterprise. The wire protocol will use the full name.  Implementations are not required to provide this extension.  ","version":"Next","tagName":"h3"},{"title":"User .enterprise.employeeNumber​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-enterpriseemployeenumber","content":" This is the DFØ ID for the employee that owns this account. If both are present, this should have the same value as .no:edu:scim:user.employeeNumber.  ","version":"Next","tagName":"h3"},{"title":"User .enterprise.costCenter​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-enterprisecostcenter","content":" This is the account number used for expenses related to the owner of this account. Not sure if this is useful.  ","version":"Next","tagName":"h3"},{"title":"User .enterprise.organization​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-enterpriseorganization","content":" The Norwegian name of the organisation that the owner of this account belongs to. For staff and students this will be the name of the school. For guest this might be the name of the organisation they come from.  ","version":"Next","tagName":"h3"},{"title":"User .enterprise.division​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-enterprisedivision","content":" The Norwegian name of primary faculty that the owner of this account belongs to.  ","version":"Next","tagName":"h3"},{"title":"User .enterprise.departement​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-enterprisedepartement","content":" The Norwegian name of primary institute that the owner of this account belongs to.  ","version":"Next","tagName":"h3"},{"title":"User .enterprise.manager​","type":1,"pageTitle":"REST API","url":"/docs/iam/rest-api#user-enterprisemanager","content":" For primary accounts, this is set to reference the primary user account of the manager of the person that owns this account. All non-primary accounts should set this to reference the primary account of their owner.  Additional information on the manager can be obtained from /Users/{enterprise.manager.id}. The .enterprise.manager.displayName is just a copy of the .displayName of the manager account itself.  Example value:  { &quot;id&quot;: &quot;452ff2749bfb11eabbd5600308a4105a&quot;, &quot;displayName&quot;: &quot;Nina Kaurel&quot; }  ","version":"Next","tagName":"h3"},{"title":"KUDAF","type":0,"sectionRef":"#","url":"/docs/kudaf/","content":"KUDAF KUDAF is about sharing data in the Norwegian knowledge sector. Metadata means &quot;data about data&quot;, and is defined as the data providing information about one or more aspects of the data (Wikipedia). The field names and data values that can be obtained from a data source are not necessarily self-explanatory, and were likely not designed to make sense to external agents. That's the reason we need detailed metadata, containing information about: DefinitionsIdentifiersMeasurement unitsMeasurementsCodingEtc.. This document describes how the Kudaf project uses metadata to enable data consumers (e.g. researchers) to find and request the data they need from data providers. How this data is actually kept by the data provider, and how to obtain it, is an entirely different matter. KUDAF aims at abstracting that as much as possible in order to concentrate on the data description part, which is what the data consumer is mostly concerned with. The information about this shared data has two fundamental levels: Catalog/Discovery level: Upon entering Kudaf, the end-user can browse a Data Catalog of all the available data. The Kudaf Catalog provides a top-level overview of all Datasets/APIs shared by the different Data Providers, but no details about the data contained therein.Variables/Evaluation level: Describes the data within the different Datasets.","keywords":"","version":"Next"},{"title":"Protect data endpoint","type":0,"sectionRef":"#","url":"/docs/kudaf/data-protect","content":"","keywords":"","version":"Next"},{"title":"Validate Feide token​","type":1,"pageTitle":"Protect data endpoint","url":"/docs/kudaf/data-protect#validate-feide-token","content":" Extract JSON Web Token (JWT) from the HTTP request's Authorization header using Bearer schema.Locate the public key needed for decoding the token by visitinghttps://auth.dataporten.no/.well-known/openid-configuration and look for property jwks_uri.Extract the public key found in the JSON Web Key Set (JWKS) URL from the previous step.Verify that the JWK's key identifier (kid) is the same as the received token's kid.Decode the received token using public key, expected audience (being your datasource's identifier) and RS256 algorithm.Validate token. See theJSON Web Token (JWT) Profile for OAuth 2.0 Access Tokensfor full details about JWT access token validation. Ensure iss has to be https://auth.dataporten.noEnsure aud contains your datasource's identifier.Ensure current time is in the interval between the iat and exp timestamps.  ","version":"Next","tagName":"h2"},{"title":"Data authorization​","type":1,"pageTitle":"Protect data endpoint","url":"/docs/kudaf/data-protect#data-authorization","content":" Having validated the Feide token you should extract subject identifier subin the token.Make a GET request tohttps://kudaf-core.paas2.uninett.no/api/v1/permissions/{SUBJECT_ID}/{DATASOURCE_ID}with parameters SUBJECT_ID from previous step and DATASOURCE_ID being your known datasource identifier from Kundeportalen.In the response, extract the token from the property authroizations.Validate KUDAF token Extract JSON Web Token (JWT) from the HTTP request's Authorization header using Bearer schema.Locate the public key needed for decoding the token by visitinghttps://kudaf-core.paas2.uninett.no/api/v1/auth/.well-known/openid-configurationand look for property jwks_uri.Extract the public key found in the JSON Web Key Set (JWKS) URL from the previous step.Verify that the JWK's key identifier (kid) is the same as the received token's kid.Decode the received token using public key, expected audience (being your datasource's identifier) and RS256 algorithm.Validate token. See theJSON Web Token (JWT) Profile for OAuth 2.0 Access Tokensfor full details about JWT access token validation. Ensure iss has to be kudaf-core.paas2.uninett.no/api/v1/authEnsure aud contains your datasource's identifier.Ensure current time is in the interval between the iat and exp timestamps. Decode the token and map out the array of variables inside the datasource property.Authorize access to data based on permitted variables from previous step. ","version":"Next","tagName":"h2"},{"title":"Enable data sharing with KUDAF","type":0,"sectionRef":"#","url":"/docs/kudaf/data-sharing","content":"Enable data sharing with KUDAF This section describes how to enable data sharing with KUDAF. Prerequisite: A URL endpoint that exposes data you want to share Users in KUDAF explore data in a catalogue. KUDAF does not store or fetch your data and therefore depends on metadata to provide the users with relevant information about your data. It is therefore necessary to take your raw data and describe it in the form of metadata. Steps to enable data sharing with KUDAF: Describe your data as metadata by following this guideExpose your metadata from an URL endpointCreate a datasource in Kundeportalen, providing both data and metadata endpoints.Protect your data endpoint with token validation and authorization logic described in this guide.","keywords":"","version":"Next"},{"title":"Variables and Metadata","type":0,"sectionRef":"#","url":"/docs/kudaf/variables","content":"","keywords":"","version":"Next"},{"title":"Variable naming guidelines​","type":1,"pageTitle":"Variables and Metadata","url":"/docs/kudaf/variables#variable-naming-guidelines","content":" The name of a Variable should:  Describe what the datum is measuringConsist of a single string in capital letters, made up of keywords separated by underscores (_).In line with the Kudaf objective to maximize data-sharing potential, it would be preferrable to write the keywords in English.It must be the same as the name of the Measure Variable data structure within the Variable.The name must be UNIQUE within the set of Variables from a given data source.  How to choose the keywords in the Variable's name:  The 1st keyword (before the first underscore) in the name indicates the data source. Examples: Feide public API: &quot;FEIDEAPI&quot;Feide Statistics database: &quot;FEIDESTATS&quot;Lånekasen: &quot;LK&quot; The 2nd keyword (or group of keywords) should summarize what the variable is measuring. Examples: School names: &quot;SCHOOL_NAMES&quot; (in this case not technically a &quot;measure&quot;, more of a qualifier)Login event counts: &quot;LOGINS&quot;Multi-factor authentication event counts: &quot;MFAS&quot; The 3rd keyword (or group of keywords) should point out the unique identifier(s) of the Variable. Examples: If the login event counts are accumulated for each organization: &quot;ORG&quot;If the multi-factor authentication event counts are accumulated for each combination of organization and authentication method: &quot;ORG_METHOD&quot; The last keyword (if present) can indicate the variable's temporality: If the temporality type is &quot;FIXED&quot;, we can omit it.Otherwise for the other temporality types, choose one of: &quot;ACCUM&quot;, &quot;STATUS&quot;, &quot;EVENT&quot;.  A complete example from the above could be &quot;FEIDESTATS_LOGINS_ORG_SP_ACCUM&quot;. This Variable would thus refer to data that:  Comes from the Feide Statistics data source.Measures login event counts.Each measure is identified by an organization and a service provicder.The measures (login event counts) are accumulated over a given time period. ","version":"Next","tagName":"h2"},{"title":"KUDAF and Metadata standards","type":0,"sectionRef":"#","url":"/docs/kudaf/metadata-standard","content":"","keywords":"","version":"Next"},{"title":"DCAT-AP-NO (Data Catalog Vocabulary)​","type":1,"pageTitle":"KUDAF and Metadata standards","url":"/docs/kudaf/metadata-standard#dcat-ap-no-data-catalog-vocabulary","content":" This is the Norwegian implementation of the international DCAT standard. At this level one can discover different data sources in the Felles datakatalog, for example.  Among the many different concepts included in this standard, three important concepts are relevant to the Kudaf architecture:  A Catalog dcat:Catalog is defined as &quot;a curated collection of metadata about resources (e.g., datasets and data services in the context of a data catalog)&quot;. A Dataset dcat:Dataset is defined as &quot;a collection of data, published or curated by a single agent, and available for access or download in one or more representations&quot;. This is a broad definition, which could fit a database as well as a table within a database. But also a view on a database or the results of a query. And then is the matter of the representation: a dataset could be a JSON or CSV file containing data. A Data Service dcat:DataService is defined as &quot;a collection of operations that provides access to one or more datasets or data processing functions&quot;. Here we can have, for example, an API.  ","version":"Next","tagName":"h3"},{"title":"RAIRD Information Model​","type":1,"pageTitle":"KUDAF and Metadata standards","url":"/docs/kudaf/metadata-standard#raird-information-model","content":" A Norwegian implementation of the international GSIM (General Statistical Information Model) standard. Designed to address the need to describe statistical information, this framework &quot;provides a set of standardised, consistently described information objects, which can be used as inputs and outputs in the design and the production of statistics&quot;. It was created to facilitate making Statistics Norway data available for reserchers, for example through the microdata.no portal and IDE.  This level is where the Kudaf initiative concentrates, because it enables the description (through metadata) of all the data made publicly available. The important concepts are:  Variable: Refers to the metadata describing a minimalistic unit of data that is useful for data analysis purposes. In order to make it minimalistic and flexible for data analysis purposes we use a datum-based data structure (see description below).Unit identifier: The unique identifier which singles out this unit of data.  Datum-based data structure​  A multi-variable source dataset, such that is commonly available from a data source, would be structured as GSIM Unit Data:  CASE_ID\tDOB\tMAR_STAT\tGENDER\tDATE_MAR\tDATE_SEP\tDATE_DIV0937\t1971-05-03\tM\t1\t2003-08-04\t-\t-  This is the typical database structure that we know well, where the CASE_ID field is the identifier (primary key) field for the whole row. The value found in a cell of that row would constitute a single DATUM, i.e. the value that populates a Data Point.    In order to provide maximum flexibility to the data researcher, we could decompose this multi-variable dataset into stand-alone, SINGLE-VARIABLE DATASETS expressed in a datum-based model. For example, the above information on the Marital Status alone could be expressed as:  IDENTIFIER\tVAR_REF\tVALUE\tSTART_DATE\tEND_DATE0937\tMAR_STAT\tM\t2003-08-04\t-  In fact we could model the entire multi-variable table from above according to the datum-based approach like this:  IDENTIFIER\tVAR_REF\tVALUE\tSTART_DATE\tEND_DATE0937\tDOB\t1971-05-03\t1971-05-03\t- 0937\tMAR_STAT\tM\t2003-08-04\t- 0937\tGENDER\t1\t1971-05-03\t-  Each such datum constitures the minimalistic unit of data we were refering to above.  And in order to describe the data contained within the datum we define a Variable. We use the siimple term Variable to refer thus to a Single-Variable Dataset.  A VARIABLE combines the meaning of a Concept with a Unit Type, to define the characteristic that is to be measured.  Finally, the metadata models for the Variable and for the Dataset are linked as shown below:     ","version":"Next","tagName":"h3"},{"title":"Describe data as metadata","type":0,"sectionRef":"#","url":"/docs/kudaf/data-describe","content":"","keywords":"","version":"Next"},{"title":"Kickstarter​","type":1,"pageTitle":"Describe data as metadata","url":"/docs/kudaf/data-describe#kickstarter","content":" In this section we will explain the thought process of generating metadata from some raw data.  Say we have some raw data that describes a vehicle's history of color change. This data is represented in the table below:  ID\tType\tColor\tColor start date\tColor stop date1\tUnicycle\tRed\t1970-01-01\t2000-01-01 1\tUnicycle\tBlue\t2000-01-01 2\tBycicle\tGreen\t1990-02-03\t  A good starting point to generate metadata is to examine the data to discover potential individual metadata variables.  We can think of each column in this table as a potential variable:  IDTypeColorColor start dateColor stop date  A variable can either be an identifier variable or a measure variable. We need to distinguish which of the listed potential variables are of each type.  Let us start by defining the identifier variable first.  ","version":"Next","tagName":"h2"},{"title":"Identifier variable​","type":1,"pageTitle":"Describe data as metadata","url":"/docs/kudaf/data-describe#identifier-variable","content":" A identifier variable is a description of the identifier column of the table. By going through the rows in the table we can see that the &quot;ID&quot; column uniquely identifies a vehicle. We can see in the first row the unicycle identified by ID=1 starts with a red color for a period. Then in the second row we can see the same unicycle changed its color from red to blue because it had a paint job. Lastly, the third row describes the vehicle color for a different vehicle.  Now that we have discovered the identifier variable we can start to describe it. The identifier variable description should contain a unit type and the identifier column name. Already we know that column name is &quot;ID&quot;. Lastly, we need to figure out the unit type. The unit type is what type of unit the variables describes. By looking at all of the columns we can determine that this table describes vehicles, so we will define our unit type for this dataset as &quot;Vehicle&quot;.  Using all the information we can start with creating a JSON object to represent our identifier variable as shown below.  { &quot;identifierVariables&quot;: [ { &quot;name&quot;: &quot;ID&quot;, &quot;label&quot;: &quot;Vehicle identifier&quot;, &quot;keyType&quot;: { &quot;name&quot;: &quot;Vehicle&quot;, &quot;label&quot;: &quot;Vehicle&quot; } } ] }   In the JSON object we have used the field &quot;name&quot; to refer to the column name in the table, while the label is a description of the same, but can be changed to be more legible in user interfaces.  ","version":"Next","tagName":"h3"},{"title":"Measure variable​","type":1,"pageTitle":"Describe data as metadata","url":"/docs/kudaf/data-describe#measure-variable","content":" By looking at the remaining potential variables we can assume that the rest are measure variables:  TypeColorColor start dateColor stop date  We can start by defining the column &quot;Type&quot; as a measure variable JSON object shown below.  { &quot;identifierVariables&quot;: [ { &quot;name&quot;: &quot;ID&quot;, &quot;label&quot;: &quot;Vehicle identifier&quot;, &quot;keyType&quot;: { &quot;name&quot;: &quot;Vehicle&quot;, &quot;label&quot;: &quot;Vehicle&quot; } } ], &quot;measureVariable&quot;: { &quot;name&quot;: &quot;Type&quot;, &quot;label&quot;: &quot;Vehicle type&quot; } }   Measure variables have a temporality type, so the next step is to identify this.  Temporality​  Temporality is a state of time, and the possible temporality types are these:  FIXED - data that do not change over timeEVENT - data that may vary over timeSTATUS - data of specific points in time, that do not describe what happens between the points in timeACCUMULATED – a sum of periodically recorded data from an entire period  By investigating the first variable type we can assume that the type of a vehicle will likely not change. When looking at the small table we can confirm this and see that it does not change making this variable a good candidate for the temporality type FIXED.  We can therefore add the field &quot;temporality&quot; to our JSON object and give it the value &quot;FIXED&quot;, which is shown below.  { &quot;identifierVariables&quot;: [ { &quot;name&quot;: &quot;ID&quot;, &quot;label&quot;: &quot;Vehicle identifier&quot;, &quot;keyType&quot;: { &quot;name&quot;: &quot;Vehicle&quot;, &quot;label&quot;: &quot;Vehicle&quot; } } ], &quot;measureVariable&quot;: { &quot;name&quot;: &quot;Type&quot;, &quot;label&quot;: &quot;Vehicle type&quot; }, &quot;temporality&quot;: &quot;FIXED&quot; }   We have now successfully generated the variable &quot;Type&quot;. So let us take a look at &quot;Color&quot; next.  We start by wrapping our JSON object in an array since we are now introducing a new element. In this new JSON object we have reused the identifier variable object we previously created since the &quot;Color&quot; variable also has the same identifier variable. Then we create a measure variable object with name and label that fits the &quot;Color&quot; variable.  [ { &quot;identifierVariables&quot;: [ { &quot;name&quot;: &quot;ID&quot;, &quot;label&quot;: &quot;Vehicle identifier&quot;, &quot;keyType&quot;: { &quot;name&quot;: &quot;Vehicle&quot;, &quot;label&quot;: &quot;Vehicle&quot; } } ], &quot;measureVariable&quot;: { &quot;name&quot;: &quot;Type&quot;, &quot;label&quot;: &quot;Vehicle type&quot; }, &quot;temporality&quot;: &quot;FIXED&quot; }, { &quot;identifierVariables&quot;: [ { &quot;name&quot;: &quot;ID&quot;, &quot;label&quot;: &quot;Vehicle identifier&quot;, &quot;keyType&quot;: { &quot;name&quot;: &quot;Vehicle&quot;, &quot;label&quot;: &quot;Vehicle&quot; } } ], &quot;measureVariable&quot;: { &quot;name&quot;: &quot;Color&quot;, &quot;label&quot;: &quot;Vehicle color&quot; } } ]   We have most of the basics defined, now we can take a look at temporality. Taking &quot;Colo start date&quot; and &quot;Color stop date&quot; into account, we see that &quot;Color&quot; data changes over time. This means that this is a good candidate for the temporality type &quot;Event&quot;. We can also identify that the time points in &quot;Color start date&quot; and &quot;Color stop date&quot; are coherent which excludes it from being of temporality type STATUS.  Since we have identified this variable to be the temporality type EVENT, we simply create a &quot;temporality&quot; field within our JSON object and gives it the value &quot;EVENT&quot;, as shown below.  [ { &quot;identifierVariables&quot;: [ { &quot;name&quot;: &quot;ID&quot;, &quot;label&quot;: &quot;Vehicle identifier&quot;, &quot;keyType&quot;: { &quot;name&quot;: &quot;Vehicle&quot;, &quot;label&quot;: &quot;Vehicle&quot; } } ], &quot;measureVariable&quot;: { &quot;name&quot;: &quot;Type&quot;, &quot;label&quot;: &quot;Vehicle type&quot; }, &quot;temporality&quot;: &quot;FIXED&quot; }, { &quot;identifierVariables&quot;: [ { &quot;name&quot;: &quot;ID&quot;, &quot;label&quot;: &quot;Vehicle identifier&quot;, &quot;keyType&quot;: { &quot;name&quot;: &quot;Vehicle&quot;, &quot;label&quot;: &quot;Vehicle&quot; } } ], &quot;measureVariable&quot;: { &quot;name&quot;: &quot;Color&quot;, &quot;label&quot;: &quot;Vehicle color&quot; }, &quot;temporality&quot;: &quot;EVENT&quot; } ]   In cases where we have an EVENT temporality type, the &quot;Color start date&quot; and &quot;Color stop date&quot; must be included as attribute variables within the measure variable of &quot;Color&quot;.  Attribute variable​  An attribute variable describes temporal attributes of data and is optional because variables with temporality type FIXED has no relation to time.  Depending on the temporality type of the variable:  FIXED - (i.e. time-invariant) we do not include this.ACCUMULATED - we would typically include two attribute variables: START and STOP. If only one is included, that would mean: All data until the given stop time if only STOP is included, and since the earliest available data.All data since the given start time if only START is included, and up until the latest available data. STATUS - we always DO include TWO attribute variables: START andSTOP, with THE SAME dates.EVENT - we DO include ONE or TWO attribute variables, depending on how we want to characterize the event in question. It could be: START and STOPdates/times, or INSTANT  We then add JSON object describing the attribute variables to our variable, as shown below.  [ { &quot;identifierVariables&quot;: [ { &quot;name&quot;: &quot;ID&quot;, &quot;label&quot;: &quot;Vehicle identifier&quot;, &quot;keyType&quot;: { &quot;name&quot;: &quot;Vehicle&quot;, &quot;label&quot;: &quot;Vehicle&quot; } } ], &quot;measureVariable&quot;: { &quot;name&quot;: &quot;Type&quot;, &quot;label&quot;: &quot;Vehicle type&quot; }, &quot;temporality&quot;: &quot;FIXED&quot; }, { &quot;identifierVariables&quot;: [ { &quot;name&quot;: &quot;ID&quot;, &quot;label&quot;: &quot;Vehicle identifier&quot;, &quot;keyType&quot;: { &quot;name&quot;: &quot;Vehicle&quot;, &quot;label&quot;: &quot;Vehicle&quot; } } ], &quot;measureVariable&quot;: { &quot;name&quot;: &quot;Color&quot;, &quot;label&quot;: &quot;Vehicle color&quot; }, &quot;temporality&quot;: &quot;EVENT&quot;, &quot;attributeVariables&quot;: [ { &quot;label&quot;: &quot;Color start date&quot;, &quot;name&quot;: &quot;Start&quot; }, { &quot;label&quot;: &quot;Color stop date&quot;, &quot;name&quot;: &quot;Stop&quot; } ] } ]   By now you should have good starting point to continue this guide and enrich you current variables with more required fields.  ","version":"Next","tagName":"h3"},{"title":"Metadata as Single-Variable Dataset​","type":1,"pageTitle":"Describe data as metadata","url":"/docs/kudaf/data-describe#metadata-as-single-variable-dataset","content":" Metadata in KUDAF are described as a Single-Variable Dataset. For more information about the standard go here.  The JSON object below illustrates such a variable:  { &quot;name&quot;: &quot;FEIDESTATS_LOGINS_FORG_ACCUM&quot;, &quot;datasource_name&quot;: &quot;sikt&quot;, &quot;populationDescription&quot;: {...}, &quot;subjectFields&quot;: [...], &quot;temporalCoverage&quot;: {...}, &quot;temporality&quot;: &quot;ACCUMULATED&quot;, &quot;globalTemporalCoverage&quot;: {...}, &quot;temporalStatusDates&quot;: null, &quot;updatedAt&quot;: &quot;2022-09-13T09:31:22&quot;, &quot;attributeVariables&quot;: [...], &quot;identifierVariables&quot;: [...], &quot;measureVariable&quot;: {...} }   Description of fields in the schema above:  name: Name of the variable which adhere to naming guidelines.temporalityType: The temporality type which must be one of FIXED, ACCUMULATED, STATUS or EVENT.populationDescription: Description of the population describedspatialCoverageDescription: Description of the spatial distributionsensitivityLevel: The sensitivity type which must be one of PERSON_GENERAL,PERSON_SPECIAL, PUBLIC, NONPUBLIC.identifierVariables: A list containing unique identifier(s)(like a primary key in a database). This is what allows us to associate the measured value with a unit of measure. The data structure is described in this section.measureVariable: Describe(s) what is measured. The data structure is described in this section.attributeVariables: An optional list containing elements which describe the relationship to time, i.e. the EVENT PERIOD. It's optional because it depends on the Temporality Type, and the FIXED type is time-invariant. The data structure is described in this section.  The Measure, Attribute and Identifier Variables data structures are explained in more detail below.  ","version":"Next","tagName":"h2"},{"title":"Variable naming guidelines​","type":1,"pageTitle":"Describe data as metadata","url":"/docs/kudaf/data-describe#variable-naming-guidelines","content":" The name of a Variable should:  Describe what is measuredConsist of a single string in capital letters, made up of keywords separated by underscores (_).In line with the KUDAF objective to maximize data-sharing potential, it would be preferable to write the keywords in English.It must be the same as the name of the Measure Variable data structure within |the Variable.The name must be UNIQUE.  How to structure keywords in the name using contained information in the variable:  The 1st keyword (before the first underscore) is a shortened alias from yourdata source identifier. Examples: Feide public API: &quot;FEIDEAPI&quot;Feide Statistics database: &quot;FEIDESTATS&quot;Lånekassen: &quot;LK&quot; The 2nd keyword (or group of keywords) should summarize what is measured. Examples: School names: &quot;SCHOOL_NAMES&quot; (in this case not technically a &quot;measure&quot;, more of a qualifier)Login event counts: &quot;LOGINS&quot;Multi-factor authentication event counts: &quot;MFAS&quot; The 3rd keyword (or group of keywords) should point out the unique identifier(s). Examples: If the login event counts are accumulated for each organization: &quot;ORG&quot;If the multi-factor authentication event counts are accumulated for each combination of organization and authentication method: &quot;ORG_METHOD&quot; The last keyword (if present) can indicate the temporality: If the temporality type is &quot;FIXED&quot;, we can omit it.Otherwise for the other temporality types, choose one of: &quot;ACCUM&quot;, &quot;STATUS&quot;, &quot;EVENT&quot;.  A complete example from the above could be &quot;FEIDESTATS_LOGINS_ORG_METHOD_ACCUM&quot;. This Variable would thus refer to data that:  Comes from the Feide Statistics data source.Measures login event counts.Each measure is identified by an organization and a service provider.The measures (login event counts) are accumulated over a given time period.  ","version":"Next","tagName":"h2"},{"title":"Measure variable data structure​","type":1,"pageTitle":"Describe data as metadata","url":"/docs/kudaf/data-describe#measure-variable-data-structure","content":" Description of the measured column.  class MeasureVariable: name: str variableRole: str label: str dataType: str keyType: KeyType representedVariables: list[RepresentedVariable]   Fields:  name: Must be equal to the name generated for the name field in the SingleVariableDataset data structure.variableRole: describes the role of the variable, for measure variable it would be &quot;Measure&quot;label: Human readable name (Label) of the measure column. This should be similar to the name. Example for PERSON_INNTEKT: &quot;Person inntekt&quot;.dataType: DataType for the values in the column. One of: [&quot;STRING&quot;, &quot;LONG&quot;, &quot;DOUBLE&quot;, &quot;DATE&quot;]representedVariables: List (though normally just one element) that describes more in detail what kind of data (the WHAT and the HOW) we can find. It's a combination of: What: A characteristic of a population to be measured, andHow the measure will be represented  class RepresentedVariable: description: Description validPeriod: ValidPeriod valueDomain: ValueDomainDescribed | ValueDomainEnumerated   Fields within a Represented Variable:  description: Description of the column contents. Example: &quot;Skattepliktig og skattefritt utbytte i... &quot;validPeriod: See definition below.valueDomain: See definition below.  ","version":"Next","tagName":"h2"},{"title":"Valid period​","type":1,"pageTitle":"Describe data as metadata","url":"/docs/kudaf/data-describe#valid-period","content":" A simple data structure that shows the beginning and end dates when the data is considered valid.  class ValidPeriod: start: datetime stop: datetime   ","version":"Next","tagName":"h3"},{"title":"Value domain​","type":1,"pageTitle":"Describe data as metadata","url":"/docs/kudaf/data-describe#value-domain","content":" The Value Domain describes the set of permissible values of the data represented. Depending on the measure, this description can become quite complex. Hence we simplify it by having two possible types of Value Domain:  Described Value Domain: When the possibilities are either infinite or just too many to manage (think of the list of all the National IDs or phone numbers, for example), we settle for a verbal description of the values.Enumerated Value Domain: When there is a manageable (finite list) of possible data values, we provide an enumeration of the possibilities, i.e. a list of Categories. An example could be a cardinal directions (north, south, east, west).  Below are the schemas for these two types of Value Domain.  For the Described Value Domain:  class ValueDomainDescribed: uriDefinition: list[str] description: Description | str measurementType: str measurementUnitDescription: str   Where:  description: A description of the domain. Example for the Variable &quot;BRUTTO_INNTEKT&quot;: &quot;Alle positive tall&quot;.measurementUnitDescription: The metric for a measurement in terms of an official unit of measurement. Example: &quot;Norske Kroner&quot;.measurementType: The type of measure which groups a set of measurement units. One of: [CURRENCY, WEIGHT, LENGTH, HEIGHT, GEOGRAPHICAL]. Where the CURRENCY type would group &quot;Norske Kroner&quot;, &quot;US Dollar&quot;, &quot;Euro&quot;, etc.uriDefinition: Link(s) to external resource(s) describing the domain.  And for the Enumerated Value Domain:  class ValueDomainEnumerated: uriDefinition: list[str] codeList: list[Code]   Where:  codeList: A list of Categories for the domain, where each Category has a predefined Code assigned to it. Each of these Codes includes a description and validity period.  class Code: categoryTitle: list[Description] code: str validPeriod: ValidPeriod   Examples of the two possible value domains​  Described value domain (with description)​  This example belongs to a Variable where the measure is a person's accumulated gross income:  &quot;valueDomain&quot;: { &quot;uriDefinition&quot;: [], &quot;description&quot;: [{&quot;languageCode&quot;: &quot;no&quot;, &quot;value&quot;: &quot;Norske Kroner&quot;}], &quot;measurementType&quot;: &quot;CURRENCY&quot;, &quot;measurementUnitDescription&quot;: [{&quot;languageCode&quot;: &quot;no&quot;, &quot;value&quot;: &quot;Norske Kroner&quot;}] }   Enumerated value domain (with codeList)​  The second example belongs to a Variable where the measure describes the sex of a person:  &quot;valueDomain&quot;: { &quot;uriDefinition&quot;: [], &quot;codeList&quot;: [ { &quot;code&quot;: &quot;1&quot;, &quot;categoryTitle&quot;: [ {&quot;languageCode&quot;: &quot;no&quot;, &quot;value&quot;: &quot;Mann&quot;} ], &quot;validFrom&quot;: &quot;1900-01-01&quot; }, { &quot;code&quot;: &quot;2&quot;, &quot;categoryTitle&quot;: [ {&quot;languageCode&quot;: &quot;no&quot;, &quot;value&quot;: &quot;Kvinne&quot;} ], &quot;validFrom&quot;: &quot;1900-01-01&quot; } ], &quot;sentinelAndMissingValues&quot;: [ { &quot;code&quot;: &quot;0&quot;, &quot;categoryTitle&quot;: [ {&quot;languageCode&quot;: &quot;no&quot;, &quot;value&quot;: &quot;Ukjent&quot;} ], &quot;validFrom&quot;: &quot;1900-01-01&quot; } ] }   We expect all values in this dataset to be of either code &quot;1&quot; or &quot;2&quot;, as this Variable only considers &quot;Male&quot; or &quot;Female&quot;. But we also expect a code &quot;0&quot; to be present in the Variable, where it represents &quot;Unknown&quot;. A row with &quot;0&quot; as measure is therefore not considered invalid.  ","version":"Next","tagName":"h3"},{"title":"Measure variables (with keyType)​","type":1,"pageTitle":"Describe data as metadata","url":"/docs/kudaf/data-describe#measure-variables-with-keytype","content":" Some of the Variables contain a keyType in the Measure Variable data structure as well. This is characteristic of Identifier Variables, as we'll see below, but sometimes we need a Variable which links together (relates) two Identifier Variables. (The equivalent concept in a relational database would be a Foreign Key).  As an example, let's say we have a Variable PERSON_MOR where the Identifier Variable field is a population of Unit Type &quot;PERSON&quot;, and the Measure Variable is a population of Unit Type &quot;PERSON&quot;. The measure here is representing the population's mothers.  The keyType data structure describes in detail the Unit Type for this Variable's identifier column. As explained, these are centrally defined to ensure consistency. Examples are: ORGANISASJON, TJENESTELEVERANDØR, FAMILIE, FORETAK, HUSHOLDNING, JOBB, KJORETOY, KOMMUNE, KURS, PERSON or VIRKSOMHET.  class KeyType: description: Description | str label: str name: str   Then it may be defined like this:  keyType: In this case we would choose PERSON.name: Human readable name (Label) of the measure column. This should be similar to the Variable's name. Example for PERSON_MOR: &quot;Person mor&quot;.description: Description of the column contents. Example: &quot;Personens registrerte biologiske mor... &quot;    ","version":"Next","tagName":"h3"},{"title":"Identifier variable data structure​","type":1,"pageTitle":"Describe data as metadata","url":"/docs/kudaf/data-describe#identifier-variable-data-structure","content":" This data structure describes the identifier columns.  The identifiers are always based on a Unit Type, which is used to describe a class or group of Units based on a single characteristic, but with no specification of time and geography.  They are needed so we can associate a Measure Variable with a Unit of Measure(or more than one in some cases). A Unit is centrally defined to make joining datasets across organizations possible.  Schema of an Identifier Variable:  class IdentifierVariable: name: str variableRole: str label: str dataType: str format: str keyType: KeyType representedVariables: list[RepresentedVariable] class KeyType: description: Description | str label: str name: str   Fields:  name: A single string in capital letters, consisting of the name of the identifier field for the datum (e.g PERSON_ID). Note that this would typically be equivalent to the original database table's primary key field.variableRole: describes the role of the variable, for identifier variable it would be &quot;Identifier&quot;label: Human readable name (Label) of the identifier column. This should be similar to the field name above (e.g. for PERSON_ID: &quot;Person ID&quot;).dataType: DataType for the values in the column. One of: [&quot;STRING&quot;, &quot;LONG&quot;, &quot;DOUBLE&quot;, &quot;DATE&quot;]representedVariables: Same as for the Measure Variable described before. A list (normally just one) that describes more in detail what kind of data we can find. It's a combination of: A characteristic of a population to be measured, andHow the measure will be represented The keyType data structure describes in detail the Unit Typefor this Variable's identifier column. As explained, these are centrally defined to ensure consistency. Examples are: ORGANISASJON, TJENESTELEVERANDØR, FAMILIE, FORETAK, HUSHOLDNING, JOBB, KJORETOY, KOMMUNE, KURS, PERSON or VIRKSOMHET.  ","version":"Next","tagName":"h2"},{"title":"Possible Unit Types​","type":1,"pageTitle":"Describe data as metadata","url":"/docs/kudaf/data-describe#possible-unit-types","content":" In KUDAF you can use shared unit types or data source specific unit types.  The advantage of using shared unit types is that you will get relations with other data source's variables and therefore enable users creating joined and possibly more meaningful projection of data.  Shared Unit Types​  To use shared unit types you have to implement an unit type from this list:  ORGANISASJON: Representation of an organization. Columns with this unit type should contain ORGNR. Columns with this unit type should contain ORGNR.TJENESTELEVERANDØR: Representation of a service provider. Columns with this unit type should contain SPID.PERSON: Representation of a person. Columns with this unit type should contain FNR.FAMILIE: Representation of a family. Columns with this unit type should contain FNR.FORETAK: Representation of a foretak. Columns with this unit type should contain ORGNR.VIRKSOMHET: Representation of a virksomhet. Columns with this unit type should contain ORGNR.HUSHOLDNING: Representation of a husholdning. Columns with this unit type should contain FNR.JOBB: Representation of a job. Columns with this unit type should contain FNR_ORGNR. FNR belongs to the employee and ORGNR belongs to the employer.KOMMUNE: Representation of a kommune. Columns with this unit type should contain a valid kommune number.KURS: Representation of a course. Columns with this unit type should contain FNR_KURSID. Where FNR belongs to the participant and KURSID is the NUDB course id.KJORETOY: Representation of a vehicle. Columns with this unit type should contain FNR_REGNR. Where FNR is the owner of the vehicle, and REGNR is the registration number for the vehicle.  If no current Unit Type fits your need, feel free to suggest a new Unit Type by contacting us.  Data source specific Unit Types​  To use data source specific unit types you have to prefix your Unit Type's name with your data source identifier. For example:  The 1st keyword (before the first underscore) is a shortened alias from your data source identifier. For example: Feide public API: &quot;FEIDEAPI&quot; The 2nd keyword should be the name of the identifier field for the datum. For example: Organization identifier: &quot;ORGANISASJON&quot;  A complete example from the above could be FEIDEAPI_ORGANISASJON    ","version":"Next","tagName":"h3"},{"title":"Attribute variables data structure​","type":1,"pageTitle":"Describe data as metadata","url":"/docs/kudaf/data-describe#attribute-variables-data-structure","content":" This data structure describes TEMPORAL attributes of this particular datum.  It is optional because not every datum has a relationship to time – the Event Period.  Hence, depending on the Temporality Type of the Variable:  For a FIXED temporality type Variable (i.e. time-invariant) we DO NOT include an Attribute Variable.For an ACCUMULATED temporality type Variable we typically DO include TWOAttribute Variables: START and STOP. If only one is included, that would mean: All data until the given stop time if only STOP is included, and since the earliest available data.All data since the given start time if only START is included, and up until the latest available data. For a STATUS temporality type Variable we always DO include TWO Attribute Variables: START and STOP, with THE SAME dates.For an EVENT temporality type Variable we DO include ONE or TWO Attribute Variables, depending on how we want to characterize the Event in question. It could be: START and STOP dates/times, or INSTANT...  Schema of an Attribute Variable:  class AttributeVariable: name: str variableRole: str label: str dataType: str representedVariables: list[RepresentedVariable]   Fields:  name: A single string in capital letters.variableRole: describes the role of the variable. E.g, for a start variable the role would be &quot;Start&quot;, while stop would be &quot;Stop&quot;label: Human readable name (Label). This should be similar to the field nameabove (e.g. for START: &quot;Start&quot;).dataType: DataType for the values in the column. One of: [&quot;STRING&quot;, &quot;LONG&quot;, &quot;DOUBLE&quot;, &quot;DATE&quot;, &quot;INSTANT&quot;]representedVariables: Same as for the Measure Variable described before.  Below is an example of the Attribute Variables for an ACCUMULATED temporality type Variable:  &quot;attributeVariables&quot;: [ { &quot;dataType&quot;: &quot;Instant&quot;, &quot;label&quot;: &quot;Stoppdato&quot;, &quot;name&quot;: &quot;STOP&quot;, &quot;representedVariables&quot;: [ { &quot;description&quot;: { &quot;languageCode&quot;: &quot;nb&quot;, &quot;value&quot;: &quot;Stoppdato/sluttdato for hendelsen&quot; }, &quot;validPeriod&quot;: { &quot;start&quot;: -25567, &quot;stop&quot;: 18993 }, &quot;valueDomain&quot;: { &quot;description&quot;: &quot;N/A&quot;, &quot;unitOfMeasure&quot;: &quot;N/A&quot; } } ], &quot;variableRole&quot;: &quot;Stop&quot; }, { &quot;dataType&quot;: &quot;Instant&quot;, &quot;label&quot;: &quot;Startdato&quot;, &quot;name&quot;: &quot;START&quot;, &quot;representedVariables&quot;: [ { &quot;description&quot;: { &quot;languageCode&quot;: &quot;nb&quot;, &quot;value&quot;: &quot;Startdato/måletidspunktet for hendelsen&quot; }, &quot;validPeriod&quot;: { &quot;start&quot;: -25567, &quot;stop&quot;: 18993 }, &quot;valueDomain&quot;: { &quot;description&quot;: &quot;N/A&quot;, &quot;unitOfMeasure&quot;: &quot;N/A&quot; } } ], &quot;variableRole&quot;: &quot;Start&quot; } ]  ","version":"Next","tagName":"h2"},{"title":"Nettadministrasjon - Verktøykasse","type":0,"sectionRef":"#","url":"/docs/nettadministrasjon/","content":"Nettadministrasjon - Verktøykasse På denne siden kan du finne brukerdokumentasjon, rutiner og tips omkring Sikts Nettadministrasjonstjeneste, også kjent som &quot;Verktøykassen&quot; eller bare &quot;VK&quot;.","keywords":"","version":"Next"},{"title":"Brukerdokumentasjon Verktøykasser","type":0,"sectionRef":"#","url":"/docs/nettadministrasjon/brukerdok","content":"","keywords":"","version":"Next"},{"title":"Innledning​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#innledning","content":" Dette dokument er myntet på lokalt IKT driftspersonell ved høgskole/universitet som er bruker av verktøykassen. Verktøykassene er som kjent drevet fra Sikt. Driftsinstruks for Sikt Service Center og beredskapsvakt foreligger i tillegg. Se Sikts nettsider for en generell beskrivelse av tjenesten.  For å benytte flere av tjenestene på verktøykassen kreves naturlig nok relevant konfigurasjon av nettutstyret. Vi viser til Uninett fagspesifikasjoner (UFS-er).  Vi minner også om at svitsjene i campusnettet bør (les: må) være på en forsvarlig programvareversjon.  ","version":"Next","tagName":"h2"},{"title":"Vedlikeholdsvindu​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#vedlikeholdsvindu","content":" Tjenesten har fast vedlikeholdsvindu på tirsdager mellom klokken 10:00 og 11:00.  I dette tidsrommet kan det bli utført mindre oppgraderinger og omstart av maskinvaren, hovedsakelig i forbindelse med sikkerhetsoppdateringer, uten at det blir gitt nærmere beskjed i forkant. Det kan forekomme merkbare driftsforstyrrelser.  ","version":"Next","tagName":"h2"},{"title":"Sikkerhetsdirektiv for verktøykassene​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#sikkerhetsdirektiv-for-verktøykassene","content":" Sikt har driftsansvar for verktøykassene, se definertsikkerhetsdirektiv for detaljer rundt drift- og sikkerhetsopplegget.  Siden driftsansvaret ligger til Sikt er ryddigste løsning at kun Sikt har root-privilegier på verktøykassene. Vi er naturligvis opptatt av at dere som brukere kan gjøre tilstrekkelig for å rette feil rundt applikasjonene m.m. Dette gjør vi ved å gi dere nødvendige sudo-rettigheter, samt lesetilgang til filer (se Brukertilgang under).  ","version":"Next","tagName":"h2"},{"title":"Kontaktpunkt​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#kontaktpunkt","content":" For driftshenvendelser, ta kontakt med kontakt@sikt.noFor diskusjon/spørsmål om bruk av verktøyene, brukvk@lister.sikt.no. Alle som er registrert i Sikts driftsdatabase som teknisk ansvarlig for en verktøykasse ute hos en kunde blir automatisk abonnent på denne listen.Se ellers kontaktadresser og telefonnumre på våre hjemmesider  ","version":"Next","tagName":"h3"},{"title":"Brukertilgang til verktøykassen​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#brukertilgang-til-verktøykassen","content":" For å logge inn på verktøykassen med ssh må du ha bruker. Den som er teknisk ansvarlig for verktøykassen i din organisasjon kan bestille brukere ved å sende e-post til kontakt@sikt.no. Nye brukere vil få satt et midlertidig passord av Sikt og bør endre dette ved første gangs innlogging. Merk at det passordet du velger for denne kontoen er det samme som vil brukes dersom du setter opp verktøykassen som radiustjener for nettutstyret ditt.  Alle brukere som er i gruppe netops gis (viasudo) tilgang til å gjøre noen kommandoer som normalt trenger root-tilgang. For å se hvilke sudo-muligheter man har kan man kjøre kommandoen:  sudo -l   Blant kommandoene som kan kjøres via sudo er:  nav: Generell kommando for å kontrollere nav service apache2 reload: Relaste konfigurasjon for webtjeneren service nfsen \\[start|stop\\]: Starte/stoppe NfSen  For å relaste apache webtjeneren kan man feks kjøre kommandoen:  sudo service apache2 reload   ","version":"Next","tagName":"h2"},{"title":"tftp​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#tftp","content":" tftp-tjenesten gjør det mulig å skrive og laste konfigurasjon til/fra nettutstyret. tftp-demonen er sikret med en konfigurasjonsfil/tftpboot/tftpd.conf. For å forenkle vedlikehold blir denne filen autogenerert etter følgende kjøreregler.  Når en ny svitsj skal legges til i tftp konfigurasjonen:  Legg til svitsjen i /tftpboot/tftpd.txt Syntaks sees lett i fila: &quot;svitsj&quot; &quot;ipadresse&quot; eks: lillehammer-gsw 128.39.3.44 Etter at tftpd.txt er redigert, kjør make (du står på /tftpboot) Vips, så er ny tftp.conf laget. Du må da opprette den nye filen med touch &quot;svitsj-confg&quot; (eks: touch lillehammer-gsw-confg) Nå kan du fra svitsjen skrive konfigurasjonen til verktøykasse med write network.  Tilsvarende kan bokser slettes fra tftpd.txt / tftpd.conf.  For å bevare historikk på konfigurasjon benyttes RCS. Opplegget er automatisert ved at en nattlig cronjobb sjekker inn ny versjon av alle filer som er endret. Alle endringer blir rapportert som epost til mottagere angitt via variabelen nocoperators i fila/etc/default/uninett.conf (merk at denne filen er styrt av Sikts Puppet, ta kontakt med kontakt@sikt.no for å få gjort endringer). En varsling om låste RCS-filer (avglemte innsjekkinger) blir også sendt periodisk til samme adresse.  I tillegg til konfigurasjoner ligger også aksesslistefiler på/tftpboot. Vedlikehold av disse og arbeid med aksesslister generelt er ikke omtalt her. Se README-fil på /tftpboot for mer info på dette.En siste ting som ligger på /tftpboot er software-imager. Disse kan lastes til svitsjer for oppgradering.  ","version":"Next","tagName":"h2"},{"title":"FTP​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#ftp","content":" Fra 2023 er en FTP-tjener (basert på proftpd) et nytt mulig tilvalg på verktøykassen. Dette kommer som et alternativ til det tftp-baserte konfigurasjonsarkivet under /tftpboot og kan være nyttig dersom man har utstyrstyper som ikke støtter (eller fraråder) bruk av tftp-protokollen til å fjernlagre konfigurasjon eller hente programvare. Foreløpig gjelder dette mest Juniper-utstyr.  For å ta i bruk FTP-tjeneren på din verktøykasse må man be Sikt om å slå den på først, ved å kontakte kontakt@sikt.no.  ","version":"Next","tagName":"h2"},{"title":"Oppsettet av FTP-tjeneren​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#oppsettet-av-ftp-tjeneren","content":" FTP-tjeneren vil servere filer fra katalogen /tftpboot. Den er i utgangspunktet satt opp med èn anonym bruker og en autentisert bruker, som har forskjellige tilgangsnivåer.  Anonym bruker​  Anonym FTP tillates, men den anonyme brukeren vil kun ha lesetilgang til filer som eies av systembrukeren ftp, og ingen skrivetilgang. I utganspunktet vil bare katalogen /tftptboot/images være lesbar for denne brukeren.  ftpuser​  Den autentiserte brukerkontoen heter ftpuser, som samsvarer med OS-brukerenftpuser. I tilfellet verktøykassen er en CNaaS-kasse, vil denne brukerens passord styres fra Vault. I alle andre tilfeller må man sette passordet for brukeren lokalt på verktøykassen. Dette kan gjøres av alle brukere som er medlem av gruppen netops, ved å kjøre kommandoen sudo passwd ftpuser.  ","version":"Next","tagName":"h3"},{"title":"Radius​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#radius","content":" Det er ingen bruker-konfigurasjon forbundet med radius som trengs å konfigureres på verktøykassene. Dette fordi radius er satt opp til bruke/etc/passwd som sin brukerkilde. Dersom brukerne her har satt passord blir dette benyttet ved radiusautentisering. Dersom bruker på nettutstyret logger seg på med @uninett.no-endelse så er radiustjener på verktøykassen satt opp til å relée forespørsler til radiustjener påtrane.uninett.no. Således kan Sikt drift komme inn (dersom ønskelig).  Det som imidlertid må konfigureres er /etc/freeradius/clients.conf  Eksempel fra HiL:  client 128.39.109.0/26 { secret = felles-hemmelighet shortname = hil-mngmt }   Det vi angir her at alle svitsjene i området 128.39.109.1-63 tillates å snakke radius med verktøykassen gitt at de er konfigurert med samme felles-hemmelighet. Endringer i /etc/freeradius/clients.conf styres med Puppet og må meldes inn til kontakt@sikt.no.  ","version":"Next","tagName":"h2"},{"title":"Syslog​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#syslog","content":" All nettelektronikk bør syslogge til verktøykassen. Syslog er satt opp slik at alle meldinger logget til verktøykassen fra nettverket på facility local6 og local7 blir lagret i disse to filene:  /var/log/network.log/var/log/network_nav.log  Sistnevnte fil blir igjen lest og tømt av NAV sin bakgrunnsprosesslogengine, som kjører én gang i minuttet. Dataene blir lagt i NAVs syslog-database og er igjen søkbare gjennom NAVs Syslog Analyzer tool.  network.log blir ikke tømt, men komprimert og rotert en gang i døgnet. Dere kan således velge å søke i syslog i tekstmodus, direkte på verktøykassen, eller via NAV.  ","version":"Next","tagName":"h2"},{"title":"NAV​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#nav","content":" NAV er omfattende å forklare. Vi viser her til NAVs egen dokumentasjon. Litt starthjelp:  ","version":"Next","tagName":"h2"},{"title":"Web brukeradministrasjon​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#web-brukeradministrasjon","content":" Det er ikke noe dokument som beskriver hvordan du oppretter brukere og hvordan du tilordner brukere til grupper. Helt kort; dette gjør du under verktøyet User and API Administration. Det er rett frem å legge til brukere, men husk at de må tilordnes en eller flere grupper. Merk også at du kan redigere privilegiene til en gruppe. Se f.eks på gruppenReadAll, her vil du se at denne har et web_access-privilegie som gir tilgang til en del verktøy, men ikke alle. Dette gir deg en ide om hvordan web_access-privilegier kan justeres. Merk at det er mulig å bruke LDAP til brukerautentisering. Du må da gjøre innstillinger i fila/etc/nav/webfront/webfront.conf.  ","version":"Next","tagName":"h3"},{"title":"Sett velkomstmelding m.m.​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#sett-velkomstmelding-mm","content":" En rekke filer i katalogen /etc/nav/webfront/ kan redigeres for å tilpasse innholdet i forside-widgetene for velkomstmelding og lenker.  ","version":"Next","tagName":"h3"},{"title":"Sett mottaker av NAV-adminstrativ epost​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#sett-mottaker-av-nav-adminstrativ-epost","content":" All administrativ epost fra NAV sendes til driftspersonell hos Sikt, som konfigurert av Puppet i variabelen ADMIN_MAIL i filen/etc/nav/nav.conf. Dersom du ønsker kopier av denne eposten, ta kontakt med Sikt.  ","version":"Next","tagName":"h3"},{"title":"Sett passord til NAVs PostgreSQL-database​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#sett-passord-til-navs-postgresql-database","content":" Dette er satt for deg. Passordet kan leses fra attributten userpw_navi filen /etc/nav/db.conf. Merk at du kan aksessere denne databasen ved å bruke dette passordet når du skriver psql nav nav. For dypere feilsøking, eller dypere forståelse av databasen er dette nyttig.  ","version":"Next","tagName":"h3"},{"title":"\"Seede\" databasen:​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#seede-databasen","content":" For at NAV skal overvåke nettverket ditt må den få &quot;seed&quot;-informasjon fra deg. Du bruker verktøyet Seed Database (fra Toolbox) til dette. Les mer om hvordan du legger inn seed-data i NAVog hvordan du organiserer informasjoneni NAVs offisielle dokumentasjon.  ","version":"Next","tagName":"h3"},{"title":"Varslingssystemet Alert Profiles​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#varslingssystemet-alert-profiles","content":" Varslingssystemet er nokså omfattende med mange muligheter. For å forenkle initielt oppsett er det en rekke forhåndsdefinerte filtre og filtergrupper du kan bruke. Les wiki-siden om Alert Profiles for en introduksjon til systemet.  ","version":"Next","tagName":"h3"},{"title":"Sjekk status på bakgrunnsprosesser og logger​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#sjekk-status-på-bakgrunnsprosesser-og-logger","content":" Kommandoen sudo nav status gir status på om NAVs ulike bakgrunnsprosesser og cronjobber er aktive.Innsamlingsmotoren ipdevpoll logger (bl.a.) til/var/log/nav/ipdevpoll.log I samme katalog se tilsvarende log for navtopology.log(topologioppdageren) pping.log (statusmonitoren), servicemon.log(tjenesteovervåkeren), thresholdmon.log (terskelovervåkeren),eventengine.log (hendelsessystemet) og alertengine.log(alarmsystemet).  ","version":"Next","tagName":"h3"},{"title":"Feilsøking av mobiltelefon/SMS-utsending​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#feilsøking-av-mobiltelefonsms-utsending","content":" Dersom du har problemer med utsending av SMS fra verktøykassen, kan du gjøre litt førstelinjes feilsøking før du feilmelder situasjonen tilkontakt@sikt.no.  Dersom mobilen/GSM-enheten er koblet til med en USB, verifisér at mobilen/GSM-enheten er synlig på USB-bussen: lsusb Forventet output skal ligne på dette Bus 004 Device 001: ID 0000:0000 Bus 003 Device 001: ID 0000:0000 Bus 002 Device 001: ID 0000:0000 Bus 001 Device 003: ID 0fce:d057 Sony Ericsson Mobile Communications AB Bus 001 Device 001: ID 0000:0000 Dersom det er en GSM-enhet tilkoblet med USB-dongle er det donglen, og ikke GSM-enheten som blir identifisert. Se siste linje: Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub Bus 003 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub Bus 004 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub Bus 005 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub Bus 006 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub Bus 005 Device 002: ID 0a81:0205 Chesen Electronics Corp. PS/2 Keyboard+Mouse Adapter Bus 005 Device 003: ID 0403:6001 Future Technology Devices International, Ltd FT232 USB-Serial (UART) IC Verifisér at Gammu klarer å gjenkjenne den tilkoblede mobiltelefonen: sudo -u navcron gammu --identify Verifisér at mobiltelefonen har forbindelse med GSM-nettverket:sudo -u navcron gammu --networkinfo Verifisér at Gammu kan sende SMS-meldinger til din telefon:echo &quot;Melding&quot; | sudo -u navcron gammu --sendsms TEXT &lt;tlfnr&gt; Verifisér at NAVs SMS-daemon kan sende SMS-meldinger til din telefon: sudo -u navcron smsd.py -t &lt;tlfnr&gt;  ","version":"Next","tagName":"h3"},{"title":"Sette opp NAV/verktøykassen for Radius Accounting-logging​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#sette-opp-navverktøykassen-for-radius-accounting-logging","content":" NAV tilbyr brukersporing via accounting-logging fra FreeRADIUS-tjenere. Dette krever en del aktiv inngripen fra din egen side.  Der man har en FreeRADIUS-tjener som autentiserer brukerinnlogginger, må denne konfigureres til å logge accounting-data til NAVs PostgreSQL-database. I tillegg bør man sette opp et Python-program på FreeRADIUS-tjeneren som overvåker error-loggen dens og dytter disse innslagene til samme PostgreSQL-database. Fremgangsmåten er dokumentert på NAV-wikien.  Deretter må Sikt gjøre konfigurasjonsendringer på verktøykassens PostgreSQL-database, slik at denne tillater innlogging fra din FreeRADIUS-tjener. Meld inn følgende detaljer til kontakt@sikt.no:  At du ønsker å sende FreeRADIUS accounting-logger til verktøykassen.IP-adressen(e) til din(e) FreeRADIUS-tjener(e).  Sikt vil sørge for at det opprettes en PostgreSQL-bruker for radius accounting, og at denne gis tilgang til de riktige tabellene i NAV fra de gitte IP-adressene. Du vil få et brukernavn og et passord til PostgreSQL-databasen, som skal brukes til å konfigurere FreeRADIUS-tjeneren med.  ","version":"Next","tagName":"h3"},{"title":"Integrasjon med Argus​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#integrasjon-med-argus","content":" Dersom du ønsker å integrere NAV-installasjonen på din verktøykasse med en Argus-instans, kan limetjenesten for dette enkelt slås på for din verktøykasse ved bestilling til kontakt@sikt.no.  Når limetjenesten nav-argus-glue slås på, vil konfigurasjonsfilen/etc/nav/navargus.yml opprettes og gjøres skrivbar for alle som er medlem av gruppen netops. Event Engine vil automatisk konfigureres til å levere hendelser til limetjenesten. Dokumentasjon for selve limetjenesten fins påhttps://github.com/Uninett/nav-argus-glue  Når limetjenesten er konfigurert, kan konnektivitet mot din Argus-instans testes ved å utføre følgende kommando:  /opt/venvs/nav/bin/navargus --test-api   Vær oppmerksom på at ved konfigurasjonendringer i navargus.yml bør NAVs Event Engine restartes med kommandoen sudo nav restart eventengine for å sikre at endringene tar effekt umiddelbart.  navargus kan også kjøres manuelt for å ta ut en rapport om hvilke NAV-alarmer og Argus-hendelser som ikke er synkroniserte, eller for å tvinge gjennom en full synkronisering. Se følgende kommando for mer hjelp på dette:  /opt/venvs/nav/bin/navargus --help   ","version":"Next","tagName":"h3"},{"title":"Sertifikathåndtering​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#sertifikathåndtering","content":" Webtjeneren på verktøykassen er bare tilgjengelig over HTTPS. Dette krever et tjenersertifikat. Vi bruker i dag Let's Encrypt til å automatisk utstede sertifikater til webtjeneren.  Let's Encrypt krever i utgangspunktet at webtjeneren er tilgjengelig fra sine IP-adressser for å kunne utfordre den til å bevise sin identitet. Disse IP-adressene offentliggjøres ikke, og Let's Encrypt forbeholder seg retten til å endre disse når som helst, uten forvarsel. Webtjeneren på verktøykassen holder de nødvendige URLene åpne for verden, men kan ellers begrense aksess til et valgfritt sett med IP-adresser. Henvend deg til vårt kontaktpunkt dersom du ønsker endringer i restriksjonene.  ","version":"Next","tagName":"h2"},{"title":"Netflow/NfSen​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#netflownfsen","content":" Verktøykassene bruker NfSen for å prosessere netflowdata som blir eksportert fra rutere. NfSen er et web-basert grensesnitt til nfdump netflow tools.  Dette grensesnittet er tilgjengelig via NAV sin toolbox.  Nfsen ser ut til å være litt kilen mhp. på å definere nye netflow-eksportører ('sources') etter at systemet er startet , så det er lurt å ha alle disse klart på forhånd, og legge alle inn før systemet startes opp.  Kildene defineres under sources i/etc/nfsen/nfsen.conf.local. Denne filen konfigureres av Puppet; eventuelle endringsønsker må meldes til Sikt.  Mere inngående detaljer angående bruk av nfsen står pånfsen sine hjemmesider.  ","version":"Next","tagName":"h2"},{"title":"Generelt om Netflow​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#generelt-om-netflow","content":" En flow er definert som et sett av IP pakker som har en del felles felt i pakkehodet.De felt som brukes for å identifisere flows er: Source IP adressDestination IP adressSource port numberDestination port numberProtocol typeType of serviceInput interface  ","version":"Next","tagName":"h3"},{"title":"Grafene​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#grafene","content":" Grafene vil vise trafikk-mønsteret til kildene man eksporterer netflow-data ifra. Default er det satt opp slik at grafene er &quot;stacked&quot;. Dvs. at dersom man eksporterer ifra flere kilder (har flere farger på grafene), legges den ene grafen på toppen av den andre. Dette kan man endre ved å trykke på line graph pådetails-fanen. Her kan man også endre til logaritmisk skala.Under Graphs-fanen kan man se større grafer for henholdsvis Flows,Packets eller Traffic.Under Details-fanen kan man se detaljer for enten Flows, Packetseller Traffic. Man kan velge en av de andre i de små thumbnailene på høyresiden.Dersom man vil ekskludere en kilde ifra grafene, kan man trykke på krysset under source for hver kilde.  ","version":"Next","tagName":"h3"},{"title":"Hvordan grave i detaljene​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#hvordan-grave-i-detaljene","content":" Angi tidsperiodeDette gjør du enten ved å la den stå på Single Timeslot (5 min) under grafen, eller du velger en lengre tidsperiode med å velge Time Window under grafen og drar på pila som er nederst på grafen. Tidspunktet blir avmerket med grønn farge i grafen  ","version":"Next","tagName":"h3"},{"title":"List Flows vs. Stat TopN​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#list-flows-vs-stat-topn","content":" List Flows viser hele flows, og gjør ingen sortering basert på statistikk. Her vil det kun vises de antall flows man har valgt som først stemmer med det utvalget man har valgt. Man kan også aggregere data basert på de valgene man gjør.Stat TopN viser statistisk analyse og sorterer output basert på valgene du gjør.Stat Any IP Address order by bytes vil f.eks gi deg en liste over de som har overført mest data i valgt tidsperiode.  ","version":"Next","tagName":"h3"},{"title":"Søk i netflow dataene​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#søk-i-netflow-dataene","content":" tcpdump-aktig filter formatEks.: host 158.38.x.y (Filtrerer ut all trafikk til/fra host 158.38.x.y)src host 158.38.w.x and dst host 158.38.y.z (Filtrerer ut all trafikk mellom disse to hostene der trafikken kommer fra 158.38.w.x og sendes til 158.38.y.z, src=source, dst=destination)proto tcp and src host 158.38.x.y (Filtrerer ut all tcp trafikk sendt ifra 158.38.x.y)src host 158.38.w.x or host 158.38.y.z (Filtrerer ut trafikk fra host 158.38.x.y eller all trafikk til/fra host 158.38.y.z)src host 158.38.x.y and src port 22 (Filtrerer ut all trafikk fra host 158.38.x.y der trafikken er sendt ifra port 22(ssh))src port gt 80 and src port lt 123 (Filtrerer ut trafikk sendt ifra portene mellom 80 og 123, gt= greater than, lt=less than)src port 80 and not host 158.38.x.y (Filtrerer ut trafikk sendt ifra port 80 og som ikke er sendt til/fra host 158.38.x.y)src net 158.38.x.0/24 (Filtrerer ut trafikk sendt ifra nettet 158.38.x.0/24)Ett annet triks er å angi hvilke interface man skal plukke ut trafikk ifra. Eks. in if 24, vil kun plukke ut trafikk som kommer inn på interface 24. Hvilket nummer et interface har på et cisco-ruter finner man ut med kommandoen show snmp mib ifmib ifindex. (Husk at netflow kun eksporteres fra trafikk inn på et interface. Trafikk ut på et interface vil ikke bli eksportert, og må følgelig filtreres ut fra det interfacet hvor denne trafikken kommer inn.) Skriver man derfor out if 24 vil dette da bety det samme som, gi meg all trafikk inn på alle interface bortsett fra 24.  ","version":"Next","tagName":"h3"},{"title":"Ferdigdefinerte filter man bruker ofte​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#ferdigdefinerte-filter-man-bruker-ofte","content":" Disse kan lagres som filer i filsystemet under katalogen/var/lib/nfsen/filtersVanlig filtersyntaks brukes i disse filene også.Ferdigdefinerte filtre velges under boksen man skriver inn filtre der det vanligvis står and none  ","version":"Next","tagName":"h3"},{"title":"Lage profiler​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#lage-profiler","content":" For søk man gjør ofte og som man vil følge med grafisk over tid kan det være lurt å lage egne profiler som har oversikt over denne trafikken. Dersom man velger Real Profile lager dette egne flow-filer på filsystemet (som også tar plass). Dersom du lager en profil som er langt tilbake i tid, så kan det ta lang tid for nfsen å lage grunnlagsdata for hele perioden. Dersom du lager en Shadow Profile, lager den ikke egne flow-filer på filsystemet, men den bruker bare datagrunnlaget som allerede ligger der. Du vil likevel få tegnet egne grafiske profiler for dataene du vil filtrere ut. Bruk av channels gjør at du kan skreddersy grafene og fargene etter dine behov. Se dokumentasjon på sourceforge for detaljer.  Profile står øverst i høyre hjørne.Normalt vises Profile &quot;live&quot;Velg New profile lag en profil som plukker ut all trafikk av en gitt type, basert på filtre du definerer.Navngi denne rapporten.Velg en kildeBasert på hvor mye data som skal prosesseres tar det en hvis tid å prosessere og lage denne profilenVis profilen etterpå ved å velge denne fra selected profile  ","version":"Next","tagName":"h3"},{"title":"Alert​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#alert","content":" I nyeste utgave av nfsen kan man lage terskelbaserte alarmer.Dokumentasjonen på nfsen sine sider sier viser detaljer for hvordan man oppretter alarmer. OBS: Husk å sette/endre filteret for alarmen dersom du ønsker å teste dette. Default står den på 'not any' som ikke vil gi deg noe trafikk!  ","version":"Next","tagName":"h3"},{"title":"Feilsøking av nfsen​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#feilsøking-av-nfsen","content":" Dersom du har problemer med nfsen er det ett par ting man kan sjekke foer man melder feil.  Går alle nødvendige prosesser? 1 nfsend og 1 nfcapd per kilde(netflow-eksportør) Dersom ikke restart nfsen.Mottar du flows fra kilde? Bruk gjerne tcpdump for å sjekke om du mottar flows. F.eks tcpdump port 2055. Hvilken port du lytter på kan du finne i/etc/nfsen/nfsen.conf.local under sources. Dersom ikke, sjekk ruterconfig og access-lister.  ","version":"Next","tagName":"h3"},{"title":"Command line tools​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#command-line-tools","content":" En del kjekke command line tools er installert på verktøykassene. Her følger en liste og kort omtale:  ping og traceroute (trenger vel ingen kommentar) snmpwalk (m.fl.) Brukes til å polle utstyr med snmp, kjekt for NAV feilsøking. Typisk syntaks: snmpwalk -v2c -c &lt;community&gt; &lt;ip&gt; &lt;oid&gt; Eks: snmpwalk -v2c -c public 10.10.10.1 ifinoctet (henter inoctet tellere fra boks 10.10.10.1) nmapBrukes til scanne en host/sjekke om en port/sett av porter er åpne.  ","version":"Next","tagName":"h2"},{"title":"Hobbit/Xymon​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#hobbitxymon","content":" Se egen side for dokumentasjon av Xymon-integrasjonen på verktøykassen.  ","version":"Next","tagName":"h2"},{"title":"Firewall Builder (fwbuilder)​","type":1,"pageTitle":"Brukerdokumentasjon Verktøykasser","url":"/docs/nettadministrasjon/brukerdok#firewall-builder-fwbuilder","content":" Brukerdokumentasjon for Firewall Builder foreligger på en egen side. ","version":"Next","tagName":"h2"},{"title":"Firewall builder","type":0,"sectionRef":"#","url":"/docs/nettadministrasjon/fwbuilder","content":"","keywords":"","version":"Next"},{"title":"Innledning​","type":1,"pageTitle":"Firewall builder","url":"/docs/nettadministrasjon/fwbuilder#innledning","content":" Lange og komplekse pakkefilter, redundante rutere og introduksjon av IPv6 har gjort at det er nødvendig å se på alternative måter å lage pakkefilter på. Firewall builder (fwbuilder) er installert på verktøykassene, og kan brukes til å håndtere blant annet Cisco aksesslister. Denne dokumentasjonen er skrevet basert på hvordan UNINETT har tatt ibruk fwbuilder lokalt hos seg. Fremgangsmåten som brukes og løsningene man kommer frem til kan selvfølgelig være helt forskjellig ifra det vi har gjort. Denne dokumentasjonen er altså ment som tips til hvordan man kommer igang, og enkelte ting man bør være obs på. For mer informasjon om Firewall builder, se fwbuilder sine hjemmesider.  Fremgangsmåten for å etablere filter via firewall builder er lik måten man gjør det med &quot;manuelle filter&quot;, og her er tips til hvordan det gjøres: UFS 106  ","version":"Next","tagName":"h2"},{"title":"Komme igang med programmet, og få filer inn i RCS​","type":1,"pageTitle":"Firewall builder","url":"/docs/nettadministrasjon/fwbuilder#komme-igang-med-programmet-og-få-filer-inn-i-rcs","content":" Logg inn på verktøykassen med din ssh-klient. Husk at X11-forwarding må være påslått.Programmet startes med fwbuilderOpprett en firewall eller gjør noe småtteri som gjør at du kan lagre det du har gjort som ei fil.Lagre fila under vk:/tftpboot/Gå ut av programmetFra terminalvinduet stående i tftpboot, sjekk inn den nye fila medci -u 'filnavn', og skriv inn en kommentarNeste gang starter du nå programmet med fwbuilder 'filnavn'. Når du nå kommer inn i firewall builder vil du få oversikt over alle tidligere revisjoner, og kommentarene som er skrevet inn for hvilke endringer som er gjortDu vil heretter få spørsmål om å sjekke inn fila og kommentere hva du har gjort når du forlater programmet  ","version":"Next","tagName":"h2"},{"title":"Definere ruter(e)​","type":1,"pageTitle":"Firewall builder","url":"/docs/nettadministrasjon/fwbuilder#definere-rutere","content":" Opprett ruter (heretter kalt firewall, som også brukes i GUI)Vi anbefaler å ikke bruke snmp til å hente inn informasjon om interfacer. Grunnen til det er at man sannsynligvis ønsker å legge over filter fra ett interface i gangen. Da er det beste å gjøre dette kontrollert en av gangen, slik at ikke man ødelegger gamle lister på interfacer man ikke er klar til å legge over i første omgang.Opprett ett interface på firewall. Vi starter med Loopback0 som er management-interface. Merk dette med management og unprotected. Legg inn adresser på interfacet. Det er denne adressen som blir brukt når programmet skal legge over filterne til ruteren.Man må velge om policy'en for ruteren skal være bare IPv4 eller både IPv4 og IPv6. Dette gjør du ved å dobbeltklikke på Policy under ruteren, og velger Rule set.  ","version":"Next","tagName":"h2"},{"title":"Lage filter for et gitt interface​","type":1,"pageTitle":"Firewall builder","url":"/docs/nettadministrasjon/fwbuilder#lage-filter-for-et-gitt-interface","content":" Lag ett nytt interface. Navngi dette til det interfacet som du skal lage pakkefilter for. Legg til adressene til interfacet. Både IPv4 og IPv6.Dette interfacet er nå klart til å bruke i regler i policy'nDersom du har redundant ruteroppsett (f.eks VRRP), definerer du begge ruterne, og lager cluster-interface. Under dette cluster-interfacet lager du en ny failover-group der interface fra begge rutere er medlemmer. Når du nå bruker dette cluster-interfacet i regelsettet vil programmet sørge for at policy'n blir lagt inn på begge ruterne.Opprett en ny regel i policy'n. Du kan nå dra interfacet du laget over i interface-kolonnen.Lag deg host, nett, tjeneste oa. objekt etterhvert som du trenger dem. Disse kan nå draes over i policy'n. Husk å lag både IPv4 og IPv6 adresser.Programmet har ett sett med standard-bibliotek som er kjekt for &quot;kjente&quot; tjenester. Disse finner du om du velger Library Standard istedet for Library User.  ","version":"Next","tagName":"h2"},{"title":"Gruppere interface​","type":1,"pageTitle":"Firewall builder","url":"/docs/nettadministrasjon/fwbuilder#gruppere-interface","content":" Dersom du skal lage regler som er lik for flere interface er det kjekt å gruppere disse i objekter. Slik kan du bruke dette objektet i reglene istedet. Prøv å tenk igjennom slike grupperinger på forhånd. Under omlegging så sørg for å legge til nye interface inn i disse objektene etterhvert som du oppretter dem i firewall builder.Vi har f.eks laget ei gruppe som inneholder alle interne VLAN. Ved å bruke dette objektet i reglene vil alle VLAN (som er medlem i objektet) få disse samme reglene. (se eksempel nedenfor)Det samme kan f.eks brukes for felles regler for alle vlan med klienter. (se eksempel nedenfor)Regler kan grupperes slik at det blir mer oversiktlig. Vi har valgt å først gruppere regler som gjelder alle VLAN. Deretter alle klient VLAN. Deretter grupperer vi regler som gjelder hvert enkelt vlan. Nest sist har vi en gruppering der vi lager midlertidige regler med logging som vi bruker når vi utarbeider filtrene. Til slutt har vi en gruppering der vi for hvert enkelt VLAN har en regel som sørger for å &quot;stenge enden&quot; for ett gitt filter.  ","version":"Next","tagName":"h2"},{"title":"Eksempel på oppsett​","type":1,"pageTitle":"Firewall builder","url":"/docs/nettadministrasjon/fwbuilder#eksempel-på-oppsett","content":" Her er ett eksempel der vi har opprettet to rutere (uninett-gw og uninett-gw2), der begge har vlan20. Vi har laget ett cluster mellom disse to, og det er dette cluster-interfacet vi bruker i policyen til høyre. Har man kun èn ruter er ikke dette nødvendig. Først har vi felles-regler som vil gjelde alle vlan-interface som blir lagt til i &quot;Alle interne VLAN&quot;. Så har vi regler som vil gjelde alle klient-interface som blir lagt til i &quot;Alle klient-VLAN&quot;. Deretter kommer spesifikke regler for Vlan 20.    ","version":"Next","tagName":"h2"},{"title":"Legge over filter til ruteren​","type":1,"pageTitle":"Firewall builder","url":"/docs/nettadministrasjon/fwbuilder#legge-over-filter-til-ruteren","content":" Når du er klar til å legge over reglene velger du install. Her vil den først kompilere reglene for deg.Velg inspect generated files. Slik kan du gå inn å kontrollere hva som faktisk blir lagt over til ruteren i form av pakkefilter-regler.Dersom alt ser fint ut trykk next, og du vil få opp ett innloggingsvindu mot ruteren. Her kan du etterhvert følge med mens ruteren jobber med å legge over filtrene. Du kan også velge dry run om du bare vil teste å legge over reglene til ruteren.  ","version":"Next","tagName":"h2"},{"title":"Tips og triks​","type":1,"pageTitle":"Firewall builder","url":"/docs/nettadministrasjon/fwbuilder#tips-og-triks","content":" Prøv ut prosessen på ett test-vlan i første omgang for å gjøre deg kjent med hvordan ting fungerer Under menyen Edit -&gt; Preferences -&gt; Objects -&gt; Policy rules, velg Create new policy rules with direction Outbound, slik at du slipper å endre den for nye regler du legger inn. Det samme kan du gjøre for Create new policy rules with action Accept. Her er det også mulig å velge default dummy objekt for src, dst, service og interface. Dette kan være kjekt for å unngå at man glemmer å legge inn ett objekt på en av disse. Ved å høyreklikke på dummy-objektet får du opp en meny der du kan velge å endre til any. Det er mulig å endre bakgrunnsfarge på reglene i regelsettet. Dette kan være kjekt for å for eksempel merke regler som er midlertidig, eller som må sjekkes nærmere. Du kan kopiere objekt som allerede er brukt på høyresiden i regelsettet også. Hold inn ctrl mens du peker på ett objekt, og dra dit du vil kopiere til. Slik slipper du å finne igjen objekter du bruker ofte på venstre-siden hele tiden. Kommenter reglene dine slik at du finner ting igjen i selve reglene. Du kan søke på port og ip i søkefeltet ved å skrive ip: eller port:. Ved søking etter IP-adresse vil gi den finne alle objekter som omfatter denne IP-adressen, også større nettblokker hvor IP-adressen er en av flere. Du kan låse av objekter som du ikke vil at noen skal endre på ved ett uhell. Høyreklikk på objektet og velg lock. Låsen fjernes igjen ved samme operasjon. Men da er det ett bevist valg å gjøre endringer der iallefall. Veldig kjekt å gjøre for interface f.eks som sjelden endres. Men følgene ved at noen gjør feil ting der kan være kritiske. Siden grupper av objekter følger flat struktur ift. mapper har vi navngitt alle grupper med suffix: (iface) for grupper av interface-objekter(nett) for grupper av nettverks-objekter(hosts) for grupper av host-objekter Etter kompilering får man opp en knapp der man kan se diff av de gamle og nye listene. For at dette skal virke må det under menyenEdit -&gt; Preferences -&gt; Diff, være krysset av for &quot;Enable autocompiling when loading file&quot;. Vi bruker meld som diff-viewer, og stien til den må også være angitt der. For å unngå at meld viser alle kommentarer som eventuelt har endret seg i koden din, så er det lurt å legge inn ett filter som overser kommentarene. I menyen tilmeld, Edit -&gt; Preferences -&gt; Text Filters, legg inn en ny regel som som ser slik ut ^! Rule.\\* (Uten semikolon). For å sikre at vi får write mem + write net etter at filter er lagt over editerer vi for hver ruter &quot;Firewall Settings…&quot; Prolog/Epilogog legger til følgende i epilogen: exit write memory tclsh exec copy running-config tftp://trane.uninett.no/uninett-gw-confg exit Husk å fjerne de gamle filtrene fra ruteren, og evt. fra tftpboot på verktøykassen i etterkant. Da slipper du forvirring på hvilken liste som faktisk er i drift.  ","version":"Next","tagName":"h2"},{"title":"Kontaktpersoner​","type":1,"pageTitle":"Firewall builder","url":"/docs/nettadministrasjon/fwbuilder#kontaktpersoner","content":" rune.sydskjor@sikt.nomorten.knutsen@sikt.no ","version":"Next","tagName":"h2"},{"title":"Sikkerhetsdirektiv for GigaCampus verktøykasser","type":0,"sectionRef":"#","url":"/docs/nettadministrasjon/sikkerhetsdirektiv","content":"","keywords":"","version":"Next"},{"title":"1. Om verktøykassene​","type":1,"pageTitle":"Sikkerhetsdirektiv for GigaCampus verktøykasser","url":"/docs/nettadministrasjon/sikkerhetsdirektiv#1-om-verktøykassene","content":" Verktøykassene er et initiativ som inngår i GigaCampus-programmets satsing på drift og overvåking. Verktøykassene inneholder et sett av veletablerte, åpen kildekode baserte overvåkningsprogrammer myntet på proaktiv drift av eget campusnett.  For institusjoner som ønsker det, utplasserer UNINETT en verktøykasse tjenermaskin (evt flere maskiner) ved institusjonen. Utplassert verktøykasse er primært for institusjonen selv. Det er driftsfolk ved institusjonen som bruker verktøyene på verktøykassen til daglig drift og overvåking av eget campusnett. GigaCampus-programmet tilbyr løsningen under parolen &quot;hjelp til selvhjelp&quot;.  Porteføljen med verktøy som inngår på verktøykassen vil vokse over tid. Initielt (2006) inngår:  Overvåkningssystemet NAVNetflowporteføljeKonfigurasjonsarkiv for nettelektronikk.LoggserverAutentiseringstjeneste for nettelektronikk  De initielle verktøyene er under kontinuerlig videreutvikling og nye verktøy vil komme til i løpet av programperioden.  ","version":"Next","tagName":"h2"},{"title":"2. Driftsansvar​","type":1,"pageTitle":"Sikkerhetsdirektiv for GigaCampus verktøykasser","url":"/docs/nettadministrasjon/sikkerhetsdirektiv#2-driftsansvar","content":" UNINETT ved leder for GigaCampus-programmet har driftsansvar for verktøykassene. Drift garanteres for hele GigaCampus programperioden, frem til 1/1 2010.  UNINETT står ansvarlig for at systemarbeid og UNINETT brukertilgang ivaretar hensyn til personvern og regelverk.  Løpende systemdrift håndteres av autorisert systemdriftspersonale ved UNINETT. Det skal til enhver tid forefinnes en liste over personer som har administratortilgang til verktøykassene. Disse skal alle ha underskrevet en taushetserklæring.  Institusjonen står ansvarlig for at verktøykassen er plassert i fysisk sikrede omgivelser, på et godt sikret nettsegment (jfr også kap 4).  ","version":"Next","tagName":"h2"},{"title":"3. Driftsopplegg​","type":1,"pageTitle":"Sikkerhetsdirektiv for GigaCampus verktøykasser","url":"/docs/nettadministrasjon/sikkerhetsdirektiv#3-driftsopplegg","content":" UNINETT håndterer anskaffelse, initiell idriftsetting og løpende vedlikehold/drift. Verktøykassa er rackmonterbare IBM-servere som kjører Debian. Cfengine benyttes i driftsløsningen. Dette gir mange fordeler, blant annet sentralisert konfigurasjon og administrasjon, herunder fortløpende pakkeoppdatering m.m. I tillegg tar UNINETT backup av lokale konfigurasjonsfiler, brukerdata og data som produseres av verktøyene. Et unntak er netflow rådata.  UNINETT driftsenter og UNINETT beredskapsvakt overvåker verktøykassene døgnkontinuerlig, herunder at alle tjenester går. Vi monitorer diskfyllingsgrad, cpu- og minneforbruk m.m. Tiltak blir truffet ved insidenter. Ved evt alvorlig maskinvarehavari har UNINETT reservedelslager og skal så raskt som mulig reetablere ny maskin, sende denne ut og få verktøykassen operativ igjen.  ","version":"Next","tagName":"h2"},{"title":"4. Sikkerhet​","type":1,"pageTitle":"Sikkerhetsdirektiv for GigaCampus verktøykasser","url":"/docs/nettadministrasjon/sikkerhetsdirektiv#4-sikkerhet","content":" Sikkerhetsoppgradering og dertil tetting av evt sikkerhetshull skal løpende håndteres av UNINETT.  Verktøykassene skal i tillegg beskyttes gjennom hensiktsmessig segmentering og fornuftig anvendelse av pakkefilter i lokalt campusnett. Anbefalte filterregler blir foreskrevet av UNINETT og skal implementeres lokalt (evt i samarbeid med UNINETT).  ","version":"Next","tagName":"h2"},{"title":"5. Kontaktpunkt​","type":1,"pageTitle":"Sikkerhetsdirektiv for GigaCampus verktøykasser","url":"/docs/nettadministrasjon/sikkerhetsdirektiv#5-kontaktpunkt","content":" For alle driftshendelser kontakt UNINETT driftsenter,drift@uninett.noFor brukerstøtte relatert til verktøyene, eller diskusjon om bruk, benytt diskusjonslista vk@uninett.no. For diskusjon relatert til plan/strategi/videreutvikling, benytt samme liste.  ","version":"Next","tagName":"h2"},{"title":"6. Brukertilgang til verktøykassene​","type":1,"pageTitle":"Sikkerhetsdirektiv for GigaCampus verktøykasser","url":"/docs/nettadministrasjon/sikkerhetsdirektiv#6-brukertilgang-til-verktøykassene","content":" Vi må her skille mellom to ulike tilgangsmåter til verktøykassene; ssh innlogging og web-tilgang (ssl). Primært grensesnitt er web, men ssh innlogging er også påkrevd i noen tilfeller.  ","version":"Next","tagName":"h2"},{"title":"6.1 Web-tilgang​","type":1,"pageTitle":"Sikkerhetsdirektiv for GigaCampus verktøykasser","url":"/docs/nettadministrasjon/sikkerhetsdirektiv#61-web-tilgang","content":" For web danner NAV sine autentisering- og autorisasjonsmekanismer et rammeverk for alle installerte verktøy som tilbyr webgrensesnitt. NAV administratorfunksjonen håndteres av institusjonen selv. NAV administrator kan legge til og fjerne brukere etter eget behov. NAV administrator kan også regulere den enkelte webbrukers rettigheter, dvs hvilke verktøy brukeren skal gis tilgang til.  Det er ikke påkrevd at UNINETT har tilgang til webgrensesnittet. Ved initiell installasjon gis UNINETT en slik tilgang, og såfremt institusjon finner assistanse fra UNINETT driftsenter interessant, bør tilgangen opprettholdes.  ","version":"Next","tagName":"h3"},{"title":"6.2 ssh innlogging​","type":1,"pageTitle":"Sikkerhetsdirektiv for GigaCampus verktøykasser","url":"/docs/nettadministrasjon/sikkerhetsdirektiv#62-ssh-innlogging","content":" Relevant driftspersonale ved institusjonen gis brukertilgang til verktøykassene. Brukertilgang er bl.a. nødvendig for å håndtere tftp-tjenesten. Det er også nødvendig for å se i loggfiler, se i netflow rådatafiler (men her er det meste tilgjengelig via web) og i database m.m. Drifspersonale gis også et tilstrekkelig sett av sudo rettigheter slik at man lokalt kan restarte nav, apache, nfsen m.m. Det forutsettes at lokalt driftspersonale har en brukeradferd som samsvarer med de privilegier som er gitt.  Alle brukere som opprettes registreres med fullt navn og foretrukket brukernavn. De setter og endrer selv passord i tråd med god sikkerhetspraksis. ssh nøkler kan med fordel benyttes.  I tillegg til lokalt definerte brukere gis UNINETT driftspersonell også personlig brukertilgang. Dette er særlig hensiktsmessig i de tilfeller der assistanse relatert til vedlikehold av aksesslister/pakkefilter er ønskelig. Ved å sette verktøykassen på nett gir institusjonen implisitt aksept for en slik tilgang. Det er dog mulig for institusjonen å reservere seg mot dette, da gjennom eksplisitt avtale med UNINETT.  Listen over definerte brukere blir gjenstand for årlig revisjon av UNINETT i samarbeid med institusjonen.  ","version":"Next","tagName":"h3"},{"title":"6.3 Radius-base for nettelektronikk​","type":1,"pageTitle":"Sikkerhetsdirektiv for GigaCampus verktøykasser","url":"/docs/nettadministrasjon/sikkerhetsdirektiv#63-radius-base-for-nettelektronikk","content":" Verktøykassene inneholder også en brukerbase for radiustjenesten. Tjenesten er myntet på å regulere tilgang til innlogging på svitsjer, rutere og basestasjoner i campusnettet. Lokale brukere som skal ha slik tilgang opprettes av UNINETT på forespørsel. Dersom ikke annet er avtalt gis personer omfattet under 6.2 også tilgang her, dette vil også inkludere personell ved UNINETT.  ","version":"Next","tagName":"h3"},{"title":"7. Sikring av sensitive data​","type":1,"pageTitle":"Sikkerhetsdirektiv for GigaCampus verktøykasser","url":"/docs/nettadministrasjon/sikkerhetsdirektiv#7-sikring-av-sensitive-data","content":" UNINETT er kjent med gjeldende lovgivning og forholder seg til denne. UNINETT har bl.a. etter ekomloven som tilbyder av elektronisk kommunikasjonsnett ikke adgang til å utlevere annet enn statistiske opplysninger om trafikken i nettet.  Vi forholder oss til forskrift om behandling av personopplysninger (personopplysningsforskriften). For verktøykassene kan netflow data med detaljer om gjøremål til en IP-adresse karakteriseres som personopplysninger. Som systemadministrator og/eller i sikkerhetsøyemed skal det bemerkes at vi er fritatt for meldeplikt, jfr §7-11 i personopplysningsforskriften.  Under alle omstendigheter, siden vi her snakker om institusjonens persondata, vil UNINETT bare i overenstemmelse med institusjonen selv søke i og/eller hente frem slike data. Fremhentede data vil aldri bli publisert eller gjort offentlig tilgjengelig, de blir kun gjort tilgjengelig for driftspersonell ved institusjonen og/eller i tråd med ønsket praksis som her gjelder. ","version":"Next","tagName":"h2"},{"title":"How to create Variable metadata","type":0,"sectionRef":"#","url":"/docs/kudaf/variables-create","content":"","keywords":"","version":"Next"},{"title":"The root level fields​","type":1,"pageTitle":"How to create Variable metadata","url":"/docs/kudaf/variables-create#the-root-level-fields","content":" The fields on the above schema describe the Variable as a whole.  name: Must adhere to the Variable naming guidelines above.datastore_id: The Datatset/source of the data represented by this Variable.temporalityType: The temporality type of the Variable. Must be one of FIXED, ACCUMULATED, STATUS or EVENT.populationDescription: Description of the population described by the Variable.spatialCoverageDescription: Description of the spatial distribution of the data described by the Variable.sensitivityLevel: The sensitivity type of the data described by the Variable. Must be one of PERSON_GENERAL, PERSON_SPECIAL, PUBLIC, NONPUBLIC.identifierVariables: A list containing data structure(s) that describe(s) the unique identifier(s) (like a primary key in a database) which singles out this particular datum. This is what allows us to associate the measured value with a unit of measure.measureVariable: A list containing data structure(s) that describe(s) what is measured by this particular datum. Most of the time there would be a single item, as with a datum we want to single out the simplest possible measure, but perhaps in the future there might be use cases where we need more than one.attributeVariables: An optional list containing data structures that describe the datum's relationship to time, i.e. the EVENT PERIOD. It's optional because it depends on the Temporality Type of the Variable, and the FIXED type is time-invariant.  The Measure, Attribute and Identifier Variables data structures are explained in more detail below.    ","version":"Next","tagName":"h2"},{"title":"Measure Variable data structure​","type":1,"pageTitle":"How to create Variable metadata","url":"/docs/kudaf/variables-create#measure-variable-data-structure","content":" Description of the measured column of the Variable. It is represented as a list in the metadata model, but currently only one measure is allowed per Variable.  class MeasureVariable: name: str variableRole: str label: str dataType: str keyType: KeyType representedVariables: list[RepresentedVariable]   Fields:  name: A single string in capital letters, consisting of keywords separated by underscores (_), which describes what each datum is measuring. As such, it must be the same as root-level name of the Variable data structure (see above Variable naming guidelines).label: Human readable name (Label) of the measure column. This should be similar to the Variable's name. Example for PERSON_INNTEKT: &quot;Person inntekt&quot;.dataType: DataType for the values in the column. One of: [&quot;STRING&quot;, &quot;LONG&quot;, &quot;DOUBLE&quot;, &quot;DATE&quot;]representedVariables: List (though normally just one element) that describes more in detail what kind of data (the WHAT and the HOW) we can find. It's a combination of: What: A characteristic of a population to be measured, andHow the measure will be represented  class RepresentedVariable: description: Description validPeriod: ValidPeriod valueDomain: ValueDomainDescribed | ValueDomainEnumerated   Fields within a Represented Variable:  description: Description of the column contents. Example: &quot;Skattepliktig og skattefritt utbytte i... &quot;validPeriod: See definition below.valueDomain: See definition below.  ","version":"Next","tagName":"h2"},{"title":"Valid Period​","type":1,"pageTitle":"How to create Variable metadata","url":"/docs/kudaf/variables-create#valid-period","content":" A simple data structure that shows the beginning and end dates when the data is considered valid.  class ValidPeriod: start: datetime stop: datetime   ","version":"Next","tagName":"h3"},{"title":"Value Domain​","type":1,"pageTitle":"How to create Variable metadata","url":"/docs/kudaf/variables-create#value-domain","content":" The Value Domain describes the set of permissible values of the data represented by the Variable. Depending on the measure, this description can become quite complex. Hence we simplifly it by having two possible types of Value Domain:  Enumerated Value Domain: When there is a manageable (finite list) of possible data values, we provide an enumeration of the possiblities, i.e. a list of Categories. An example could be a person's sex.Described Value Domain: When the possibilites are either infinite or just too many to manage (think of the list of all the National IDs or phone numbers, for example), we settle for a verbal description of the values.  Below are the schemas for these two types of Value Domain.  For the Described Value Domain:  class ValueDomainDescribed: uriDefinition: list[str] description: Description | str measurementType: str measurementUnitDescription: str   Where:  description: A description of the domain. Example for the Variable &quot;BRUTTO_INNTEKT&quot;: &quot;Alle positive tall&quot;.measurementUnitDescription: The metric for a measurement in terms of an official unit of measurement. Example: &quot;Norske Kroner&quot;.measurementType: The type of measure which groups a set of measurement units. One of: [CURRENCY, WEIGHT, LENGTH, HEIGHT, GEOGRAPHICAL]. Where the CURRENCY type would group &quot;Norske Kroner&quot;, &quot;US Dollar&quot;, &quot;Euro&quot;, etc.uriDefinition: Link(s) to external resource(s) describing the domain.  And for the Enumerated Value Domain:  class ValueDomainEnumerated: uriDefinition: list[str] codeList: list[Code]   Where:  codeList: A list of Categories for the domain, where each Category has a predefined Code assigned to it. Each of these Codes includes a description and validity period.  class Code: categoryTitle: list[Description] code: str validPeriod: ValidPeriod   ","version":"Next","tagName":"h3"},{"title":"Examples of the two possible value domains​","type":1,"pageTitle":"How to create Variable metadata","url":"/docs/kudaf/variables-create#examples-of-the-two-possible-value-domains","content":" Described value domain (with description)​  This example belongs to a Variable where the measure is a person's accumulated gross income:  &quot;valueDomain&quot;: { &quot;uriDefinition&quot;: [], &quot;description&quot;: [{&quot;languageCode&quot;: &quot;no&quot;, &quot;value&quot;: &quot;Norske Kroner&quot;}], &quot;measurementType&quot;: &quot;CURRENCY&quot;, &quot;measurementUnitDescription&quot;: [{&quot;languageCode&quot;: &quot;no&quot;, &quot;value&quot;: &quot;Norske Kroner&quot;}] }   Enumerated value domain (with codeList)​  The second example belongs to a Variable where the measure describes the sex of a person:  &quot;valueDomain&quot;: { &quot;uriDefinition&quot;: [], &quot;codeList&quot;: [ { &quot;code&quot;: &quot;1&quot;, &quot;categoryTitle&quot;: [ {&quot;languageCode&quot;: &quot;no&quot;, &quot;value&quot;: &quot;Mann&quot;} ], &quot;validFrom&quot;: &quot;1900-01-01&quot; }, { &quot;code&quot;: &quot;2&quot;, &quot;categoryTitle&quot;: [ {&quot;languageCode&quot;: &quot;no&quot;, &quot;value&quot;: &quot;Kvinne&quot;} ], &quot;validFrom&quot;: &quot;1900-01-01&quot; } ], &quot;sentinelAndMissingValues&quot;: [ { &quot;code&quot;: &quot;0&quot;, &quot;categoryTitle&quot;: [ {&quot;languageCode&quot;: &quot;no&quot;, &quot;value&quot;: &quot;Ukjent&quot;} ], &quot;validFrom&quot;: &quot;1900-01-01&quot; } ] }   We expect all values in this dataset to be of either code &quot;1&quot; or &quot;2&quot;, as this Variable only considers &quot;Male&quot; or &quot;Female&quot;. But we also expect a code &quot;0&quot; to be present in the Variable, where it represents &quot;Unknown&quot;. A row with &quot;0&quot; as measure is therefore not considered invalid.  ","version":"Next","tagName":"h3"},{"title":"Measure Variables with keyType​","type":1,"pageTitle":"How to create Variable metadata","url":"/docs/kudaf/variables-create#measure-variables-with-keytype","content":" Some of th Variables contain a keyType in the Measure Variable data structure as well. This is characteristic of Identifier Variables, as we'll see below, but sometimes we need a Variable which links together (relates) two Identifier Variables. (The equivalent concept in a relational database would be a Foreign Key).  As an example, let's say we have a Variable PERSON_MOR where the Identifier Variable field is a population of Unit Type &quot;PERSON&quot;, and the Measure Variable is a population of Unit Type &quot;PERSON&quot;. The measure here is representing the population's mothers.  The keyType data structure describes in detail the Unit Type for this Variable's identifier column. As explained, these are centrally defined to ensure consistency. Examples are: ORGANISASJON, TJENESTELEVERANDØR, FAMILIE, FORETAK, HUSHOLDNING, JOBB, KJORETOY, KOMMUNE, KURS, PERSON or VIRKSOMHET.  class KeyType: description: Description | str label: str name: str   Then it may be defined like this:  keyType: In this case we would choose PERSON.name: Human readable name (Label) of the measure column. This should be similar to the Variable's name. Example for PERSON_MOR: &quot;Person mor&quot;.description: Description of the column contents. Example: &quot;Personens registrerte biologiske mor... &quot;    ","version":"Next","tagName":"h2"},{"title":"Identifier Variable data structure​","type":1,"pageTitle":"How to create Variable metadata","url":"/docs/kudaf/variables-create#identifier-variable-data-structure","content":" This data structure describes the indentifier columns of the Variable.  The identifiers are always based on a Unit Type, which is used to describe a class or group of Units based on a single characteristic, but with no specification of time and geography.  They are needed so we can associate a Measure Variable with a Unit of Measure (or more than one in some cases). A Unit is centrally defined to make joining datasets across organizations possible.  Schema of an Identifier Variable:  class IdentifierVariable: name: str variableRole: str label: str dataType: str format: str keyType: KeyType representedVariables: list[RepresentedVariable]   Fields:  name: A single string in capital letters, consisting of the name of the identifier field for the datum (e.g PERSON_ID). Note that this would typically be equivalent to the original database table's primary key field.label: Human readable name (Label) of the identifier column. This should be similar to the field name above (e.g. for PERSON_ID: &quot;Person ID&quot;).dataType: DataType for the values in the column. One of: [&quot;STRING&quot;, &quot;LONG&quot;, &quot;DOUBLE&quot;, &quot;DATE&quot;]representedVariables: Same as for the Measure Variable described before. A list (normally just one) that describes more in detail what kind of data we can find. It's a combination of: A characteristic of a population to be measured, andHow the measure will be represented The keyType data structure describes in detail the Unit Type for this Variable's identifier column. As explained, these are centrally defined to ensure consistency. Examples are: ORGANISASJON, TJENESTELEVERANDØR, FAMILIE, FORETAK, HUSHOLDNING, JOBB, KJORETOY, KOMMUNE, KURS, PERSON or VIRKSOMHET.  class KeyType: description: Description | str label: str name: str   ","version":"Next","tagName":"h2"},{"title":"Possible Unit Types​","type":1,"pageTitle":"How to create Variable metadata","url":"/docs/kudaf/variables-create#possible-unit-types","content":" ORGANISASJON: Representation of an organization. Columns with this unit type should contain ORGNR. Columns with this unit type should contain ORGNR.TJENESTELEVERANDØR: Representation of a service provider. Columns with this unit type should contain SPID.PERSON: Representation of a person. Columns with this unit type should contain FNR.FAMILIE: Representation of a family. Columns with this unit type should contain FNR.FORETAK: Representation of a foretak. Columns with this unit type should contain ORGNR.VIRKSOMHET: Representation of a virksomhet. Columns with this unit type should contain ORGNR.HUSHOLDNING: Representation of a husholdning. Columns with this unit type should contain FNR.JOBB: Representation of a job. Columns with this unit type should contain FNR_ORGNR. FNR belongs to the employee and ORGNR belongs to the employer.KOMMUNE: Representation of a kommune. Columns with this unit type should contain a valid kommune number.KURS: Representation of a course. Columns with this unit type should contain FNR_KURSID. Where FNR belongs to the participant and KURSID is the NUDB course id.KJORETOY: Representation of a vehicle. Columns with this unit type should contain FNR_REGNR. Where FNR is the owner of the vehicle, and REGNR is the registration number for the vehicle.  (TO DO): Identifier Variable examples    ","version":"Next","tagName":"h3"},{"title":"Attribute Variable data structure​","type":1,"pageTitle":"How to create Variable metadata","url":"/docs/kudaf/variables-create#attribute-variable-data-structure","content":" This data structure describes TEMPORAL attributes of this particular datum.  It is optional because not every datum has a relationship to time – the Event Period.  Hence, depending on the Temporality Type of the Variable:  For a FIXED temporality type Variable (i.e. time-invariant) we DO NOT include an Attribute Variable.For an ACCUMULATED temporality type Variable we would typically DO include TWO Attribute Variables: START and STOP. If only one is included, that would mean: All data until the given stop time if only STOP is included, and since the earliest available data.All data since the given start time if only START is included, and up until the latest available data. For a STATUS temporality type Variable we always DO include TWO Attribute Variables: START and STOP, with THE SAME dates.For an EVENT temporality type Variable we DO include ONE or TWO Attribute Variables, depending on how we want to characterize the Event in question. It could be: START and STOP dates/times, or INSTANT...  Schema of an Attribute Variable:  class AttributeVariable: name: str variableRole: str label: str dataType: str representedVariables: list[RepresentedVariable]   Fields:  name: A single string in capital letters.label: Human readable name (Label). This should be similar to the field name above (e.g. for START: &quot;Start&quot;).dataType: DataType for the values in the column. One of: [&quot;STRING&quot;, &quot;LONG&quot;, &quot;DOUBLE&quot;, &quot;DATE&quot;, &quot;INSTANT&quot;]representedVariables: Same as for the Measure Variable described before.  Below is an example of the Attribute Variables for an ACCUMULATED temporality type Variable:  &quot;attributeVariables&quot;: [ { &quot;dataType&quot;: &quot;Instant&quot;, &quot;label&quot;: &quot;Stoppdato&quot;, &quot;name&quot;: &quot;STOP&quot;, &quot;representedVariables&quot;: [ { &quot;description&quot;: { &quot;languageCode&quot;: &quot;nb&quot;, &quot;value&quot;: &quot;Stoppdato/sluttdato for hendelsen&quot; }, &quot;validPeriod&quot;: { &quot;start&quot;: -25567, &quot;stop&quot;: 18993 }, &quot;valueDomain&quot;: { &quot;description&quot;: &quot;N/A&quot;, &quot;unitOfMeasure&quot;: &quot;N/A&quot; } } ], &quot;variableRole&quot;: &quot;Stop&quot; }, { &quot;dataType&quot;: &quot;Instant&quot;, &quot;label&quot;: &quot;Startdato&quot;, &quot;name&quot;: &quot;START&quot;, &quot;representedVariables&quot;: [ { &quot;description&quot;: { &quot;languageCode&quot;: &quot;nb&quot;, &quot;value&quot;: &quot;Startdato/måletidspunktet for hendelsen&quot; }, &quot;validPeriod&quot;: { &quot;start&quot;: -25567, &quot;stop&quot;: 18993 }, &quot;valueDomain&quot;: { &quot;description&quot;: &quot;N/A&quot;, &quot;unitOfMeasure&quot;: &quot;N/A&quot; } } ], &quot;variableRole&quot;: &quot;Start&quot; } ]  ","version":"Next","tagName":"h2"},{"title":"Xymon-integrasjon på verktøykasser","type":0,"sectionRef":"#","url":"/docs/nettadministrasjon/xymon","content":"","keywords":"","version":"Next"},{"title":"Innledning​","type":1,"pageTitle":"Xymon-integrasjon på verktøykasser","url":"/docs/nettadministrasjon/xymon#innledning","content":" Xymon (tidl. Hobbit) er et tjenesteovervåkningsverktøy som kjører på verktøykassen, og som er integrert med NAV-installasjonen der. Det er kun utstyr som legges inn i kategorien SRV i NAV som blir automatisk overvåket av Xymon. For mer informasjon om Xymon, se Xymons hjemmesider.  Da Hobbit ble omdøpt til Xymon, var det en del begrepsbruk og konfigurasjonsfiler som også endret seg. Dersom du er vant med de gamle filene og begrepene, kan du leseXymonsoppgraderingsnotater.  ","version":"Next","tagName":"h2"},{"title":"Tjenester​","type":1,"pageTitle":"Xymon-integrasjon på verktøykasser","url":"/docs/nettadministrasjon/xymon#tjenester","content":" Det er Xymon og Apache som må kjøre for at tjenesten skal virke.  xymon  Daemon:Start/stop: /etc/init.d/xymon {start/stop/restart}Configfiler: /etc/xymon/  apache2  Daemon: /usr/sbin/apache2Start/stopp: /etc/init.d/apache2 {start/stop/restart/reload}config: /etc/apache2/sites-enabled/25-nav-secure.conf  ","version":"Next","tagName":"h2"},{"title":"Brukerdokumentasjon​","type":1,"pageTitle":"Xymon-integrasjon på verktøykasser","url":"/docs/nettadministrasjon/xymon#brukerdokumentasjon","content":" ","version":"Next","tagName":"h2"},{"title":"Maskiner som overvåkes med Xymon​","type":1,"pageTitle":"Xymon-integrasjon på verktøykasser","url":"/docs/nettadministrasjon/xymon#maskiner-som-overvåkes-med-xymon","content":" Hvert kvarter kjører et script på verktøykassen som konfigurerer Xymon til å overvåke alle maskiner fra SRV-kategorien i NAV. Dette gjør at det er bare ett sted for å vedlikeholde listen over servere som skal overvåkes i NAV og Xymon. Når en maskin registreres i NAV, kan den legges inn i opptil flere grupper (device groups). Disse gruppene blir også brukt som grupper i Xymon.  ","version":"Next","tagName":"h3"},{"title":"Overvåking av grupper​","type":1,"pageTitle":"Xymon-integrasjon på verktøykasser","url":"/docs/nettadministrasjon/xymon#overvåking-av-grupper","content":" Man kan sette opp overvåking av bestemte services for hver enkelt gruppe. Man kan f.eks overvåke SMTP for alle servere som ligger i mail-gruppa. Dette gjøres ved å logge på verktøykassen med ssh. Man redigerer filen /etc/nav/navsrv2hobbit.conf. Her er et eksempel på hvordan man kan gjøre det:  [ALL] services = ssh [MAIL] services = smtp   Her ser vi at ssh overvåkes for samtlige maskiner, mens SMTP overvåkes bare for den gruppen av maskiner som befinner seg i gruppen MAIL i NAV. SSH ligger som standardovervåking for samtlige maskiner.  ","version":"Next","tagName":"h3"},{"title":"Overvåking av maskiner​","type":1,"pageTitle":"Xymon-integrasjon på verktøykasser","url":"/docs/nettadministrasjon/xymon#overvåking-av-maskiner","content":" Man kan sette opp bestemte overvåkinger for hver enkelt maskin, ved å legge til sine egne konfigurasjonsfiler på verktøykassen, under/etc/xymon/analysis.d/. Verktøykassen overvåker seg selv med Xymon på denne måten, og konfigurasjonen som brukes her kan ses i filen vk.cfg.  Et eksempel på en slik konfigurasjonsfil kan se slik ut:  HOST=testserver.uninett.no PROC cfenvd 1 1 yellow PROC cfservd 1 1 red PROC munin-node 1 -1 red PROC sshd PROC ntpd 1 1 yellow DISK /home 95 98 DISK /var/log 95 98  Her ser vi hvilke bestemte prosesser som er satt opp til overvåking med at det står PROC foran prosessnavnet. Bak hver prosess kan man ha et tall som angir hvor mange prosesser som kan kjøres. På prosessencfenvd står det først tallet 1, som betyr at det minimum må være én prosess (mincount) ved det navnet og bak tallet står det 1(maxcount). Dette betyr at det kan kun være én (og bare én) prosess avcfenvd. Hvis ikke dette er oppfylt vil den blir markert som gul i Xymon, i motsetning til cfservd, der det vil bli markert som rødt. Man kan på denne måten angi hvor mange prosesser som skal kjøre. I tillegg kan man bruke verdien -1, som betyr at det kan være uendelig mange prosesser som kjøres.  I tillegg kan man sette opp overvåking av disk-partisjoner. Hvis /home(som i eks. over) fylles opp til 95% vil den bli gul, mens kommer den på 98% vil den flagges rød i Xymon.  Som standard på samtlige servere står det følgende regler (/etc/xymon/analysis.cfg):  DEFAULT UP 1h LOAD 5.0 10.0 DISK * 90 95 MEMPHYS 100 101 MEMSWAP 50 80 MEMACT 90 97  ","version":"Next","tagName":"h3"},{"title":"Installere xymon-client på klienten​","type":1,"pageTitle":"Xymon-integrasjon på verktøykasser","url":"/docs/nettadministrasjon/xymon#installere-xymon-client-på-klienten","content":" Programmet xymon-client må installeres på klienten som skal overvåkes.IP-adressen til verktøykassen må settes i/etc/default/xymon-client, slik at xymon-client vet hvor den skal rapportere.For Windows-maskiner som skal overvåkes måBBWin installeres på klienten.  ","version":"Next","tagName":"h3"},{"title":"Varsling​","type":1,"pageTitle":"Xymon-integrasjon på verktøykasser","url":"/docs/nettadministrasjon/xymon#varsling","content":" Varsling fra Xymon er integrert med NAVs hendelses- og alarmsystem, og styres gjennom din personlige alarmprofil i NAV. Her viser vi tildokumentasjon om NAV.  ","version":"Next","tagName":"h3"},{"title":"Kontaktadresser​","type":1,"pageTitle":"Xymon-integrasjon på verktøykasser","url":"/docs/nettadministrasjon/xymon#kontaktadresser","content":" kontakt@sikt.no ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}